
StarterKit.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000018  00800100  0000417c  0000427c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000417c  00000000  00000000  00000100  2**8
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000008a5  00800118  00800118  00004294  2**1
                  ALLOC
  3 .comment      00000011  00000000  00000000  00004294  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000042a8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000420  00000000  00000000  000042e8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003d4c  00000000  00000000  00004708  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000010fa  00000000  00000000  00008454  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002c09  00000000  00000000  0000954e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000008e8  00000000  00000000  0000c158  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000edb  00000000  00000000  0000ca40  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000034a6  00000000  00000000  0000d91b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000428  00000000  00000000  00010dc8  2**3
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 69 0e 	jmp	0x1cd2	; 0x1cd2 <__ctors_end>
       4:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__bad_interrupt>
       8:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__bad_interrupt>
       c:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__bad_interrupt>
      10:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__bad_interrupt>
      14:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__bad_interrupt>
      18:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__bad_interrupt>
      1c:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__bad_interrupt>
      20:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__bad_interrupt>
      24:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__bad_interrupt>
      28:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__bad_interrupt>
      2c:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__bad_interrupt>
      30:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__bad_interrupt>
      34:	0c 94 3d 0f 	jmp	0x1e7a	; 0x1e7a <__vector_13>
      38:	0c 94 7c 0f 	jmp	0x1ef8	; 0x1ef8 <__vector_14>
      3c:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__bad_interrupt>
      40:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__bad_interrupt>
      44:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__bad_interrupt>
      48:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__bad_interrupt>
      4c:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__bad_interrupt>
      50:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__bad_interrupt>
      54:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__bad_interrupt>
      58:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__bad_interrupt>
      5c:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__bad_interrupt>
      60:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__bad_interrupt>
      64:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__bad_interrupt>
      68:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__bad_interrupt>
      6c:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	5a 55       	subi	r21, 0x5A	; 90
      72:	01 20       	and	r0, r1
      74:	01 01       	movw	r0, r2
      76:	00 38       	cpi	r16, 0x80	; 128
      78:	08 00       	.word	0x0008	; ????
	...

00000090 <io_table>:
      90:	81 00 45 00 5d ff 5e 10 27 ff 2a d2 2b 7d 21 0c     ..E.].^.'.*.+}!.
      a0:	22 fb 85 00 84 00 89 03 88 8d 81 09 6f 02 44 42     "...........o.DB
      b0:	47 00 45 01 b0 83 b3 00 b1 01 24 b9 25 57 8a 1d     G.E.......$.%W..
      c0:	8b 03                                               ..

000000c2 <patchCommands>:
      c2:	09 12 0c 12 14 12 18 12 1f 12 27 12 2c 12 31 12     ..........'.,.1.
      d2:	34 12 44 12 47 12 4a 12 85 12 88 12 8b 12           4.D.G.J.......

000000e0 <fader>:
      e0:	00 40 88 91 d2 e4 ad b5 b6 be bf ff                 .@..........

000000ec <font>:
	...
     140:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
     150:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
     160:	00 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
     180:	00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00 ff     ................
     190:	00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     1d4:	00 00 00 ff 00 ff 00 00 ff ff ff ff ff 00 00 ff     ................
     1e4:	00 ff 00 00 00 ff 00 ff 00 00 ff ff ff ff ff 00     ................
     1f4:	00 ff 00 ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     214:	ff 00 00 00 00 ff ff ff 00 00 ff 00 ff 00 ff 00     ................
     224:	ff 00 ff 00 00 00 00 ff ff ff 00 00 00 00 ff 00     ................
     234:	ff 00 ff 00 ff 00 ff 00 00 ff ff ff 00 00 00 00     ................
     244:	ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     260:	ff ff 00 00 ff 00 ff ff 00 00 ff 00 00 00 00 ff     ................
     270:	00 00 00 00 ff 00 00 00 00 ff 00 00 00 00 ff 00     ................
     280:	00 ff ff 00 ff 00 00 ff ff 00 00 00 00 00 00 00     ................
	...
     2a8:	00 ff 00 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00     ................
     2b8:	00 00 00 ff 00 00 00 00 ff 00 ff 00 ff 00 ff 00     ................
     2c8:	00 ff 00 00 00 ff ff 00 ff 00 00 00 00 00 00 00     ................
	...
     2ec:	ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
	...
     334:	00 ff 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
     344:	00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00     ................
     354:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
     364:	00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     374:	00 00 00 00 00 00 00 ff 00 00 00 00 00 00 ff 00     ................
     384:	00 00 00 00 ff 00 00 00 00 00 00 ff 00 00 00 00     ................
     394:	00 ff 00 00 00 00 00 ff 00 00 00 00 ff 00 00 00     ................
     3a4:	00 00 ff 00 00 00 00 ff 00 00 00 00 00 00 00 00     ................
	...
     3c8:	00 00 ff 00 00 00 ff 00 ff 00 ff 00 00 ff ff ff     ................
     3d8:	00 00 00 00 ff 00 00 00 00 ff ff ff 00 00 ff 00     ................
     3e8:	ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
     418:	ff 00 00 00 00 00 ff 00 00 00 ff ff ff ff ff 00     ................
     428:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     474:	00 00 00 ff ff 00 00 00 00 ff ff 00 00 00 ff ff     ................
	...
     4b0:	00 00 ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
	...
     504:	00 00 00 ff ff 00 00 00 00 ff ff 00 00 00 00 00     ................
	...
     534:	ff 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00     ................
     544:	ff 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00     ................
     554:	ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     578:	00 00 ff ff 00 00 00 ff 00 00 ff 00 00 ff 00 00     ................
     588:	ff 00 00 ff 00 00 ff 00 00 ff 00 00 ff 00 00 ff     ................
     598:	00 00 ff 00 00 00 ff ff 00 00 00 00 00 00 00 00     ................
	...
     5c0:	00 00 ff 00 00 00 00 ff ff 00 00 00 00 00 ff 00     ................
     5d0:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
     5e0:	ff 00 00 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     608:	00 ff ff ff 00 00 ff 00 00 00 ff 00 00 00 00 00     ................
     618:	ff 00 00 00 00 ff 00 00 00 00 ff 00 00 00 00 ff     ................
     628:	00 00 00 00 ff ff ff ff ff 00 00 00 00 00 00 00     ................
	...
     650:	ff ff ff ff ff 00 00 00 00 00 ff 00 00 00 00 ff     ................
     660:	00 00 00 00 ff ff 00 00 00 00 00 00 ff 00 ff 00     ................
     670:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     698:	00 00 00 ff 00 00 00 00 ff ff 00 00 00 ff 00 ff     ................
     6a8:	00 00 ff 00 00 ff 00 00 ff ff ff ff ff 00 00 00     ................
     6b8:	00 ff 00 00 00 00 00 ff 00 00 00 00 00 00 00 00     ................
	...
     6e0:	ff ff ff ff ff 00 ff 00 00 00 00 00 ff ff ff ff     ................
     6f0:	00 00 00 00 00 00 ff 00 00 00 00 00 ff 00 ff 00     ................
     700:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     728:	00 00 ff ff 00 00 00 ff 00 00 00 00 ff 00 00 00     ................
     738:	00 00 ff ff ff ff 00 00 ff 00 00 00 ff 00 ff 00     ................
     748:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     770:	ff ff ff ff ff 00 00 00 00 00 ff 00 00 00 00 ff     ................
     780:	00 00 00 00 00 ff 00 00 00 00 ff 00 00 00 00 00     ................
     790:	ff 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
     7b8:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     7c8:	ff 00 00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00     ................
     7d8:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     800:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     810:	ff 00 00 ff ff ff ff 00 00 00 00 00 ff 00 00 00     ................
     820:	00 ff 00 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
	...
     854:	00 ff ff 00 00 00 00 ff ff 00 00 00 00 00 00 00     ................
     864:	00 00 00 ff ff 00 00 00 00 ff ff 00 00 00 00 00     ................
	...
     89c:	00 ff ff 00 00 00 00 ff ff 00 00 00 00 00 00 00     ................
     8ac:	00 00 00 ff ff 00 00 00 00 ff ff 00 00 00 ff ff     ................
	...
     8e0:	00 ff 00 00 00 00 ff 00 00 00 00 ff 00 00 00 00     ................
     8f0:	00 00 ff 00 00 00 00 00 00 ff 00 00 00 00 00 00     ................
	...
     92c:	ff ff ff ff ff 00 00 00 00 00 00 00 ff ff ff ff     ................
     93c:	ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     96c:	00 00 00 ff 00 00 00 00 00 00 ff 00 00 00 00 00     ................
     97c:	00 ff 00 00 00 00 ff 00 00 00 00 ff 00 00 00 00     ................
	...
     9b0:	00 ff ff ff 00 00 ff 00 00 00 ff 00 00 00 00 ff     ................
     9c0:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
     9d0:	00 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
     9f8:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 ff ff     ................
     a08:	ff 00 ff 00 ff 00 ff 00 ff 00 ff ff ff 00 ff 00     ................
     a18:	00 00 00 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     a40:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     a50:	ff 00 ff ff ff ff ff 00 ff 00 00 00 ff 00 ff 00     ................
     a60:	00 00 ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     a88:	ff ff ff ff 00 00 00 ff 00 00 ff 00 00 ff 00 00     ................
     a98:	ff 00 00 ff ff ff 00 00 00 ff 00 00 ff 00 00 ff     ................
     aa8:	00 00 ff 00 ff ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     ad0:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     ae0:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
     af0:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     b18:	ff ff ff ff 00 00 00 ff 00 00 ff 00 00 ff 00 00     ................
     b28:	ff 00 00 ff 00 00 ff 00 00 ff 00 00 ff 00 00 ff     ................
     b38:	00 00 ff 00 ff ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     b60:	ff ff ff ff ff 00 ff 00 00 00 00 00 ff 00 00 00     ................
     b70:	00 00 ff ff ff ff 00 00 ff 00 00 00 00 00 ff 00     ................
     b80:	00 00 00 00 ff ff ff ff ff 00 00 00 00 00 00 00     ................
	...
     ba8:	ff ff ff ff ff 00 ff 00 00 00 00 00 ff 00 00 00     ................
     bb8:	00 00 ff ff ff ff 00 00 ff 00 00 00 00 00 ff 00     ................
     bc8:	00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     bf0:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     c00:	00 00 ff 00 00 00 00 00 ff 00 00 ff ff 00 ff 00     ................
     c10:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     c38:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     c48:	ff 00 ff ff ff ff ff 00 ff 00 00 00 ff 00 ff 00     ................
     c58:	00 00 ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     c80:	00 ff ff ff 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
     c90:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
     ca0:	ff 00 00 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     cc8:	00 00 ff ff ff 00 00 00 00 ff 00 00 00 00 00 ff     ................
     cd8:	00 00 00 00 00 ff 00 00 00 00 00 ff 00 00 ff 00     ................
     ce8:	00 ff 00 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
	...
     d10:	ff 00 00 00 ff 00 ff 00 00 ff 00 00 ff 00 ff 00     ................
     d20:	00 00 ff ff 00 00 00 00 ff 00 ff 00 00 00 ff 00     ................
     d30:	00 ff 00 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     d58:	ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
     d68:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
     d78:	00 00 00 00 ff ff ff ff ff 00 00 00 00 00 00 00     ................
	...
     da0:	ff 00 00 00 ff 00 ff ff 00 ff ff 00 ff 00 ff 00     ................
     db0:	ff 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00     ................
     dc0:	00 00 ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     de8:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff ff 00 00     ................
     df8:	ff 00 ff 00 ff 00 ff 00 ff 00 00 ff ff 00 ff 00     ................
     e08:	00 00 ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     e30:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     e40:	ff 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00     ................
     e50:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     e78:	ff ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     e88:	ff 00 ff ff ff ff 00 00 ff 00 00 00 00 00 ff 00     ................
     e98:	00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     ec0:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     ed0:	ff 00 ff 00 00 00 ff 00 ff 00 ff 00 ff 00 ff 00     ................
     ee0:	00 ff 00 00 00 ff ff 00 ff 00 00 00 00 00 00 00     ................
	...
     f08:	ff ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     f18:	ff 00 ff ff ff ff 00 00 ff 00 ff 00 00 00 ff 00     ................
     f28:	00 ff 00 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     f50:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     f60:	00 00 00 ff ff ff 00 00 00 00 00 00 ff 00 ff 00     ................
     f70:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     f98:	ff ff ff ff ff 00 00 00 ff 00 00 00 00 00 ff 00     ................
     fa8:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
     fb8:	ff 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
     fe0:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     ff0:	ff 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00     ................
    1000:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
    1028:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    1038:	ff 00 ff 00 00 00 ff 00 00 ff 00 ff 00 00 00 ff     ................
    1048:	00 ff 00 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
    1070:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    1080:	ff 00 ff 00 00 00 ff 00 ff 00 ff 00 ff 00 ff 00     ................
    1090:	ff 00 ff 00 00 ff 00 ff 00 00 00 00 00 00 00 00     ................
	...
    10b8:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 00 ff 00 ff     ................
    10c8:	00 00 00 00 ff 00 00 00 00 ff 00 ff 00 00 ff 00     ................
    10d8:	00 00 ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
    1100:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 00 ff 00 ff     ................
    1110:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    1120:	ff 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
    1148:	ff ff ff ff ff 00 00 00 00 00 ff 00 00 00 00 ff     ................
    1158:	00 00 00 00 ff 00 00 00 00 ff 00 00 00 00 ff 00     ................
    1168:	00 00 00 00 ff ff ff ff ff 00 00 00 00 00 00 00     ................
	...
    1188:	00 00 00 ff ff ff 00 00 00 ff 00 00 00 00 00 ff     ................
    1198:	00 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00     ................
    11a8:	00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00     ................
    11b8:	00 00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
	...
    11d8:	ff 00 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00     ................
    11e8:	00 00 00 00 ff 00 00 00 00 00 00 ff 00 00 00 00     ................
    11f8:	00 ff 00 00 00 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
    1218:	00 00 00 ff ff ff 00 00 00 00 00 ff 00 00 00 00     ................
    1228:	00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00     ................
    1238:	00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff     ................
    1248:	00 00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
	...
    1264:	ff 00 00 00 00 ff 00 ff 00 00 ff 00 00 00 ff 00     ................
	...
    12e0:	ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    12f0:	00 00 00 ff 00 00 00 00 00 00 ff 00 00 00 00 00     ................
    1300:	00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    134c:	00 ff ff ff 00 00 00 00 00 00 ff 00 00 ff ff ff     ................
    135c:	ff 00 ff 00 00 00 ff 00 00 ff ff ff ff 00 00 00     ................
	...
    1388:	ff 00 00 00 00 00 ff 00 00 00 00 00 ff ff ff ff     ................
    1398:	00 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00     ................
    13a8:	00 00 ff 00 ff ff ff ff 00 00 00 00 00 00 00 00     ................
	...
    13dc:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    13ec:	00 00 ff 00 00 00 ff 00 00 ff ff ff 00 00 00 00     ................
	...
    141c:	ff 00 00 00 00 00 ff 00 00 ff ff ff ff 00 ff 00     ................
    142c:	00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00     ................
    143c:	00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    146c:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff ff ff ff     ................
    147c:	00 00 ff 00 00 00 00 00 00 ff ff ff 00 00 00 00     ................
	...
    14a8:	00 00 ff ff 00 00 00 ff 00 00 ff 00 00 ff 00 00     ................
    14b8:	00 00 ff ff ff 00 00 00 00 ff 00 00 00 00 00 ff     ................
    14c8:	00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00     ................
	...
    14fc:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    150c:	ff 00 ff 00 00 00 ff 00 00 ff ff ff ff 00 00 00     ................
    151c:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
    1538:	ff 00 00 00 00 00 ff 00 00 00 00 00 ff ff ff ff     ................
    1548:	00 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00     ................
    1558:	00 00 ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
    1580:	00 00 ff 00 00 00 00 00 00 00 00 00 00 ff ff 00     ................
    1590:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    15a0:	ff 00 00 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
    15cc:	ff 00 00 00 00 00 00 00 00 00 00 ff ff 00 00 00     ................
    15dc:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
    15ec:	00 00 00 00 ff 00 00 ff 00 00 ff 00 00 00 ff ff     ................
	...
    1610:	ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
    1620:	ff 00 ff 00 00 ff 00 00 ff ff ff 00 00 00 ff 00     ................
    1630:	00 ff 00 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
    1658:	00 ff ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
    1668:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    1678:	ff 00 00 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
    16ac:	ff ff 00 ff 00 00 ff 00 ff 00 ff 00 ff 00 ff 00     ................
    16bc:	ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 00 00     ................
	...
    16f4:	ff 00 ff ff 00 00 ff ff 00 00 ff 00 ff 00 00 00     ................
    1704:	ff 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00 00 00     ................
	...
    173c:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    174c:	ff 00 ff 00 00 00 ff 00 00 ff ff ff 00 00 00 00     ................
	...
    1784:	ff ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    1794:	ff 00 ff 00 00 00 ff 00 ff ff ff ff 00 00 ff 00     ................
    17a4:	00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    17cc:	00 ff ff ff ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    17dc:	ff 00 ff 00 00 00 ff 00 00 ff ff ff ff 00 00 00     ................
    17ec:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
    1814:	ff 00 ff ff 00 00 ff ff 00 00 ff 00 ff 00 00 00     ................
    1824:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
    185c:	00 ff ff ff ff 00 ff 00 00 00 00 00 00 ff ff ff     ................
    186c:	00 00 00 00 00 00 ff 00 ff ff ff ff 00 00 00 00     ................
	...
    1898:	00 00 ff 00 00 00 00 00 ff 00 00 00 ff ff ff ff     ................
    18a8:	ff 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    18b8:	ff 00 00 00 00 00 00 ff ff 00 00 00 00 00 00 00     ................
	...
    18ec:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    18fc:	ff 00 ff 00 00 ff ff 00 00 ff ff 00 ff 00 00 00     ................
	...
    1934:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    1944:	ff 00 00 ff 00 ff 00 00 00 00 ff 00 00 00 00 00     ................
	...
    197c:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 ff 00     ................
    198c:	ff 00 ff 00 ff 00 ff 00 00 ff 00 ff 00 00 00 00     ................
	...
    19c4:	ff 00 00 00 ff 00 00 ff 00 ff 00 00 00 00 ff 00     ................
    19d4:	00 00 00 ff 00 ff 00 00 ff 00 00 00 ff 00 00 00     ................
	...
    1a0c:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    1a1c:	ff 00 00 ff 00 ff 00 00 00 00 ff 00 00 00 00 ff     ................
    1a2c:	00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1a54:	ff ff ff ff ff 00 00 00 00 ff 00 00 00 00 ff 00     ................
    1a64:	00 00 00 ff 00 00 00 00 ff ff ff ff ff 00 00 00     ................
	...
    1a8c:	00 ff 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
    1a9c:	00 00 ff 00 00 00 00 ff 00 00 00 00 00 00 ff 00     ................
    1aac:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    1abc:	00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1ad4:	ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
    1ae4:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
    1af4:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    1b04:	ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1b14:	00 00 00 00 00 00 00 ff 00 00 00 00 00 00 ff 00     ................
    1b24:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    1b34:	00 ff 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
    1b44:	00 00 ff 00 00 00 00 ff 00 00 00 00 00 00 00 00     ................
	...
    1b74:	00 ff 00 00 ff 00 ff 00 ff 00 ff 00 ff 00 00 ff     ................
	...

00001ba4 <__c.2356>:
    1ba4:	57 65 6c 63 6f 6d 65 20 74 6f 20 47 61 6d 65 00     Welcome to Game.

00001bb4 <__c.2358>:
    1bb4:	50 6c 65 61 73 65 20 65 6e 6a 6f 79 20 47 61 6d     Please enjoy Gam
    1bc4:	65 00                                               e.

00001bc6 <__c.2360>:
    1bc6:	55 50 20 2d 20 53 74 61 72 74 20 47 61 6d 65 00     UP - Start Game.

00001bd6 <__c.2362>:
    1bd6:	44 4f 57 4e 20 2d 20 49 6e 73 74 72 75 63 74 69     DOWN - Instructi
    1be6:	6f 6e 73 00                                         ons.

00001bea <__c.2364>:
    1bea:	50 6c 65 61 73 65 00                                Please.

00001bf1 <__c.2366>:
    1bf1:	43 6f 6c 6c 65 63 74 20 66 61 6c 6c 69 6e 67 20     Collect falling 
    1c01:	61 72 74 65 66 61 63 74 73 00                       artefacts.

00001c0b <__c.2368>:
    1c0b:	41 76 6f 69 64 20 61 72 74 65 66 61 63 74 20 6c     Avoid artefact l
    1c1b:	6f 76 69 6e 67 20 42 6f 73 73 00                    oving Boss.

00001c26 <__c.2370>:
    1c26:	35 20 61 72 74 65 66 61 63 74 73 20 67 69 76 65     5 artefacts give
    1c36:	20 79 6f 75 20 31 20 6d 6f 6e 65 79 00               you 1 money.

00001c43 <__c.2372>:
    1c43:	43 6f 6c 6c 65 63 74 20 32 30 20 6d 6f 6e 65 79     Collect 20 money
    1c53:	20 74 6f 20 67 65 74 20 74 68 6f 72 6e 73 20 61      to get thorns a
    1c63:	72 6d 6f 75 72 00                                   rmour.

00001c69 <__c.2374>:
    1c69:	52 75 6e 20 69 6e 74 6f 20 62 6f 73 73 20 74 6f     Run into boss to
    1c79:	20 6b 69 6c 6c 20 68 69 6d 20 77 69 74 68 20 74      kill him with t
    1c89:	68 6f 72 6e 73 00                                   horns.

00001c8f <__c.2376>:
    1c8f:	55 50 20 2d 20 53 74 61 72 74 20 47 61 6d 65 00     UP - Start Game.

00001c9f <__c.2378>:
    1c9f:	41 72 74 65 66 61 63 74 73 00                       Artefacts.

00001ca9 <__c.2380>:
    1ca9:	42 75 79 20 54 68 6f 72 6e 73 20 2d 20 45 00        Buy Thorns - E.

00001cb8 <__c.2382>:
    1cb8:	48 65 61 6c 74 68 00                                Health.

00001cbf <__c.2384>:
    1cbf:	45 6e 65 6d 79 48 65 61 6c 74 68 00                 EnemyHealth.

00001ccb <__c.2386>:
    1ccb:	4d 6f 6e 65 79 00 00                                Money..

00001cd2 <__ctors_end>:
    1cd2:	11 24       	eor	r1, r1
    1cd4:	1f be       	out	0x3f, r1	; 63
    1cd6:	cf ef       	ldi	r28, 0xFF	; 255
    1cd8:	d0 e1       	ldi	r29, 0x10	; 16
    1cda:	de bf       	out	0x3e, r29	; 62
    1cdc:	cd bf       	out	0x3d, r28	; 61

00001cde <__do_copy_data>:
    1cde:	11 e0       	ldi	r17, 0x01	; 1
    1ce0:	a0 e0       	ldi	r26, 0x00	; 0
    1ce2:	b1 e0       	ldi	r27, 0x01	; 1
    1ce4:	ec e7       	ldi	r30, 0x7C	; 124
    1ce6:	f1 e4       	ldi	r31, 0x41	; 65
    1ce8:	02 c0       	rjmp	.+4      	; 0x1cee <__do_copy_data+0x10>
    1cea:	05 90       	lpm	r0, Z+
    1cec:	0d 92       	st	X+, r0
    1cee:	a8 31       	cpi	r26, 0x18	; 24
    1cf0:	b1 07       	cpc	r27, r17
    1cf2:	d9 f7       	brne	.-10     	; 0x1cea <__do_copy_data+0xc>

00001cf4 <__do_clear_bss>:
    1cf4:	29 e0       	ldi	r18, 0x09	; 9
    1cf6:	a8 e1       	ldi	r26, 0x18	; 24
    1cf8:	b1 e0       	ldi	r27, 0x01	; 1
    1cfa:	01 c0       	rjmp	.+2      	; 0x1cfe <.do_clear_bss_start>

00001cfc <.do_clear_bss_loop>:
    1cfc:	1d 92       	st	X+, r1

00001cfe <.do_clear_bss_start>:
    1cfe:	ad 3b       	cpi	r26, 0xBD	; 189
    1d00:	b2 07       	cpc	r27, r18
    1d02:	e1 f7       	brne	.-8      	; 0x1cfc <.do_clear_bss_loop>

00001d04 <wdt_init>:
	  if (j == count) {
		 WriteEeprom(i*EEPROM_BLOCK_SIZE,(u8)EEPROM_FREE_BLOCK);
		 WriteEeprom(i*EEPROM_BLOCK_SIZE+1,(u8)(EEPROM_FREE_BLOCK>>8));
	  }
   }
}
    1d04:	14 be       	out	0x34, r1	; 52
    1d06:	0f b6       	in	r0, 0x3f	; 63
    1d08:	f8 94       	cli
    1d0a:	a8 95       	wdr
    1d0c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
    1d10:	88 61       	ori	r24, 0x18	; 24
    1d12:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
    1d16:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
    1d1a:	0f be       	out	0x3f, r0	; 63

00001d1c <Initialize>:
    1d1c:	f8 94       	cli
    1d1e:	80 e9       	ldi	r24, 0x90	; 144
    1d20:	90 e0       	ldi	r25, 0x00	; 0
    1d22:	42 ec       	ldi	r20, 0xC2	; 194
    1d24:	50 e0       	ldi	r21, 0x00	; 0
    1d26:	fc 01       	movw	r30, r24
    1d28:	25 91       	lpm	r18, Z+
    1d2a:	34 91       	lpm	r19, Z
    1d2c:	f9 01       	movw	r30, r18
    1d2e:	ff 27       	eor	r31, r31
    1d30:	30 83       	st	Z, r19
    1d32:	02 96       	adiw	r24, 0x02	; 2
    1d34:	48 17       	cp	r20, r24
    1d36:	59 07       	cpc	r21, r25
    1d38:	b1 f7       	brne	.-20     	; 0x1d26 <Initialize+0xa>
    1d3a:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <isEepromFormatted>
    1d3e:	81 11       	cpse	r24, r1
    1d40:	02 c0       	rjmp	.+4      	; 0x1d46 <Initialize+0x2a>
    1d42:	0e 94 d0 11 	call	0x23a0	; 0x23a0 <FormatEeprom>
    1d46:	e5 e0       	ldi	r30, 0x05	; 5
    1d48:	f7 e0       	ldi	r31, 0x07	; 7
    1d4a:	80 e8       	ldi	r24, 0x80	; 128
    1d4c:	81 93       	st	Z+, r24
    1d4e:	99 e0       	ldi	r25, 0x09	; 9
    1d50:	e1 31       	cpi	r30, 0x11	; 17
    1d52:	f9 07       	cpc	r31, r25
    1d54:	d9 f7       	brne	.-10     	; 0x1d4c <Initialize+0x30>
    1d56:	85 e0       	ldi	r24, 0x05	; 5
    1d58:	97 e0       	ldi	r25, 0x07	; 7
    1d5a:	90 93 12 09 	sts	0x0912, r25	; 0x800912 <mix_pos+0x1>
    1d5e:	80 93 11 09 	sts	0x0911, r24	; 0x800911 <mix_pos>
    1d62:	10 92 13 09 	sts	0x0913, r1	; 0x800913 <mix_bank>
    1d66:	81 e0       	ldi	r24, 0x01	; 1
    1d68:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <tr4_barrel_lo>
    1d6c:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <tr4_barrel_hi>
    1d70:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <tr4_params>
    1d74:	10 92 16 09 	sts	0x0916, r1	; 0x800916 <mixer>
    1d78:	10 92 1c 09 	sts	0x091C, r1	; 0x80091c <tr2_vol>
    1d7c:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <tr3_vol>
    1d80:	10 92 28 09 	sts	0x0928, r1	; 0x800928 <tr4_vol>
    1d84:	10 92 f0 06 	sts	0x06F0, r1	; 0x8006f0 <sync_phase>
    1d88:	10 92 f2 06 	sts	0x06F2, r1	; 0x8006f2 <sync_flags>
    1d8c:	92 e1       	ldi	r25, 0x12	; 18
    1d8e:	90 93 f1 06 	sts	0x06F1, r25	; 0x8006f1 <sync_pulse>
    1d92:	98 ed       	ldi	r25, 0xD8	; 216
    1d94:	90 93 f8 06 	sts	0x06F8, r25	; 0x8006f8 <render_lines_count>
    1d98:	94 e1       	ldi	r25, 0x14	; 20
    1d9a:	90 93 f7 06 	sts	0x06F7, r25	; 0x8006f7 <first_render_line>
    1d9e:	10 92 fc 06 	sts	0x06FC, r1	; 0x8006fc <joypad1_status_hi+0x1>
    1da2:	10 92 fb 06 	sts	0x06FB, r1	; 0x8006fb <joypad1_status_hi>
    1da6:	10 92 00 07 	sts	0x0700, r1	; 0x800700 <joypad2_status_hi+0x1>
    1daa:	10 92 ff 06 	sts	0x06FF, r1	; 0x8006ff <joypad2_status_hi>
    1dae:	80 93 15 09 	sts	0x0915, r24	; 0x800915 <sound_enabled>
    1db2:	0e 94 01 1b 	call	0x3602	; 0x3602 <InitializeVideoMode>
    1db6:	78 94       	sei
    1db8:	0e 94 00 1b 	call	0x3600	; 0x3600 <DisplayLogo>
    1dbc:	0e 94 ab 1b 	call	0x3756	; 0x3756 <main>
    1dc0:	0c 94 bc 20 	jmp	0x4178	; 0x4178 <_exit>

00001dc4 <__bad_interrupt>:
    1dc4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00001dc8 <sub_video_mode1>:
	brne .-4 ;~1 us
	nop
	sbiw r24,1
	brne WaitUs

	ret
    1dc8:	30 e0       	ldi	r19, 0x00	; 0
    1dca:	3a 95       	dec	r19
    1dcc:	f1 f7       	brne	.-4      	; 0x1dca <sub_video_mode1+0x2>
    1dce:	31 ec       	ldi	r19, 0xC1	; 193
    1dd0:	3a 95       	dec	r19
    1dd2:	f1 f7       	brne	.-4      	; 0x1dd0 <sub_video_mode1+0x8>
    1dd4:	c8 e1       	ldi	r28, 0x18	; 24
    1dd6:	d1 e0       	ldi	r29, 0x01	; 1
    1dd8:	08 ed       	ldi	r16, 0xD8	; 216
    1dda:	a0 2e       	mov	r10, r16
    1ddc:	66 27       	eor	r22, r22
    1dde:	76 e0       	ldi	r23, 0x06	; 6

00001de0 <next_tile_line>:
    1de0:	2d d1       	rcall	.+602    	; 0x203c <hsync_pulse>
    1de2:	3b e2       	ldi	r19, 0x2B	; 43
    1de4:	3a 95       	dec	r19
    1de6:	f1 f7       	brne	.-4      	; 0x1de4 <next_tile_line+0x4>
    1de8:	0e 94 1c 0f 	call	0x1e38	; 0x1e38 <render_tile_line>
    1dec:	31 e1       	ldi	r19, 0x11	; 17
    1dee:	3a 95       	dec	r19
    1df0:	f1 f7       	brne	.-4      	; 0x1dee <next_tile_line+0xe>
    1df2:	aa 94       	dec	r10
    1df4:	89 f0       	breq	.+34     	; 0x1e18 <frame_end>
    1df6:	c8 95       	lpm
    1df8:	63 95       	inc	r22
    1dfa:	6c 30       	cpi	r22, 0x0C	; 12
    1dfc:	29 f0       	breq	.+10     	; 0x1e08 <next_tile_row>
    1dfe:	33 e0       	ldi	r19, 0x03	; 3
    1e00:	3a 95       	dec	r19
    1e02:	f1 f7       	brne	.-4      	; 0x1e00 <next_tile_line+0x20>
    1e04:	00 00       	nop
    1e06:	ec cf       	rjmp	.-40     	; 0x1de0 <next_tile_line>

00001e08 <next_tile_row>:
    1e08:	66 27       	eor	r22, r22
    1e0a:	00 24       	eor	r0, r0
    1e0c:	30 e5       	ldi	r19, 0x50	; 80
    1e0e:	c3 0f       	add	r28, r19
    1e10:	d0 1d       	adc	r29, r0
    1e12:	c8 95       	lpm
    1e14:	00 00       	nop
    1e16:	e4 cf       	rjmp	.-56     	; 0x1de0 <next_tile_line>

00001e18 <frame_end>:
    1e18:	35 e0       	ldi	r19, 0x05	; 5
    1e1a:	3a 95       	dec	r19
    1e1c:	f1 f7       	brne	.-4      	; 0x1e1a <frame_end+0x2>
    1e1e:	00 c0       	rjmp	.+0      	; 0x1e20 <frame_end+0x8>
    1e20:	0d d1       	rcall	.+538    	; 0x203c <hsync_pulse>
    1e22:	e0 91 f2 06 	lds	r30, 0x06F2	; 0x8006f2 <sync_flags>
    1e26:	42 e0       	ldi	r20, 0x02	; 2
    1e28:	e4 27       	eor	r30, r20
    1e2a:	e1 60       	ori	r30, 0x01	; 1
    1e2c:	e0 93 f2 06 	sts	0x06F2, r30	; 0x8006f2 <sync_flags>
    1e30:	e2 e0       	ldi	r30, 0x02	; 2
    1e32:	e0 93 36 00 	sts	0x0036, r30	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    1e36:	08 95       	ret

00001e38 <render_tile_line>:
    1e38:	de 01       	movw	r26, r28
    1e3a:	4d 91       	ld	r20, X+
    1e3c:	5d 91       	ld	r21, X+
    1e3e:	67 9f       	mul	r22, r23
    1e40:	c0 01       	movw	r24, r0
    1e42:	48 0f       	add	r20, r24
    1e44:	59 1f       	adc	r21, r25
    1e46:	fa 01       	movw	r30, r20
    1e48:	28 e2       	ldi	r18, 0x28	; 40

00001e4a <mode1_loop>:
    1e4a:	05 91       	lpm	r16, Z+
    1e4c:	08 b9       	out	0x08, r16	; 8
    1e4e:	4d 91       	ld	r20, X+
    1e50:	05 91       	lpm	r16, Z+
    1e52:	08 b9       	out	0x08, r16	; 8
    1e54:	5d 91       	ld	r21, X+
    1e56:	05 91       	lpm	r16, Z+
    1e58:	08 b9       	out	0x08, r16	; 8
    1e5a:	00 c0       	rjmp	.+0      	; 0x1e5c <mode1_loop+0x12>
    1e5c:	05 91       	lpm	r16, Z+
    1e5e:	08 b9       	out	0x08, r16	; 8
    1e60:	48 0f       	add	r20, r24
    1e62:	59 1f       	adc	r21, r25
    1e64:	05 91       	lpm	r16, Z+
    1e66:	08 b9       	out	0x08, r16	; 8
    1e68:	05 91       	lpm	r16, Z+
    1e6a:	fa 01       	movw	r30, r20
    1e6c:	2a 95       	dec	r18
    1e6e:	08 b9       	out	0x08, r16	; 8
    1e70:	61 f7       	brne	.-40     	; 0x1e4a <mode1_loop>
    1e72:	c8 95       	lpm
    1e74:	00 27       	eor	r16, r16
    1e76:	08 b9       	out	0x08, r16	; 8
    1e78:	08 95       	ret

00001e7a <__vector_13>:
    1e7a:	0f 92       	push	r0
    1e7c:	1f 92       	push	r1
    1e7e:	ef 93       	push	r30
    1e80:	ff 93       	push	r31
    1e82:	ff b7       	in	r31, 0x3f	; 63
    1e84:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1e88:	ff 93       	push	r31
    1e8a:	e2 fd       	sbrc	r30, 2
    1e8c:	04 c0       	rjmp	.+8      	; 0x1e96 <__vector_13+0x1c>
    1e8e:	e1 fd       	sbrc	r30, 1
    1e90:	02 c0       	rjmp	.+4      	; 0x1e96 <__vector_13+0x1c>
    1e92:	00 00       	nop
    1e94:	00 c0       	rjmp	.+0      	; 0x1e96 <__vector_13+0x1c>
    1e96:	e0 ff       	sbrs	r30, 0
    1e98:	00 c0       	rjmp	.+0      	; 0x1e9a <__vector_13+0x20>
    1e9a:	e0 91 f1 06 	lds	r30, 0x06F1	; 0x8006f1 <sync_pulse>
    1e9e:	ea 95       	dec	r30
    1ea0:	e0 93 f1 06 	sts	0x06F1, r30	; 0x8006f1 <sync_pulse>
    1ea4:	f0 91 f0 06 	lds	r31, 0x06F0	; 0x8006f0 <sync_phase>
    1ea8:	f0 fd       	sbrc	r31, 0
    1eaa:	51 c0       	rjmp	.+162    	; 0x1f4e <sync_hsync>
    1eac:	ec 30       	cpi	r30, 0x0C	; 12
    1eae:	98 f0       	brcs	.+38     	; 0x1ed6 <sync_eq>
    1eb0:	f3 e0       	ldi	r31, 0x03	; 3
    1eb2:	f0 93 89 00 	sts	0x0089, r31	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
    1eb6:	fd e8       	ldi	r31, 0x8D	; 141
    1eb8:	f0 93 88 00 	sts	0x0088, r31	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
    1ebc:	e0 fb       	bst	r30, 0
    1ebe:	28 98       	cbi	0x05, 0	; 5
    1ec0:	26 f4       	brtc	.+8      	; 0x1eca <sync_pre_eq_no_sound_update>
    1ec2:	e1 e0       	ldi	r30, 0x01	; 1
    1ec4:	0e 94 ff 10 	call	0x21fe	; 0x21fe <update_sound>
    1ec8:	b2 c0       	rjmp	.+356    	; 0x202e <sync_end>

00001eca <sync_pre_eq_no_sound_update>:
    1eca:	e5 e1       	ldi	r30, 0x15	; 21
    1ecc:	ea 95       	dec	r30
    1ece:	f1 f7       	brne	.-4      	; 0x1ecc <sync_pre_eq_no_sound_update+0x2>
    1ed0:	00 00       	nop
    1ed2:	28 9a       	sbi	0x05, 0	; 5
    1ed4:	ac c0       	rjmp	.+344    	; 0x202e <sync_end>

00001ed6 <sync_eq>:
    1ed6:	e6 30       	cpi	r30, 0x06	; 6
    1ed8:	08 f1       	brcs	.+66     	; 0x1f1c <sync_post_eq>
    1eda:	00 c0       	rjmp	.+0      	; 0x1edc <sync_eq+0x6>
    1edc:	00 c0       	rjmp	.+0      	; 0x1ede <sync_eq+0x8>
    1ede:	28 98       	cbi	0x05, 0	; 5
    1ee0:	e0 fb       	bst	r30, 0
    1ee2:	e4 e0       	ldi	r30, 0x04	; 4
    1ee4:	16 f4       	brtc	.+4      	; 0x1eea <sync_eq_skip>
    1ee6:	0e 94 ff 10 	call	0x21fe	; 0x21fe <update_sound>

00001eea <sync_eq_skip>:
    1eea:	e4 e0       	ldi	r30, 0x04	; 4
    1eec:	e0 93 36 00 	sts	0x0036, r30	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    1ef0:	e6 e0       	ldi	r30, 0x06	; 6
    1ef2:	e0 93 6f 00 	sts	0x006F, r30	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
    1ef6:	9b c0       	rjmp	.+310    	; 0x202e <sync_end>

00001ef8 <__vector_14>:
    1ef8:	ef 93       	push	r30
    1efa:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1efe:	e2 fd       	sbrc	r30, 2
    1f00:	04 c0       	rjmp	.+8      	; 0x1f0a <__vector_14+0x12>
    1f02:	e1 fd       	sbrc	r30, 1
    1f04:	02 c0       	rjmp	.+4      	; 0x1f0a <__vector_14+0x12>
    1f06:	00 00       	nop
    1f08:	00 c0       	rjmp	.+0      	; 0x1f0a <__vector_14+0x12>
    1f0a:	e0 ff       	sbrs	r30, 0
    1f0c:	00 c0       	rjmp	.+0      	; 0x1f0e <__vector_14+0x16>
    1f0e:	e2 e0       	ldi	r30, 0x02	; 2
    1f10:	00 00       	nop
    1f12:	28 9a       	sbi	0x05, 0	; 5
    1f14:	e0 93 6f 00 	sts	0x006F, r30	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
    1f18:	ef 91       	pop	r30
    1f1a:	18 95       	reti

00001f1c <sync_post_eq>:
    1f1c:	00 c0       	rjmp	.+0      	; 0x1f1e <sync_post_eq+0x2>
    1f1e:	e0 fb       	bst	r30, 0
    1f20:	28 98       	cbi	0x05, 0	; 5
    1f22:	26 f4       	brtc	.+8      	; 0x1f2c <sync_post_eq_no_sound_update>
    1f24:	e1 e0       	ldi	r30, 0x01	; 1
    1f26:	0e 94 ff 10 	call	0x21fe	; 0x21fe <update_sound>
    1f2a:	05 c0       	rjmp	.+10     	; 0x1f36 <sync_pre_eq_cont>

00001f2c <sync_post_eq_no_sound_update>:
    1f2c:	e5 e1       	ldi	r30, 0x15	; 21
    1f2e:	ea 95       	dec	r30
    1f30:	f1 f7       	brne	.-4      	; 0x1f2e <sync_post_eq_no_sound_update+0x2>
    1f32:	00 00       	nop
    1f34:	28 9a       	sbi	0x05, 0	; 5

00001f36 <sync_pre_eq_cont>:
    1f36:	e0 91 f1 06 	lds	r30, 0x06F1	; 0x8006f1 <sync_pulse>
    1f3a:	e0 30       	cpi	r30, 0x00	; 0
    1f3c:	09 f0       	breq	.+2      	; 0x1f40 <sync_pre_eq_cont+0xa>
    1f3e:	77 c0       	rjmp	.+238    	; 0x202e <sync_end>
    1f40:	ed ef       	ldi	r30, 0xFD	; 253
    1f42:	e0 93 f1 06 	sts	0x06F1, r30	; 0x8006f1 <sync_pulse>
    1f46:	e1 e0       	ldi	r30, 0x01	; 1
    1f48:	e0 93 f0 06 	sts	0x06F0, r30	; 0x8006f0 <sync_phase>
    1f4c:	70 c0       	rjmp	.+224    	; 0x202e <sync_end>

00001f4e <sync_hsync>:
    1f4e:	e7 e0       	ldi	r30, 0x07	; 7
    1f50:	e0 93 89 00 	sts	0x0089, r30	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
    1f54:	eb e1       	ldi	r30, 0x1B	; 27
    1f56:	e0 93 88 00 	sts	0x0088, r30	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
    1f5a:	00 c0       	rjmp	.+0      	; 0x1f5c <sync_hsync+0xe>
    1f5c:	28 98       	cbi	0x05, 0	; 5
    1f5e:	e2 e0       	ldi	r30, 0x02	; 2
    1f60:	00 c0       	rjmp	.+0      	; 0x1f62 <sync_hsync+0x14>
    1f62:	0e 94 ff 10 	call	0x21fe	; 0x21fe <update_sound>
    1f66:	fd ef       	ldi	r31, 0xFD	; 253
    1f68:	00 90 f7 06 	lds	r0, 0x06F7	; 0x8006f7 <first_render_line>
    1f6c:	f0 19       	sub	r31, r0
    1f6e:	e0 91 f1 06 	lds	r30, 0x06F1	; 0x8006f1 <sync_pulse>
    1f72:	ef 17       	cp	r30, r31
    1f74:	d8 f4       	brcc	.+54     	; 0x1fac <no_render>
    1f76:	fd ef       	ldi	r31, 0xFD	; 253
    1f78:	00 90 f7 06 	lds	r0, 0x06F7	; 0x8006f7 <first_render_line>
    1f7c:	f0 19       	sub	r31, r0
    1f7e:	00 90 f8 06 	lds	r0, 0x06F8	; 0x8006f8 <render_lines_count>
    1f82:	f0 19       	sub	r31, r0
    1f84:	ef 17       	cp	r30, r31
    1f86:	90 f0       	brcs	.+36     	; 0x1fac <no_render>
    1f88:	ed e1       	ldi	r30, 0x1D	; 29
    1f8a:	ff 27       	eor	r31, r31

00001f8c <push_loop>:
    1f8c:	00 80       	ld	r0, Z
    1f8e:	0f 92       	push	r0
    1f90:	ea 95       	dec	r30
    1f92:	e1 f7       	brne	.-8      	; 0x1f8c <push_loop>
    1f94:	0f e1       	ldi	r16, 0x1F	; 31
    1f96:	0a 95       	dec	r16
    1f98:	f1 f7       	brne	.-4      	; 0x1f96 <push_loop+0xa>
    1f9a:	00 c0       	rjmp	.+0      	; 0x1f9c <push_loop+0x10>
    1f9c:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <sub_video_mode1>
    1fa0:	e1 e0       	ldi	r30, 0x01	; 1
    1fa2:	ff 27       	eor	r31, r31

00001fa4 <pop_loop>:
    1fa4:	0f 90       	pop	r0
    1fa6:	01 92       	st	Z+, r0
    1fa8:	ee 31       	cpi	r30, 0x1E	; 30
    1faa:	e0 f3       	brcs	.-8      	; 0x1fa4 <pop_loop>

00001fac <no_render>:
    1fac:	e0 91 f1 06 	lds	r30, 0x06F1	; 0x8006f1 <sync_pulse>
    1fb0:	e0 30       	cpi	r30, 0x00	; 0
    1fb2:	09 f0       	breq	.+2      	; 0x1fb6 <no_render+0xa>
    1fb4:	3c c0       	rjmp	.+120    	; 0x202e <sync_end>
    1fb6:	2f 93       	push	r18
    1fb8:	3f 93       	push	r19
    1fba:	4f 93       	push	r20
    1fbc:	5f 93       	push	r21
    1fbe:	6f 93       	push	r22
    1fc0:	7f 93       	push	r23
    1fc2:	8f 93       	push	r24
    1fc4:	9f 93       	push	r25
    1fc6:	af 93       	push	r26
    1fc8:	bf 93       	push	r27
    1fca:	78 94       	sei
    1fcc:	11 24       	eor	r1, r1
    1fce:	ee 27       	eor	r30, r30
    1fd0:	e0 93 f0 06 	sts	0x06F0, r30	; 0x8006f0 <sync_phase>
    1fd4:	e2 e1       	ldi	r30, 0x12	; 18
    1fd6:	e0 93 f1 06 	sts	0x06F1, r30	; 0x8006f1 <sync_pulse>
    1fda:	80 91 01 07 	lds	r24, 0x0701	; 0x800701 <vsync_counter>
    1fde:	90 91 02 07 	lds	r25, 0x0702	; 0x800702 <vsync_counter+0x1>
    1fe2:	01 96       	adiw	r24, 0x01	; 1
    1fe4:	80 93 01 07 	sts	0x0701, r24	; 0x800701 <vsync_counter>
    1fe8:	90 93 02 07 	sts	0x0702, r25	; 0x800702 <vsync_counter+0x1>
    1fec:	e0 91 f3 06 	lds	r30, 0x06F3	; 0x8006f3 <pre_vsync_user_callback>
    1ff0:	f0 91 f4 06 	lds	r31, 0x06F4	; 0x8006f4 <pre_vsync_user_callback+0x1>
    1ff4:	e1 15       	cp	r30, r1
    1ff6:	f1 05       	cpc	r31, r1
    1ff8:	09 f0       	breq	.+2      	; 0x1ffc <no_render+0x50>
    1ffa:	09 95       	icall
    1ffc:	0e 94 c0 11 	call	0x2380	; 0x2380 <ReadControllers>
    2000:	0e 94 02 1b 	call	0x3604	; 0x3604 <VideoModeVsync>
    2004:	0e 94 29 10 	call	0x2052	; 0x2052 <process_music>
    2008:	11 24       	eor	r1, r1
    200a:	e0 91 f5 06 	lds	r30, 0x06F5	; 0x8006f5 <post_vsync_user_callback>
    200e:	f0 91 f6 06 	lds	r31, 0x06F6	; 0x8006f6 <post_vsync_user_callback+0x1>
    2012:	e1 15       	cp	r30, r1
    2014:	f1 05       	cpc	r31, r1
    2016:	09 f0       	breq	.+2      	; 0x201a <no_render+0x6e>
    2018:	09 95       	icall
    201a:	bf 91       	pop	r27
    201c:	af 91       	pop	r26
    201e:	9f 91       	pop	r25
    2020:	8f 91       	pop	r24
    2022:	7f 91       	pop	r23
    2024:	6f 91       	pop	r22
    2026:	5f 91       	pop	r21
    2028:	4f 91       	pop	r20
    202a:	3f 91       	pop	r19
    202c:	2f 91       	pop	r18

0000202e <sync_end>:
    202e:	ef 91       	pop	r30
    2030:	ef bf       	out	0x3f, r30	; 63
    2032:	ff 91       	pop	r31
    2034:	ef 91       	pop	r30
    2036:	1f 90       	pop	r1
    2038:	0f 90       	pop	r0
    203a:	18 95       	reti

0000203c <hsync_pulse>:
    203c:	28 98       	cbi	0x05, 0	; 5
    203e:	e2 e0       	ldi	r30, 0x02	; 2
    2040:	00 c0       	rjmp	.+0      	; 0x2042 <hsync_pulse+0x6>
    2042:	0e 94 ff 10 	call	0x21fe	; 0x21fe <update_sound>
    2046:	e0 91 f1 06 	lds	r30, 0x06F1	; 0x8006f1 <sync_pulse>
    204a:	ea 95       	dec	r30
    204c:	e0 93 f1 06 	sts	0x06F1, r30	; 0x8006f1 <sync_pulse>
    2050:	08 95       	ret

00002052 <process_music>:
	andi r25,1
	lsl r24
	or r24,r25

	sts tr4_params,r24	
	ret
    2052:	e0 91 15 09 	lds	r30, 0x0915	; 0x800915 <sound_enabled>
    2056:	e0 fd       	sbrc	r30, 0
    2058:	0e 94 b5 12 	call	0x256a	; 0x256a <ProcessMusic>
    205c:	00 90 13 09 	lds	r0, 0x0913	; 0x800913 <mix_bank>
    2060:	00 20       	and	r0, r0
    2062:	19 f4       	brne	.+6      	; 0x206a <set_hi_bank>
    2064:	a5 e0       	ldi	r26, 0x05	; 5
    2066:	b7 e0       	ldi	r27, 0x07	; 7
    2068:	02 c0       	rjmp	.+4      	; 0x206e <end_set_bank>

0000206a <set_hi_bank>:
    206a:	ab e0       	ldi	r26, 0x0B	; 11
    206c:	b8 e0       	ldi	r27, 0x08	; 8

0000206e <end_set_bank>:
    206e:	21 e0       	ldi	r18, 0x01	; 1
    2070:	02 26       	eor	r0, r18
    2072:	00 92 13 09 	sts	0x0913, r0	; 0x800913 <mix_bank>
    2076:	22 e0       	ldi	r18, 0x02	; 2
    2078:	20 93 14 09 	sts	0x0914, r18	; 0x800914 <mix_block>
    207c:	e0 91 15 09 	lds	r30, 0x0915	; 0x800915 <sound_enabled>
    2080:	e0 ff       	sbrs	r30, 0
    2082:	08 95       	ret
    2084:	2f 92       	push	r2
    2086:	3f 92       	push	r3
    2088:	4f 92       	push	r4
    208a:	5f 92       	push	r5
    208c:	6f 92       	push	r6
    208e:	7f 92       	push	r7
    2090:	8f 92       	push	r8
    2092:	9f 92       	push	r9
    2094:	af 92       	push	r10
    2096:	bf 92       	push	r11
    2098:	cf 92       	push	r12
    209a:	df 92       	push	r13
    209c:	ef 92       	push	r14
    209e:	ff 92       	push	r15
    20a0:	0f 93       	push	r16
    20a2:	1f 93       	push	r17
    20a4:	cf 93       	push	r28
    20a6:	df 93       	push	r29
    20a8:	50 91 28 09 	lds	r21, 0x0928	; 0x800928 <tr4_vol>
    20ac:	60 91 2a 09 	lds	r22, 0x092A	; 0x80092a <tr4_barrel_lo>
    20b0:	70 91 2b 09 	lds	r23, 0x092B	; 0x80092b <tr4_barrel_hi>
    20b4:	80 91 2c 09 	lds	r24, 0x092C	; 0x80092c <tr4_divider>
    20b8:	20 90 17 09 	lds	r2, 0x0917	; 0x800917 <tr1_step_lo>
    20bc:	30 90 18 09 	lds	r3, 0x0918	; 0x800918 <tr1_step_hi>
    20c0:	40 90 1a 09 	lds	r4, 0x091A	; 0x80091a <tr1_pos_lo>
    20c4:	50 90 1b 09 	lds	r5, 0x091B	; 0x80091b <tr1_pos_hi>
    20c8:	60 90 19 09 	lds	r6, 0x0919	; 0x800919 <tr1_pos_frac>
    20cc:	10 91 16 09 	lds	r17, 0x0916	; 0x800916 <mixer>
    20d0:	70 90 1d 09 	lds	r7, 0x091D	; 0x80091d <tr2_step_lo>
    20d4:	80 90 1e 09 	lds	r8, 0x091E	; 0x80091e <tr2_step_hi>
    20d8:	90 90 1f 09 	lds	r9, 0x091F	; 0x80091f <tr2_pos_frac>
    20dc:	a0 90 20 09 	lds	r10, 0x0920	; 0x800920 <tr2_pos_lo>
    20e0:	b0 90 21 09 	lds	r11, 0x0921	; 0x800921 <tr2_pos_hi>
    20e4:	20 91 1c 09 	lds	r18, 0x091C	; 0x80091c <tr2_vol>
    20e8:	c0 90 23 09 	lds	r12, 0x0923	; 0x800923 <tr3_step_lo>
    20ec:	d0 90 24 09 	lds	r13, 0x0924	; 0x800924 <tr3_step_hi>
    20f0:	e0 90 26 09 	lds	r14, 0x0926	; 0x800926 <tr3_pos_lo>
    20f4:	f0 90 27 09 	lds	r15, 0x0927	; 0x800927 <tr3_pos_hi>
    20f8:	00 91 25 09 	lds	r16, 0x0925	; 0x800925 <tr3_pos_frac>
    20fc:	30 91 22 09 	lds	r19, 0x0922	; 0x800922 <tr3_vol>
    2100:	9f ef       	ldi	r25, 0xFF	; 255

00002102 <mix_loop>:
    2102:	62 0c       	add	r6, r2
    2104:	43 1c       	adc	r4, r3
    2106:	f2 01       	movw	r30, r4
    2108:	44 91       	lpm	r20, Z
    210a:	41 03       	mulsu	r20, r17
    210c:	00 08       	sbc	r0, r0
    210e:	c1 2d       	mov	r28, r1
    2110:	d0 2d       	mov	r29, r0
    2112:	97 0c       	add	r9, r7
    2114:	a8 1c       	adc	r10, r8
    2116:	f5 01       	movw	r30, r10
    2118:	44 91       	lpm	r20, Z
    211a:	42 03       	mulsu	r20, r18
    211c:	00 08       	sbc	r0, r0
    211e:	c1 0d       	add	r28, r1
    2120:	d0 1d       	adc	r29, r0
    2122:	0c 0d       	add	r16, r12
    2124:	ed 1c       	adc	r14, r13
    2126:	f7 01       	movw	r30, r14
    2128:	44 91       	lpm	r20, Z
    212a:	43 03       	mulsu	r20, r19
    212c:	00 08       	sbc	r0, r0
    212e:	c1 0d       	add	r28, r1
    2130:	d0 1d       	adc	r29, r0
    2132:	8a 95       	dec	r24
    2134:	6a f4       	brpl	.+26     	; 0x2150 <no_shift>
    2136:	40 91 29 09 	lds	r20, 0x0929	; 0x800929 <tr4_params>
    213a:	84 2f       	mov	r24, r20
    213c:	86 95       	lsr	r24
    213e:	06 2e       	mov	r0, r22
    2140:	06 94       	lsr	r0
    2142:	06 26       	eor	r0, r22
    2144:	00 fa       	bst	r0, 0
    2146:	76 95       	lsr	r23
    2148:	67 95       	ror	r22
    214a:	76 f9       	bld	r23, 6
    214c:	40 ff       	sbrs	r20, 0
    214e:	66 f9       	bld	r22, 6

00002150 <no_shift>:
    2150:	40 e8       	ldi	r20, 0x80	; 128
    2152:	60 fd       	sbrc	r22, 0
    2154:	4f e7       	ldi	r20, 0x7F	; 127
    2156:	45 03       	mulsu	r20, r21
    2158:	00 08       	sbc	r0, r0
    215a:	c1 0d       	add	r28, r1
    215c:	d0 1d       	adc	r29, r0
    215e:	00 24       	eor	r0, r0
    2160:	c0 38       	cpi	r28, 0x80	; 128
    2162:	d0 05       	cpc	r29, r0
    2164:	0c f0       	brlt	.+2      	; 0x2168 <no_shift+0x18>
    2166:	cf e7       	ldi	r28, 0x7F	; 127
    2168:	0a 94       	dec	r0
    216a:	c0 38       	cpi	r28, 0x80	; 128
    216c:	d0 05       	cpc	r29, r0
    216e:	0c f4       	brge	.+2      	; 0x2172 <no_shift+0x22>
    2170:	c0 e8       	ldi	r28, 0x80	; 128
    2172:	c0 58       	subi	r28, 0x80	; 128
    2174:	cd 93       	st	X+, r28
    2176:	9a 95       	dec	r25
    2178:	09 f0       	breq	.+2      	; 0x217c <no_shift+0x2c>
    217a:	c3 cf       	rjmp	.-122    	; 0x2102 <mix_loop>
    217c:	40 91 14 09 	lds	r20, 0x0914	; 0x800914 <mix_block>
    2180:	4a 95       	dec	r20
    2182:	40 93 14 09 	sts	0x0914, r20	; 0x800914 <mix_block>
    2186:	97 e0       	ldi	r25, 0x07	; 7
    2188:	09 f0       	breq	.+2      	; 0x218c <no_shift+0x3c>
    218a:	bb cf       	rjmp	.-138    	; 0x2102 <mix_loop>
    218c:	60 92 19 09 	sts	0x0919, r6	; 0x800919 <tr1_pos_frac>
    2190:	40 92 1a 09 	sts	0x091A, r4	; 0x80091a <tr1_pos_lo>
    2194:	90 92 1f 09 	sts	0x091F, r9	; 0x80091f <tr2_pos_frac>
    2198:	a0 92 20 09 	sts	0x0920, r10	; 0x800920 <tr2_pos_lo>
    219c:	00 93 25 09 	sts	0x0925, r16	; 0x800925 <tr3_pos_frac>
    21a0:	e0 92 26 09 	sts	0x0926, r14	; 0x800926 <tr3_pos_lo>
    21a4:	60 93 2a 09 	sts	0x092A, r22	; 0x80092a <tr4_barrel_lo>
    21a8:	70 93 2b 09 	sts	0x092B, r23	; 0x80092b <tr4_barrel_hi>
    21ac:	80 93 2c 09 	sts	0x092C, r24	; 0x80092c <tr4_divider>
    21b0:	df 91       	pop	r29
    21b2:	cf 91       	pop	r28
    21b4:	1f 91       	pop	r17
    21b6:	0f 91       	pop	r16
    21b8:	ff 90       	pop	r15
    21ba:	ef 90       	pop	r14
    21bc:	df 90       	pop	r13
    21be:	cf 90       	pop	r12
    21c0:	bf 90       	pop	r11
    21c2:	af 90       	pop	r10
    21c4:	9f 90       	pop	r9
    21c6:	8f 90       	pop	r8
    21c8:	7f 90       	pop	r7
    21ca:	6f 90       	pop	r6
    21cc:	5f 90       	pop	r5
    21ce:	4f 90       	pop	r4
    21d0:	3f 90       	pop	r3
    21d2:	2f 90       	pop	r2
    21d4:	08 95       	ret

000021d6 <update_sound_buffer_fast>:
    21d6:	e0 91 11 09 	lds	r30, 0x0911	; 0x800911 <mix_pos>
    21da:	f0 91 12 09 	lds	r31, 0x0912	; 0x800912 <mix_pos+0x1>
    21de:	01 91       	ld	r16, Z+
    21e0:	00 00       	nop
    21e2:	00 93 b3 00 	sts	0x00B3, r16	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
    21e6:	09 e0       	ldi	r16, 0x09	; 9
    21e8:	e1 31       	cpi	r30, 0x11	; 17
    21ea:	f0 07       	cpc	r31, r16
    21ec:	05 e0       	ldi	r16, 0x05	; 5
    21ee:	17 e0       	ldi	r17, 0x07	; 7
    21f0:	08 f0       	brcs	.+2      	; 0x21f4 <update_sound_buffer_fast+0x1e>
    21f2:	f8 01       	movw	r30, r16
    21f4:	e0 93 11 09 	sts	0x0911, r30	; 0x800911 <mix_pos>
    21f8:	f0 93 12 09 	sts	0x0912, r31	; 0x800912 <mix_pos+0x1>
    21fc:	08 95       	ret

000021fe <update_sound>:
    21fe:	0f 93       	push	r16
    2200:	1f 93       	push	r17
    2202:	2f 93       	push	r18
    2204:	ef 93       	push	r30
    2206:	e0 91 11 09 	lds	r30, 0x0911	; 0x800911 <mix_pos>
    220a:	f0 91 12 09 	lds	r31, 0x0912	; 0x800912 <mix_pos+0x1>
    220e:	01 91       	ld	r16, Z+
    2210:	00 93 b3 00 	sts	0x00B3, r16	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
    2214:	09 e0       	ldi	r16, 0x09	; 9
    2216:	e1 31       	cpi	r30, 0x11	; 17
    2218:	f0 07       	cpc	r31, r16
    221a:	05 e0       	ldi	r16, 0x05	; 5
    221c:	17 e0       	ldi	r17, 0x07	; 7
    221e:	08 f0       	brcs	.+2      	; 0x2222 <update_sound+0x24>
    2220:	f8 01       	movw	r30, r16
    2222:	e0 93 11 09 	sts	0x0911, r30	; 0x800911 <mix_pos>
    2226:	f0 93 12 09 	sts	0x0912, r31	; 0x800912 <mix_pos+0x1>
    222a:	e8 e0       	ldi	r30, 0x08	; 8
    222c:	ea 95       	dec	r30
    222e:	f1 f7       	brne	.-4      	; 0x222c <update_sound+0x2e>
    2230:	ef 91       	pop	r30
    2232:	2f 91       	pop	r18
    2234:	1f 91       	pop	r17
    2236:	0f 91       	pop	r16
    2238:	e0 fd       	sbrc	r30, 0
    223a:	28 9a       	sbi	0x05, 0	; 5
    223c:	e0 ff       	sbrs	r30, 0
    223e:	01 c0       	rjmp	.+2      	; 0x2242 <update_sound+0x44>
    2240:	08 95       	ret
    2242:	f4 e1       	ldi	r31, 0x14	; 20
    2244:	fa 95       	dec	r31
    2246:	f1 f7       	brne	.-4      	; 0x2244 <update_sound+0x46>
    2248:	00 c0       	rjmp	.+0      	; 0x224a <update_sound+0x4c>
    224a:	e1 fd       	sbrc	r30, 1
    224c:	28 9a       	sbi	0x05, 0	; 5
    224e:	e1 ff       	sbrs	r30, 1
    2250:	00 c0       	rjmp	.+0      	; 0x2252 <update_sound+0x54>
    2252:	08 95       	ret

00002254 <ClearVram>:
    2254:	ea ee       	ldi	r30, 0xEA	; 234
    2256:	f2 e0       	ldi	r31, 0x02	; 2
    2258:	a8 e1       	ldi	r26, 0x18	; 24
    225a:	b1 e0       	ldi	r27, 0x01	; 1
    225c:	60 91 ec 06 	lds	r22, 0x06EC	; 0x8006ec <font_table_lo>
    2260:	70 91 ed 06 	lds	r23, 0x06ED	; 0x8006ed <font_table_hi>

00002264 <fill_vram_loop>:
    2264:	6d 93       	st	X+, r22
    2266:	7d 93       	st	X+, r23
    2268:	31 97       	sbiw	r30, 0x01	; 1
    226a:	e1 f7       	brne	.-8      	; 0x2264 <fill_vram_loop>
    226c:	11 24       	eor	r1, r1
    226e:	08 95       	ret

00002270 <SetFont>:
    2270:	99 27       	eor	r25, r25
    2272:	55 27       	eor	r21, r21
    2274:	28 e2       	ldi	r18, 0x28	; 40
    2276:	22 0f       	add	r18, r18
    2278:	62 9f       	mul	r22, r18
    227a:	88 0f       	add	r24, r24
    227c:	08 0e       	add	r0, r24
    227e:	19 1e       	adc	r1, r25
    2280:	a8 e1       	ldi	r26, 0x18	; 24
    2282:	b1 e0       	ldi	r27, 0x01	; 1
    2284:	a0 0d       	add	r26, r0
    2286:	b1 1d       	adc	r27, r1
    2288:	60 91 ec 06 	lds	r22, 0x06EC	; 0x8006ec <font_table_lo>
    228c:	70 91 ed 06 	lds	r23, 0x06ED	; 0x8006ed <font_table_hi>
    2290:	28 e4       	ldi	r18, 0x48	; 72
    2292:	42 9f       	mul	r20, r18
    2294:	60 0d       	add	r22, r0
    2296:	71 1d       	adc	r23, r1
    2298:	6d 93       	st	X+, r22
    229a:	7c 93       	st	X, r23
    229c:	11 24       	eor	r1, r1
    229e:	08 95       	ret

000022a0 <SetFontTable>:
    22a0:	80 93 ec 06 	sts	0x06EC, r24	; 0x8006ec <font_table_lo>
    22a4:	90 93 ed 06 	sts	0x06ED, r25	; 0x8006ed <font_table_hi>
    22a8:	08 95       	ret

000022aa <GetVsyncFlag>:
    22aa:	80 91 f2 06 	lds	r24, 0x06F2	; 0x8006f2 <sync_flags>
    22ae:	81 70       	andi	r24, 0x01	; 1
    22b0:	08 95       	ret

000022b2 <ClearVsyncFlag>:
    22b2:	20 91 f2 06 	lds	r18, 0x06F2	; 0x8006f2 <sync_flags>
    22b6:	2e 7f       	andi	r18, 0xFE	; 254
    22b8:	20 93 f2 06 	sts	0x06F2, r18	; 0x8006f2 <sync_flags>
    22bc:	08 95       	ret

000022be <ReadJoypad>:
    22be:	88 23       	and	r24, r24
    22c0:	29 f4       	brne	.+10     	; 0x22cc <rj_p2>
    22c2:	80 91 f9 06 	lds	r24, 0x06F9	; 0x8006f9 <joypad1_status_lo>
    22c6:	90 91 fa 06 	lds	r25, 0x06FA	; 0x8006fa <joypad1_status_lo+0x1>
    22ca:	08 95       	ret

000022cc <rj_p2>:
    22cc:	80 91 fd 06 	lds	r24, 0x06FD	; 0x8006fd <joypad2_status_lo>
    22d0:	90 91 fe 06 	lds	r25, 0x06FE	; 0x8006fe <joypad2_status_lo+0x1>
    22d4:	08 95       	ret

000022d6 <SoftReset>:
    22d6:	e0 e6       	ldi	r30, 0x60	; 96
    22d8:	f0 e0       	ldi	r31, 0x00	; 0
    22da:	80 81       	ld	r24, Z
    22dc:	83 fd       	sbrc	r24, 3
    22de:	08 95       	ret
    22e0:	88 e1       	ldi	r24, 0x18	; 24
    22e2:	98 e0       	ldi	r25, 0x08	; 8
    22e4:	f8 94       	cli
    22e6:	80 83       	st	Z, r24
    22e8:	90 83       	st	Z, r25
    22ea:	78 94       	sei
    22ec:	ff cf       	rjmp	.-2      	; 0x22ec <SoftReset+0x16>

000022ee <WriteEeprom>:
;****************************

.section .text.WriteEeprom
WriteEeprom:
   ; Wait for completion of previous write
   sbic _SFR_IO_ADDR(EECR),EEPE
    22ee:	f9 99       	sbic	0x1f, 1	; 31
   rjmp WriteEeprom
    22f0:	fe cf       	rjmp	.-4      	; 0x22ee <WriteEeprom>
   ; Set up address (r25:r24) in address register
   out _SFR_IO_ADDR(EEARH), r25
    22f2:	92 bd       	out	0x22, r25	; 34
   out _SFR_IO_ADDR(EEARL), r24
    22f4:	81 bd       	out	0x21, r24	; 33
   ; Write data (r22) to Data Register
   out _SFR_IO_ADDR(EEDR),r22
    22f6:	60 bd       	out	0x20, r22	; 32
   cli
    22f8:	f8 94       	cli
   ; Write logical one to EEMPE
   sbi _SFR_IO_ADDR(EECR),EEMPE
    22fa:	fa 9a       	sbi	0x1f, 2	; 31
   ; Start eeprom write by setting EEPE
   sbi _SFR_IO_ADDR(EECR),EEPE
    22fc:	f9 9a       	sbi	0x1f, 1	; 31
   sei
    22fe:	78 94       	sei
   ret
    2300:	08 95       	ret

00002302 <ReadEeprom>:
; r24 - value read
;****************************
.section .text.ReadEeprom
ReadEeprom:
   ; Wait for completion of previous write
   sbic _SFR_IO_ADDR(EECR),EEPE
    2302:	f9 99       	sbic	0x1f, 1	; 31
   rjmp ReadEeprom
    2304:	fe cf       	rjmp	.-4      	; 0x2302 <ReadEeprom>
   ; Set up address (r25:r24) in address register
   out _SFR_IO_ADDR(EEARH), r25
    2306:	92 bd       	out	0x22, r25	; 34
   out _SFR_IO_ADDR(EEARL), r24
    2308:	81 bd       	out	0x21, r24	; 33
   ; Start eeprom read by writing EERE
   cli
    230a:	f8 94       	cli
   sbi _SFR_IO_ADDR(EECR),EERE
    230c:	f8 9a       	sbi	0x1f, 0	; 31
   ; Read data from Data Register
   in r24,_SFR_IO_ADDR(EEDR)
    230e:	80 b5       	in	r24, 0x20	; 32
   sei
    2310:	78 94       	sei
   ret
    2312:	08 95       	ret

00002314 <ReadButtons>:
    2314:	12 9a       	sbi	0x02, 2	; 2
    2316:	c8 95       	lpm
    2318:	c8 95       	lpm
    231a:	c8 95       	lpm
    231c:	c8 95       	lpm
    231e:	12 98       	cbi	0x02, 2	; 2
    2320:	40 e1       	ldi	r20, 0x10	; 16
    2322:	80 e0       	ldi	r24, 0x00	; 0
    2324:	90 e0       	ldi	r25, 0x00	; 0
    2326:	20 e0       	ldi	r18, 0x00	; 0
    2328:	30 e0       	ldi	r19, 0x00	; 0
    232a:	36 95       	lsr	r19
    232c:	27 95       	ror	r18
    232e:	96 95       	lsr	r25
    2330:	87 95       	ror	r24
    2332:	c8 95       	lpm
    2334:	c8 95       	lpm
    2336:	c8 95       	lpm
    2338:	c8 95       	lpm
    233a:	13 98       	cbi	0x02, 3	; 2
    233c:	00 9b       	sbis	0x00, 0	; 0
    233e:	30 68       	ori	r19, 0x80	; 128
    2340:	01 9b       	sbis	0x00, 1	; 0
    2342:	90 68       	ori	r25, 0x80	; 128
    2344:	13 9a       	sbi	0x02, 3	; 2
    2346:	c8 95       	lpm
    2348:	c8 95       	lpm
    234a:	c8 95       	lpm
    234c:	c8 95       	lpm
    234e:	41 50       	subi	r20, 0x01	; 1
    2350:	61 f7       	brne	.-40     	; 0x232a <ReadButtons+0x16>
    2352:	30 93 fa 06 	sts	0x06FA, r19	; 0x8006fa <joypad1_status_lo+0x1>
    2356:	20 93 f9 06 	sts	0x06F9, r18	; 0x8006f9 <joypad1_status_lo>
    235a:	90 93 fe 06 	sts	0x06FE, r25	; 0x8006fe <joypad2_status_lo+0x1>
    235e:	80 93 fd 06 	sts	0x06FD, r24	; 0x8006fd <joypad2_status_lo>
    2362:	80 91 f9 06 	lds	r24, 0x06F9	; 0x8006f9 <joypad1_status_lo>
    2366:	90 91 fa 06 	lds	r25, 0x06FA	; 0x8006fa <joypad1_status_lo+0x1>
    236a:	0f 97       	sbiw	r24, 0x0f	; 15
    236c:	31 f0       	breq	.+12     	; 0x237a <ReadButtons+0x66>
    236e:	80 91 fd 06 	lds	r24, 0x06FD	; 0x8006fd <joypad2_status_lo>
    2372:	90 91 fe 06 	lds	r25, 0x06FE	; 0x8006fe <joypad2_status_lo+0x1>
    2376:	0f 97       	sbiw	r24, 0x0f	; 15
    2378:	11 f4       	brne	.+4      	; 0x237e <ReadButtons+0x6a>
    237a:	0c 94 6b 11 	jmp	0x22d6	; 0x22d6 <SoftReset>
    237e:	08 95       	ret

00002380 <ReadControllers>:
    2380:	10 92 4b 09 	sts	0x094B, r1	; 0x80094b <joypadsConnectionStatus>
    2384:	00 99       	sbic	0x00, 0	; 0
    2386:	03 c0       	rjmp	.+6      	; 0x238e <ReadControllers+0xe>
    2388:	81 e0       	ldi	r24, 0x01	; 1
    238a:	80 93 4b 09 	sts	0x094B, r24	; 0x80094b <joypadsConnectionStatus>
    238e:	01 99       	sbic	0x00, 1	; 0
    2390:	05 c0       	rjmp	.+10     	; 0x239c <ReadControllers+0x1c>
    2392:	80 91 4b 09 	lds	r24, 0x094B	; 0x80094b <joypadsConnectionStatus>
    2396:	82 60       	ori	r24, 0x02	; 2
    2398:	80 93 4b 09 	sts	0x094B, r24	; 0x80094b <joypadsConnectionStatus>
    239c:	0c 94 8a 11 	jmp	0x2314	; 0x2314 <ReadButtons>

000023a0 <FormatEeprom>:
    23a0:	cf 93       	push	r28
    23a2:	df 93       	push	r29
    23a4:	c0 e0       	ldi	r28, 0x00	; 0
    23a6:	d0 e0       	ldi	r29, 0x00	; 0
    23a8:	fe 01       	movw	r30, r28
    23aa:	e0 59       	subi	r30, 0x90	; 144
    23ac:	ff 4f       	sbci	r31, 0xFF	; 255
    23ae:	64 91       	lpm	r22, Z
    23b0:	ce 01       	movw	r24, r28
    23b2:	0e 94 77 11 	call	0x22ee	; 0x22ee <WriteEeprom>
    23b6:	21 96       	adiw	r28, 0x01	; 1
    23b8:	c0 32       	cpi	r28, 0x20	; 32
    23ba:	d1 05       	cpc	r29, r1
    23bc:	a9 f7       	brne	.-22     	; 0x23a8 <FormatEeprom+0x8>
    23be:	c0 e2       	ldi	r28, 0x20	; 32
    23c0:	d0 e0       	ldi	r29, 0x00	; 0
    23c2:	6f ef       	ldi	r22, 0xFF	; 255
    23c4:	ce 01       	movw	r24, r28
    23c6:	0e 94 77 11 	call	0x22ee	; 0x22ee <WriteEeprom>
    23ca:	6f ef       	ldi	r22, 0xFF	; 255
    23cc:	ce 01       	movw	r24, r28
    23ce:	01 96       	adiw	r24, 0x01	; 1
    23d0:	0e 94 77 11 	call	0x22ee	; 0x22ee <WriteEeprom>
    23d4:	a0 96       	adiw	r28, 0x20	; 32
    23d6:	c1 15       	cp	r28, r1
    23d8:	88 e0       	ldi	r24, 0x08	; 8
    23da:	d8 07       	cpc	r29, r24
    23dc:	91 f7       	brne	.-28     	; 0x23c2 <FormatEeprom+0x22>
    23de:	df 91       	pop	r29
    23e0:	cf 91       	pop	r28
    23e2:	08 95       	ret

000023e4 <isEepromFormatted>:
	
//returns true if the EEPROM has been setup to work with the kernel.
bool isEepromFormatted(){
    23e4:	cf 93       	push	r28
	unsigned id;
	id=ReadEeprom(0)+(ReadEeprom(1)<<8);
    23e6:	80 e0       	ldi	r24, 0x00	; 0
    23e8:	90 e0       	ldi	r25, 0x00	; 0
    23ea:	0e 94 81 11 	call	0x2302	; 0x2302 <ReadEeprom>
    23ee:	c8 2f       	mov	r28, r24
    23f0:	81 e0       	ldi	r24, 0x01	; 1
    23f2:	90 e0       	ldi	r25, 0x00	; 0
    23f4:	0e 94 81 11 	call	0x2302	; 0x2302 <ReadEeprom>
	return (id==EEPROM_SIGNATURE);
    23f8:	28 2f       	mov	r18, r24
    23fa:	30 e0       	ldi	r19, 0x00	; 0
    23fc:	32 2f       	mov	r19, r18
    23fe:	22 27       	eor	r18, r18
    2400:	2c 0f       	add	r18, r28
    2402:	31 1d       	adc	r19, r1
    2404:	81 e0       	ldi	r24, 0x01	; 1
    2406:	2a 35       	cpi	r18, 0x5A	; 90
    2408:	35 45       	sbci	r19, 0x55	; 85
    240a:	09 f0       	breq	.+2      	; 0x240e <isEepromFormatted+0x2a>
    240c:	80 e0       	ldi	r24, 0x00	; 0
}
    240e:	cf 91       	pop	r28
    2410:	08 95       	ret

00002412 <PatchCommand00>:
	Track* track=&tracks[channel];
	track->flags=TRACK_FLAGS_PRIORITY; //priority=1;
	track->patchCommandStreamPos = NULL;
	TriggerCommon(track,patch,volume,80);
	track->flags|=TRACK_FLAGS_PLAYING;
}
    2412:	fc 01       	movw	r30, r24
    2414:	67 87       	std	Z+15, r22	; 0x0f
    2416:	08 95       	ret

00002418 <PatchCommand01>:
    2418:	e6 e1       	ldi	r30, 0x16	; 22
    241a:	f9 e0       	ldi	r31, 0x09	; 9
    241c:	81 e0       	ldi	r24, 0x01	; 1
    241e:	91 e0       	ldi	r25, 0x01	; 1
    2420:	95 8b       	std	Z+21, r25	; 0x15
    2422:	84 8b       	std	Z+20, r24	; 0x14
    2424:	63 8b       	std	Z+19, r22	; 0x13
    2426:	08 95       	ret

00002428 <PatchCommand02>:
    2428:	fc 01       	movw	r30, r24
    242a:	82 81       	ldd	r24, Z+2	; 0x02
    242c:	0c 94 59 15 	jmp	0x2ab2	; 0x2ab2 <SetMixerWave>

00002430 <PatchCommand03>:
    2430:	fc 01       	movw	r30, r24
    2432:	91 81       	ldd	r25, Z+1	; 0x01
    2434:	69 0f       	add	r22, r25
    2436:	61 83       	std	Z+1, r22	; 0x01
    2438:	82 81       	ldd	r24, Z+2	; 0x02
    243a:	0c 94 42 15 	jmp	0x2a84	; 0x2a84 <SetMixerNote>

0000243e <PatchCommand04>:
    243e:	fc 01       	movw	r30, r24
    2440:	91 81       	ldd	r25, Z+1	; 0x01
    2442:	96 1b       	sub	r25, r22
    2444:	69 2f       	mov	r22, r25
    2446:	91 83       	std	Z+1, r25	; 0x01
    2448:	82 81       	ldd	r24, Z+2	; 0x02
    244a:	0c 94 42 15 	jmp	0x2a84	; 0x2a84 <SetMixerNote>

0000244e <PatchCommand05>:
    244e:	fc 01       	movw	r30, r24
    2450:	90 81       	ld	r25, Z
    2452:	9f 75       	andi	r25, 0x5F	; 95
    2454:	90 83       	st	Z, r25
    2456:	08 95       	ret

00002458 <PatchCommand06>:
    2458:	fc 01       	movw	r30, r24
    245a:	90 81       	ld	r25, Z
    245c:	90 64       	ori	r25, 0x40	; 64
    245e:	90 83       	st	Z, r25
    2460:	08 95       	ret

00002462 <PatchCommand07>:
    2462:	fc 01       	movw	r30, r24
    2464:	66 87       	std	Z+14, r22	; 0x0e
    2466:	08 95       	ret

00002468 <PatchCommand08>:
    2468:	1f 93       	push	r17
    246a:	cf 93       	push	r28
    246c:	df 93       	push	r29
    246e:	ec 01       	movw	r28, r24
    2470:	16 2f       	mov	r17, r22
    2472:	8a 81       	ldd	r24, Y+2	; 0x02
    2474:	0e 94 42 15 	call	0x2a84	; 0x2a84 <SetMixerNote>
    2478:	19 83       	std	Y+1, r17	; 0x01
    247a:	88 81       	ld	r24, Y
    247c:	87 7f       	andi	r24, 0xF7	; 247
    247e:	88 83       	st	Y, r24
    2480:	df 91       	pop	r29
    2482:	cf 91       	pop	r28
    2484:	1f 91       	pop	r17
    2486:	08 95       	ret

00002488 <PatchCommand09>:
    2488:	fc 01       	movw	r30, r24
    248a:	62 87       	std	Z+10, r22	; 0x0a
    248c:	08 95       	ret

0000248e <PatchCommand10>:
    248e:	fc 01       	movw	r30, r24
    2490:	63 87       	std	Z+11, r22	; 0x0b
    2492:	08 95       	ret

00002494 <PatchCommand11>:
    2494:	cf 93       	push	r28
    2496:	df 93       	push	r29
    2498:	ec 01       	movw	r28, r24
    249a:	26 2f       	mov	r18, r22
    249c:	89 81       	ldd	r24, Y+1	; 0x01
    249e:	90 e0       	ldi	r25, 0x00	; 0
    24a0:	fc 01       	movw	r30, r24
    24a2:	ee 0f       	add	r30, r30
    24a4:	ff 1f       	adc	r31, r31
    24a6:	e4 51       	subi	r30, 0x14	; 20
    24a8:	f5 4d       	sbci	r31, 0xD5	; 213
    24aa:	45 91       	lpm	r20, Z+
    24ac:	54 91       	lpm	r21, Z
    24ae:	fc 01       	movw	r30, r24
    24b0:	e6 0f       	add	r30, r22
    24b2:	f1 1d       	adc	r31, r1
    24b4:	67 fd       	sbrc	r22, 7
    24b6:	fa 95       	dec	r31
    24b8:	ee 0f       	add	r30, r30
    24ba:	ff 1f       	adc	r31, r31
    24bc:	e4 51       	subi	r30, 0x14	; 20
    24be:	f5 4d       	sbci	r31, 0xD5	; 213
    24c0:	85 91       	lpm	r24, Z+
    24c2:	94 91       	lpm	r25, Z
    24c4:	84 1b       	sub	r24, r20
    24c6:	95 0b       	sbc	r25, r21
    24c8:	68 85       	ldd	r22, Y+8	; 0x08
    24ca:	70 e0       	ldi	r23, 0x00	; 0
    24cc:	0e 94 e9 1f 	call	0x3fd2	; 0x3fd2 <__divmodhi4>
    24d0:	61 15       	cp	r22, r1
    24d2:	71 05       	cpc	r23, r1
    24d4:	11 f4       	brne	.+4      	; 0x24da <PatchCommand11+0x46>
    24d6:	61 e0       	ldi	r22, 0x01	; 1
    24d8:	70 e0       	ldi	r23, 0x00	; 0
    24da:	ea 81       	ldd	r30, Y+2	; 0x02
    24dc:	86 e0       	ldi	r24, 0x06	; 6
    24de:	e8 9f       	mul	r30, r24
    24e0:	f0 01       	movw	r30, r0
    24e2:	11 24       	eor	r1, r1
    24e4:	ea 5e       	subi	r30, 0xEA	; 234
    24e6:	f6 4f       	sbci	r31, 0xF6	; 246
    24e8:	81 81       	ldd	r24, Z+1	; 0x01
    24ea:	92 81       	ldd	r25, Z+2	; 0x02
    24ec:	86 0f       	add	r24, r22
    24ee:	97 1f       	adc	r25, r23
    24f0:	92 83       	std	Z+2, r25	; 0x02
    24f2:	81 83       	std	Z+1, r24	; 0x01
    24f4:	7e 83       	std	Y+6, r23	; 0x06
    24f6:	6d 83       	std	Y+5, r22	; 0x05
    24f8:	88 81       	ld	r24, Y
    24fa:	88 60       	ori	r24, 0x08	; 8
    24fc:	88 83       	st	Y, r24
    24fe:	89 81       	ldd	r24, Y+1	; 0x01
    2500:	28 0f       	add	r18, r24
    2502:	2f 83       	std	Y+7, r18	; 0x07
    2504:	df 91       	pop	r29
    2506:	cf 91       	pop	r28
    2508:	08 95       	ret

0000250a <PatchCommand12>:
    250a:	fc 01       	movw	r30, r24
    250c:	60 87       	std	Z+8, r22	; 0x08
    250e:	08 95       	ret

00002510 <PatchCommand13>:
    2510:	fc 01       	movw	r30, r24
    2512:	64 83       	std	Z+4, r22	; 0x04
    2514:	08 95       	ret

00002516 <PatchCommand14>:
    2516:	dc 01       	movw	r26, r24
    2518:	14 96       	adiw	r26, 0x04	; 4
    251a:	8c 91       	ld	r24, X
    251c:	14 97       	sbiw	r26, 0x04	; 4
    251e:	88 23       	and	r24, r24
    2520:	19 f1       	breq	.+70     	; 0x2568 <PatchCommand14+0x52>
    2522:	55 96       	adiw	r26, 0x15	; 21
    2524:	2d 91       	ld	r18, X+
    2526:	3c 91       	ld	r19, X
    2528:	56 97       	sbiw	r26, 0x16	; 22
    252a:	66 23       	and	r22, r22
    252c:	79 f0       	breq	.+30     	; 0x254c <PatchCommand14+0x36>
    252e:	06 2e       	mov	r0, r22
    2530:	00 0c       	add	r0, r0
    2532:	77 0b       	sbc	r23, r23
    2534:	6f 5f       	subi	r22, 0xFF	; 255
    2536:	7f 4f       	sbci	r23, 0xFF	; 255
    2538:	ab 01       	movw	r20, r22
    253a:	44 0f       	add	r20, r20
    253c:	55 1f       	adc	r21, r21
    253e:	64 0f       	add	r22, r20
    2540:	75 1f       	adc	r23, r21
    2542:	26 1b       	sub	r18, r22
    2544:	37 0b       	sbc	r19, r23
    2546:	09 c0       	rjmp	.+18     	; 0x255a <PatchCommand14+0x44>
    2548:	ef 3f       	cpi	r30, 0xFF	; 255
    254a:	39 f0       	breq	.+14     	; 0x255a <PatchCommand14+0x44>
    254c:	23 50       	subi	r18, 0x03	; 3
    254e:	31 09       	sbc	r19, r1
    2550:	f9 01       	movw	r30, r18
    2552:	32 97       	sbiw	r30, 0x02	; 2
    2554:	e4 91       	lpm	r30, Z
    2556:	ed 30       	cpi	r30, 0x0D	; 13
    2558:	b9 f7       	brne	.-18     	; 0x2548 <PatchCommand14+0x32>
    255a:	56 96       	adiw	r26, 0x16	; 22
    255c:	3c 93       	st	X, r19
    255e:	2e 93       	st	-X, r18
    2560:	55 97       	sbiw	r26, 0x15	; 21
    2562:	81 50       	subi	r24, 0x01	; 1
    2564:	14 96       	adiw	r26, 0x04	; 4
    2566:	8c 93       	st	X, r24
    2568:	08 95       	ret

0000256a <ProcessMusic>:
    256a:	ef 92       	push	r14
    256c:	ff 92       	push	r15
    256e:	0f 93       	push	r16
    2570:	1f 93       	push	r17
    2572:	cf 93       	push	r28
    2574:	df 93       	push	r29
    2576:	ce e4       	ldi	r28, 0x4E	; 78
    2578:	d9 e0       	ldi	r29, 0x09	; 9
    257a:	06 e1       	ldi	r16, 0x16	; 22
    257c:	19 e0       	ldi	r17, 0x09	; 9
    257e:	98 01       	movw	r18, r16
    2580:	de 01       	movw	r26, r28
    2582:	1f 96       	adiw	r26, 0x0f	; 15
    2584:	8c 91       	ld	r24, X
    2586:	1f 97       	sbiw	r26, 0x0f	; 15
    2588:	88 23       	and	r24, r24
    258a:	a9 f0       	breq	.+42     	; 0x25b6 <ProcessMusic+0x4c>
    258c:	1e 96       	adiw	r26, 0x0e	; 14
    258e:	4c 91       	ld	r20, X
    2590:	1e 97       	sbiw	r26, 0x0e	; 14
    2592:	08 2e       	mov	r0, r24
    2594:	00 0c       	add	r0, r0
    2596:	99 0b       	sbc	r25, r25
    2598:	84 0f       	add	r24, r20
    259a:	91 1d       	adc	r25, r1
    259c:	8f 3f       	cpi	r24, 0xFF	; 255
    259e:	91 05       	cpc	r25, r1
    25a0:	19 f0       	breq	.+6      	; 0x25a8 <ProcessMusic+0x3e>
    25a2:	14 f0       	brlt	.+4      	; 0x25a8 <ProcessMusic+0x3e>
    25a4:	8f ef       	ldi	r24, 0xFF	; 255
    25a6:	90 e0       	ldi	r25, 0x00	; 0
    25a8:	97 ff       	sbrs	r25, 7
    25aa:	02 c0       	rjmp	.+4      	; 0x25b0 <ProcessMusic+0x46>
    25ac:	80 e0       	ldi	r24, 0x00	; 0
    25ae:	90 e0       	ldi	r25, 0x00	; 0
    25b0:	1e 96       	adiw	r26, 0x0e	; 14
    25b2:	8c 93       	st	X, r24
    25b4:	1e 97       	sbiw	r26, 0x0e	; 14
    25b6:	6c 91       	ld	r22, X
    25b8:	63 ff       	sbrs	r22, 3
    25ba:	26 c0       	rjmp	.+76     	; 0x2608 <ProcessMusic+0x9e>
    25bc:	15 96       	adiw	r26, 0x05	; 5
    25be:	4d 91       	ld	r20, X+
    25c0:	5c 91       	ld	r21, X
    25c2:	16 97       	sbiw	r26, 0x06	; 6
    25c4:	f9 01       	movw	r30, r18
    25c6:	81 81       	ldd	r24, Z+1	; 0x01
    25c8:	92 81       	ldd	r25, Z+2	; 0x02
    25ca:	84 0f       	add	r24, r20
    25cc:	95 1f       	adc	r25, r21
    25ce:	92 83       	std	Z+2, r25	; 0x02
    25d0:	81 83       	std	Z+1, r24	; 0x01
    25d2:	17 96       	adiw	r26, 0x07	; 7
    25d4:	ec 91       	ld	r30, X
    25d6:	17 97       	sbiw	r26, 0x07	; 7
    25d8:	f0 e0       	ldi	r31, 0x00	; 0
    25da:	ee 0f       	add	r30, r30
    25dc:	ff 1f       	adc	r31, r31
    25de:	e4 51       	subi	r30, 0x14	; 20
    25e0:	f5 4d       	sbci	r31, 0xD5	; 213
    25e2:	e5 90       	lpm	r14, Z+
    25e4:	f4 90       	lpm	r15, Z
    25e6:	14 16       	cp	r1, r20
    25e8:	15 06       	cpc	r1, r21
    25ea:	24 f4       	brge	.+8      	; 0x25f4 <ProcessMusic+0x8a>
    25ec:	8e 15       	cp	r24, r14
    25ee:	9f 05       	cpc	r25, r15
    25f0:	30 f4       	brcc	.+12     	; 0x25fe <ProcessMusic+0x94>
    25f2:	0a c0       	rjmp	.+20     	; 0x2608 <ProcessMusic+0x9e>
    25f4:	45 2b       	or	r20, r21
    25f6:	41 f0       	breq	.+16     	; 0x2608 <ProcessMusic+0x9e>
    25f8:	e8 16       	cp	r14, r24
    25fa:	f9 06       	cpc	r15, r25
    25fc:	28 f0       	brcs	.+10     	; 0x2608 <ProcessMusic+0x9e>
    25fe:	f9 01       	movw	r30, r18
    2600:	f2 82       	std	Z+2, r15	; 0x02
    2602:	e1 82       	std	Z+1, r14	; 0x01
    2604:	67 7f       	andi	r22, 0xF7	; 247
    2606:	6c 93       	st	X, r22
    2608:	57 96       	adiw	r26, 0x17	; 23
    260a:	2a 5f       	subi	r18, 0xFA	; 250
    260c:	3f 4f       	sbci	r19, 0xFF	; 255
    260e:	f9 e0       	ldi	r31, 0x09	; 9
    2610:	aa 3a       	cpi	r26, 0xAA	; 170
    2612:	bf 07       	cpc	r27, r31
    2614:	09 f0       	breq	.+2      	; 0x2618 <ProcessMusic+0xae>
    2616:	b5 cf       	rjmp	.-150    	; 0x2582 <ProcessMusic+0x18>
    2618:	80 91 04 07 	lds	r24, 0x0704	; 0x800704 <playSong>
    261c:	88 23       	and	r24, r24
    261e:	09 f4       	brne	.+2      	; 0x2622 <ProcessMusic+0xb8>
    2620:	cc c0       	rjmp	.+408    	; 0x27ba <ProcessMusic+0x250>
    2622:	87 e1       	ldi	r24, 0x17	; 23
    2624:	f8 2e       	mov	r15, r24
    2626:	80 91 aa 09 	lds	r24, 0x09AA	; 0x8009aa <currDeltaTime>
    262a:	90 91 ab 09 	lds	r25, 0x09AB	; 0x8009ab <currDeltaTime+0x1>
    262e:	20 91 b0 09 	lds	r18, 0x09B0	; 0x8009b0 <nextDeltaTime>
    2632:	30 91 b1 09 	lds	r19, 0x09B1	; 0x8009b1 <nextDeltaTime+0x1>
    2636:	82 17       	cp	r24, r18
    2638:	93 07       	cpc	r25, r19
    263a:	09 f0       	breq	.+2      	; 0x263e <ProcessMusic+0xd4>
    263c:	b9 c0       	rjmp	.+370    	; 0x27b0 <ProcessMusic+0x246>
    263e:	20 91 b3 09 	lds	r18, 0x09B3	; 0x8009b3 <songPos>
    2642:	30 91 b4 09 	lds	r19, 0x09B4	; 0x8009b4 <songPos+0x1>
    2646:	b9 01       	movw	r22, r18
    2648:	6f 5f       	subi	r22, 0xFF	; 255
    264a:	7f 4f       	sbci	r23, 0xFF	; 255
    264c:	70 93 b4 09 	sts	0x09B4, r23	; 0x8009b4 <songPos+0x1>
    2650:	60 93 b3 09 	sts	0x09B3, r22	; 0x8009b3 <songPos>
    2654:	f9 01       	movw	r30, r18
    2656:	44 91       	lpm	r20, Z
    2658:	4f 3f       	cpi	r20, 0xFF	; 255
    265a:	79 f5       	brne	.+94     	; 0x26ba <ProcessMusic+0x150>
    265c:	a9 01       	movw	r20, r18
    265e:	4e 5f       	subi	r20, 0xFE	; 254
    2660:	5f 4f       	sbci	r21, 0xFF	; 255
    2662:	50 93 b4 09 	sts	0x09B4, r21	; 0x8009b4 <songPos+0x1>
    2666:	40 93 b3 09 	sts	0x09B3, r20	; 0x8009b3 <songPos>
    266a:	fb 01       	movw	r30, r22
    266c:	64 91       	lpm	r22, Z
    266e:	6f 32       	cpi	r22, 0x2F	; 47
    2670:	19 f4       	brne	.+6      	; 0x2678 <ProcessMusic+0x10e>
    2672:	10 92 04 07 	sts	0x0704, r1	; 0x800704 <playSong>
    2676:	9c c0       	rjmp	.+312    	; 0x27b0 <ProcessMusic+0x246>
    2678:	66 30       	cpi	r22, 0x06	; 6
    267a:	09 f0       	breq	.+2      	; 0x267e <ProcessMusic+0x114>
    267c:	8c c0       	rjmp	.+280    	; 0x2796 <ProcessMusic+0x22c>
    267e:	fa 01       	movw	r30, r20
    2680:	44 91       	lpm	r20, Z
    2682:	c9 01       	movw	r24, r18
    2684:	04 96       	adiw	r24, 0x04	; 4
    2686:	90 93 b4 09 	sts	0x09B4, r25	; 0x8009b4 <songPos+0x1>
    268a:	80 93 b3 09 	sts	0x09B3, r24	; 0x8009b3 <songPos>
    268e:	f9 01       	movw	r30, r18
    2690:	33 96       	adiw	r30, 0x03	; 3
    2692:	e4 91       	lpm	r30, Z
    2694:	e3 35       	cpi	r30, 0x53	; 83
    2696:	29 f4       	brne	.+10     	; 0x26a2 <ProcessMusic+0x138>
    2698:	90 93 b6 09 	sts	0x09B6, r25	; 0x8009b6 <loopStart+0x1>
    269c:	80 93 b5 09 	sts	0x09B5, r24	; 0x8009b5 <loopStart>
    26a0:	7a c0       	rjmp	.+244    	; 0x2796 <ProcessMusic+0x22c>
    26a2:	e5 34       	cpi	r30, 0x45	; 69
    26a4:	09 f0       	breq	.+2      	; 0x26a8 <ProcessMusic+0x13e>
    26a6:	77 c0       	rjmp	.+238    	; 0x2796 <ProcessMusic+0x22c>
    26a8:	80 91 b5 09 	lds	r24, 0x09B5	; 0x8009b5 <loopStart>
    26ac:	90 91 b6 09 	lds	r25, 0x09B6	; 0x8009b6 <loopStart+0x1>
    26b0:	90 93 b4 09 	sts	0x09B4, r25	; 0x8009b4 <songPos+0x1>
    26b4:	80 93 b3 09 	sts	0x09B3, r24	; 0x8009b3 <songPos>
    26b8:	6e c0       	rjmp	.+220    	; 0x2796 <ProcessMusic+0x22c>
    26ba:	47 fd       	sbrc	r20, 7
    26bc:	40 93 ae 09 	sts	0x09AE, r20	; 0x8009ae <lastStatus>
    26c0:	90 91 ae 09 	lds	r25, 0x09AE	; 0x8009ae <lastStatus>
    26c4:	89 2f       	mov	r24, r25
    26c6:	8f 70       	andi	r24, 0x0F	; 15
    26c8:	47 ff       	sbrs	r20, 7
    26ca:	08 c0       	rjmp	.+16     	; 0x26dc <ProcessMusic+0x172>
    26cc:	2e 5f       	subi	r18, 0xFE	; 254
    26ce:	3f 4f       	sbci	r19, 0xFF	; 255
    26d0:	30 93 b4 09 	sts	0x09B4, r19	; 0x8009b4 <songPos+0x1>
    26d4:	20 93 b3 09 	sts	0x09B3, r18	; 0x8009b3 <songPos>
    26d8:	fb 01       	movw	r30, r22
    26da:	44 91       	lpm	r20, Z
    26dc:	90 7f       	andi	r25, 0xF0	; 240
    26de:	90 3b       	cpi	r25, 0xB0	; 176
    26e0:	e1 f0       	breq	.+56     	; 0x271a <ProcessMusic+0x1b0>
    26e2:	90 3c       	cpi	r25, 0xC0	; 192
    26e4:	09 f4       	brne	.+2      	; 0x26e8 <ProcessMusic+0x17e>
    26e6:	51 c0       	rjmp	.+162    	; 0x278a <ProcessMusic+0x220>
    26e8:	90 39       	cpi	r25, 0x90	; 144
    26ea:	09 f0       	breq	.+2      	; 0x26ee <ProcessMusic+0x184>
    26ec:	54 c0       	rjmp	.+168    	; 0x2796 <ProcessMusic+0x22c>
    26ee:	e0 91 b3 09 	lds	r30, 0x09B3	; 0x8009b3 <songPos>
    26f2:	f0 91 b4 09 	lds	r31, 0x09B4	; 0x8009b4 <songPos+0x1>
    26f6:	9f 01       	movw	r18, r30
    26f8:	2f 5f       	subi	r18, 0xFF	; 255
    26fa:	3f 4f       	sbci	r19, 0xFF	; 255
    26fc:	30 93 b4 09 	sts	0x09B4, r19	; 0x8009b4 <songPos+0x1>
    2700:	20 93 b3 09 	sts	0x09B3, r18	; 0x8009b3 <songPos>
    2704:	24 91       	lpm	r18, Z
    2706:	22 0f       	add	r18, r18
    2708:	f8 9e       	mul	r15, r24
    270a:	f0 01       	movw	r30, r0
    270c:	11 24       	eor	r1, r1
    270e:	e2 5b       	subi	r30, 0xB2	; 178
    2710:	f6 4f       	sbci	r31, 0xF6	; 246
    2712:	60 89       	ldd	r22, Z+16	; 0x10
    2714:	0e 94 02 15 	call	0x2a04	; 0x2a04 <TriggerNote>
    2718:	3e c0       	rjmp	.+124    	; 0x2796 <ProcessMusic+0x22c>
    271a:	e0 91 b3 09 	lds	r30, 0x09B3	; 0x8009b3 <songPos>
    271e:	f0 91 b4 09 	lds	r31, 0x09B4	; 0x8009b4 <songPos+0x1>
    2722:	9f 01       	movw	r18, r30
    2724:	2f 5f       	subi	r18, 0xFF	; 255
    2726:	3f 4f       	sbci	r19, 0xFF	; 255
    2728:	30 93 b4 09 	sts	0x09B4, r19	; 0x8009b4 <songPos+0x1>
    272c:	20 93 b3 09 	sts	0x09B3, r18	; 0x8009b3 <songPos>
    2730:	e4 91       	lpm	r30, Z
    2732:	47 30       	cpi	r20, 0x07	; 7
    2734:	49 f4       	brne	.+18     	; 0x2748 <ProcessMusic+0x1de>
    2736:	f8 9e       	mul	r15, r24
    2738:	d0 01       	movw	r26, r0
    273a:	11 24       	eor	r1, r1
    273c:	a2 5b       	subi	r26, 0xB2	; 178
    273e:	b6 4f       	sbci	r27, 0xF6	; 246
    2740:	ee 0f       	add	r30, r30
    2742:	1c 96       	adiw	r26, 0x0c	; 12
    2744:	ec 93       	st	X, r30
    2746:	27 c0       	rjmp	.+78     	; 0x2796 <ProcessMusic+0x22c>
    2748:	4b 30       	cpi	r20, 0x0B	; 11
    274a:	49 f4       	brne	.+18     	; 0x275e <ProcessMusic+0x1f4>
    274c:	f8 9e       	mul	r15, r24
    274e:	d0 01       	movw	r26, r0
    2750:	11 24       	eor	r1, r1
    2752:	a2 5b       	subi	r26, 0xB2	; 178
    2754:	b6 4f       	sbci	r27, 0xF6	; 246
    2756:	ee 0f       	add	r30, r30
    2758:	13 96       	adiw	r26, 0x03	; 3
    275a:	ec 93       	st	X, r30
    275c:	1c c0       	rjmp	.+56     	; 0x2796 <ProcessMusic+0x22c>
    275e:	4c 35       	cpi	r20, 0x5C	; 92
    2760:	49 f4       	brne	.+18     	; 0x2774 <ProcessMusic+0x20a>
    2762:	f8 9e       	mul	r15, r24
    2764:	d0 01       	movw	r26, r0
    2766:	11 24       	eor	r1, r1
    2768:	a2 5b       	subi	r26, 0xB2	; 178
    276a:	b6 4f       	sbci	r27, 0xF6	; 246
    276c:	ee 0f       	add	r30, r30
    276e:	1a 96       	adiw	r26, 0x0a	; 10
    2770:	ec 93       	st	X, r30
    2772:	11 c0       	rjmp	.+34     	; 0x2796 <ProcessMusic+0x22c>
    2774:	44 36       	cpi	r20, 0x64	; 100
    2776:	79 f4       	brne	.+30     	; 0x2796 <ProcessMusic+0x22c>
    2778:	f8 9e       	mul	r15, r24
    277a:	d0 01       	movw	r26, r0
    277c:	11 24       	eor	r1, r1
    277e:	a2 5b       	subi	r26, 0xB2	; 178
    2780:	b6 4f       	sbci	r27, 0xF6	; 246
    2782:	ee 0f       	add	r30, r30
    2784:	1b 96       	adiw	r26, 0x0b	; 11
    2786:	ec 93       	st	X, r30
    2788:	06 c0       	rjmp	.+12     	; 0x2796 <ProcessMusic+0x22c>
    278a:	f8 9e       	mul	r15, r24
    278c:	f0 01       	movw	r30, r0
    278e:	11 24       	eor	r1, r1
    2790:	e2 5b       	subi	r30, 0xB2	; 178
    2792:	f6 4f       	sbci	r31, 0xF6	; 246
    2794:	40 8b       	std	Z+16, r20	; 0x10
    2796:	83 eb       	ldi	r24, 0xB3	; 179
    2798:	99 e0       	ldi	r25, 0x09	; 9
    279a:	0e 94 8e 14 	call	0x291c	; 0x291c <ReadVarLen>
    279e:	90 93 b1 09 	sts	0x09B1, r25	; 0x8009b1 <nextDeltaTime+0x1>
    27a2:	80 93 b0 09 	sts	0x09B0, r24	; 0x8009b0 <nextDeltaTime>
    27a6:	10 92 ab 09 	sts	0x09AB, r1	; 0x8009ab <currDeltaTime+0x1>
    27aa:	10 92 aa 09 	sts	0x09AA, r1	; 0x8009aa <currDeltaTime>
    27ae:	3b cf       	rjmp	.-394    	; 0x2626 <ProcessMusic+0xbc>
    27b0:	01 96       	adiw	r24, 0x01	; 1
    27b2:	90 93 ab 09 	sts	0x09AB, r25	; 0x8009ab <currDeltaTime+0x1>
    27b6:	80 93 aa 09 	sts	0x09AA, r24	; 0x8009aa <currDeltaTime>
    27ba:	ee 24       	eor	r14, r14
    27bc:	ea 94       	dec	r14
    27be:	f1 2c       	mov	r15, r1
    27c0:	88 81       	ld	r24, Y
    27c2:	85 ff       	sbrs	r24, 5
    27c4:	37 c0       	rjmp	.+110    	; 0x2834 <ProcessMusic+0x2ca>
    27c6:	2d 89       	ldd	r18, Y+21	; 0x15
    27c8:	3e 89       	ldd	r19, Y+22	; 0x16
    27ca:	23 2b       	or	r18, r19
    27cc:	09 f4       	brne	.+2      	; 0x27d0 <ProcessMusic+0x266>
    27ce:	32 c0       	rjmp	.+100    	; 0x2834 <ProcessMusic+0x2ca>
    27d0:	86 fd       	sbrc	r24, 6
    27d2:	30 c0       	rjmp	.+96     	; 0x2834 <ProcessMusic+0x2ca>
    27d4:	9b 89       	ldd	r25, Y+19	; 0x13
    27d6:	8a 89       	ldd	r24, Y+18	; 0x12
    27d8:	98 13       	cpse	r25, r24
    27da:	2a c0       	rjmp	.+84     	; 0x2830 <ProcessMusic+0x2c6>
    27dc:	ed 89       	ldd	r30, Y+21	; 0x15
    27de:	fe 89       	ldd	r31, Y+22	; 0x16
    27e0:	bf 01       	movw	r22, r30
    27e2:	6f 5f       	subi	r22, 0xFF	; 255
    27e4:	7f 4f       	sbci	r23, 0xFF	; 255
    27e6:	7e 8b       	std	Y+22, r23	; 0x16
    27e8:	6d 8b       	std	Y+21, r22	; 0x15
    27ea:	84 91       	lpm	r24, Z
    27ec:	8f 3f       	cpi	r24, 0xFF	; 255
    27ee:	31 f4       	brne	.+12     	; 0x27fc <ProcessMusic+0x292>
    27f0:	88 81       	ld	r24, Y
    27f2:	8f 77       	andi	r24, 0x7F	; 127
    27f4:	88 83       	st	Y, r24
    27f6:	1e 8a       	std	Y+22, r1	; 0x16
    27f8:	1d 8a       	std	Y+21, r1	; 0x15
    27fa:	1a c0       	rjmp	.+52     	; 0x2830 <ProcessMusic+0x2c6>
    27fc:	32 96       	adiw	r30, 0x02	; 2
    27fe:	fe 8b       	std	Y+22, r31	; 0x16
    2800:	ed 8b       	std	Y+21, r30	; 0x15
    2802:	fb 01       	movw	r30, r22
    2804:	64 91       	lpm	r22, Z
    2806:	e8 2f       	mov	r30, r24
    2808:	f0 e0       	ldi	r31, 0x00	; 0
    280a:	ee 0f       	add	r30, r30
    280c:	ff 1f       	adc	r31, r31
    280e:	ee 53       	subi	r30, 0x3E	; 62
    2810:	ff 4f       	sbci	r31, 0xFF	; 255
    2812:	25 91       	lpm	r18, Z+
    2814:	34 91       	lpm	r19, Z
    2816:	ce 01       	movw	r24, r28
    2818:	f9 01       	movw	r30, r18
    281a:	09 95       	icall
    281c:	ed 89       	ldd	r30, Y+21	; 0x15
    281e:	fe 89       	ldd	r31, Y+22	; 0x16
    2820:	cf 01       	movw	r24, r30
    2822:	01 96       	adiw	r24, 0x01	; 1
    2824:	9e 8b       	std	Y+22, r25	; 0x16
    2826:	8d 8b       	std	Y+21, r24	; 0x15
    2828:	e4 91       	lpm	r30, Z
    282a:	ea 8b       	std	Y+18, r30	; 0x12
    282c:	1b 8a       	std	Y+19, r1	; 0x13
    282e:	d2 cf       	rjmp	.-92     	; 0x27d4 <ProcessMusic+0x26a>
    2830:	9f 5f       	subi	r25, 0xFF	; 255
    2832:	9b 8b       	std	Y+19, r25	; 0x13
    2834:	98 81       	ld	r25, Y
    2836:	95 ff       	sbrs	r25, 5
    2838:	5e c0       	rjmp	.+188    	; 0x28f6 <ProcessMusic+0x38c>
    283a:	8c 89       	ldd	r24, Y+20	; 0x14
    283c:	8f 3f       	cpi	r24, 0xFF	; 255
    283e:	11 f0       	breq	.+4      	; 0x2844 <ProcessMusic+0x2da>
    2840:	8f 5f       	subi	r24, 0xFF	; 255
    2842:	8c 8b       	std	Y+20, r24	; 0x14
    2844:	97 fd       	sbrc	r25, 7
    2846:	02 c0       	rjmp	.+4      	; 0x284c <ProcessMusic+0x2e2>
    2848:	9c 85       	ldd	r25, Y+12	; 0x0c
    284a:	01 c0       	rjmp	.+2      	; 0x284e <ProcessMusic+0x2e4>
    284c:	9f ef       	ldi	r25, 0xFF	; 255
    284e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2850:	49 85       	ldd	r20, Y+9	; 0x09
    2852:	88 23       	and	r24, r24
    2854:	09 f4       	brne	.+2      	; 0x2858 <ProcessMusic+0x2ee>
    2856:	49 c0       	rjmp	.+146    	; 0x28ea <ProcessMusic+0x380>
    2858:	6e 85       	ldd	r22, Y+14	; 0x0e
    285a:	66 23       	and	r22, r22
    285c:	09 f4       	brne	.+2      	; 0x2860 <ProcessMusic+0x2f6>
    285e:	45 c0       	rjmp	.+138    	; 0x28ea <ProcessMusic+0x380>
    2860:	99 23       	and	r25, r25
    2862:	09 f4       	brne	.+2      	; 0x2866 <ProcessMusic+0x2fc>
    2864:	42 c0       	rjmp	.+132    	; 0x28ea <ProcessMusic+0x380>
    2866:	50 91 af 09 	lds	r21, 0x09AF	; 0x8009af <masterVolume>
    286a:	55 23       	and	r21, r21
    286c:	09 f4       	brne	.+2      	; 0x2870 <ProcessMusic+0x306>
    286e:	3d c0       	rjmp	.+122    	; 0x28ea <ProcessMusic+0x380>
    2870:	89 9f       	mul	r24, r25
    2872:	c0 01       	movw	r24, r0
    2874:	11 24       	eor	r1, r1
    2876:	93 95       	inc	r25
    2878:	89 2f       	mov	r24, r25
    287a:	99 27       	eor	r25, r25
    287c:	68 9f       	mul	r22, r24
    287e:	90 01       	movw	r18, r0
    2880:	69 9f       	mul	r22, r25
    2882:	30 0d       	add	r19, r0
    2884:	11 24       	eor	r1, r1
    2886:	33 95       	inc	r19
    2888:	23 2f       	mov	r18, r19
    288a:	33 27       	eor	r19, r19
    288c:	6b 81       	ldd	r22, Y+3	; 0x03
    288e:	62 9f       	mul	r22, r18
    2890:	c0 01       	movw	r24, r0
    2892:	63 9f       	mul	r22, r19
    2894:	90 0d       	add	r25, r0
    2896:	11 24       	eor	r1, r1
    2898:	93 95       	inc	r25
    289a:	89 2f       	mov	r24, r25
    289c:	99 27       	eor	r25, r25
    289e:	58 9f       	mul	r21, r24
    28a0:	90 01       	movw	r18, r0
    28a2:	59 9f       	mul	r21, r25
    28a4:	30 0d       	add	r19, r0
    28a6:	11 24       	eor	r1, r1
    28a8:	33 95       	inc	r19
    28aa:	23 2f       	mov	r18, r19
    28ac:	33 27       	eor	r19, r19
    28ae:	8a 85       	ldd	r24, Y+10	; 0x0a
    28b0:	88 23       	and	r24, r24
    28b2:	e9 f0       	breq	.+58     	; 0x28ee <ProcessMusic+0x384>
    28b4:	e4 2f       	mov	r30, r20
    28b6:	f0 e0       	ldi	r31, 0x00	; 0
    28b8:	e0 50       	subi	r30, 0x00	; 0
    28ba:	f4 4d       	sbci	r31, 0xD4	; 212
    28bc:	e4 91       	lpm	r30, Z
    28be:	e0 58       	subi	r30, 0x80	; 128
    28c0:	8e 9f       	mul	r24, r30
    28c2:	f0 01       	movw	r30, r0
    28c4:	11 24       	eor	r1, r1
    28c6:	f3 95       	inc	r31
    28c8:	ef 2f       	mov	r30, r31
    28ca:	ff 27       	eor	r31, r31
    28cc:	b7 01       	movw	r22, r14
    28ce:	6e 1b       	sub	r22, r30
    28d0:	7f 0b       	sbc	r23, r31
    28d2:	62 9f       	mul	r22, r18
    28d4:	c0 01       	movw	r24, r0
    28d6:	63 9f       	mul	r22, r19
    28d8:	90 0d       	add	r25, r0
    28da:	72 9f       	mul	r23, r18
    28dc:	90 0d       	add	r25, r0
    28de:	11 24       	eor	r1, r1
    28e0:	9c 01       	movw	r18, r24
    28e2:	33 95       	inc	r19
    28e4:	23 2f       	mov	r18, r19
    28e6:	33 27       	eor	r19, r19
    28e8:	02 c0       	rjmp	.+4      	; 0x28ee <ProcessMusic+0x384>
    28ea:	20 e0       	ldi	r18, 0x00	; 0
    28ec:	30 e0       	ldi	r19, 0x00	; 0
    28ee:	8b 85       	ldd	r24, Y+11	; 0x0b
    28f0:	48 0f       	add	r20, r24
    28f2:	49 87       	std	Y+9, r20	; 0x09
    28f4:	02 c0       	rjmp	.+4      	; 0x28fa <ProcessMusic+0x390>
    28f6:	20 e0       	ldi	r18, 0x00	; 0
    28f8:	30 e0       	ldi	r19, 0x00	; 0
    28fa:	f8 01       	movw	r30, r16
    28fc:	20 83       	st	Z, r18
    28fe:	67 96       	adiw	r28, 0x17	; 23
    2900:	0a 5f       	subi	r16, 0xFA	; 250
    2902:	1f 4f       	sbci	r17, 0xFF	; 255
    2904:	f9 e0       	ldi	r31, 0x09	; 9
    2906:	ca 3a       	cpi	r28, 0xAA	; 170
    2908:	df 07       	cpc	r29, r31
    290a:	09 f0       	breq	.+2      	; 0x290e <ProcessMusic+0x3a4>
    290c:	59 cf       	rjmp	.-334    	; 0x27c0 <ProcessMusic+0x256>
    290e:	df 91       	pop	r29
    2910:	cf 91       	pop	r28
    2912:	1f 91       	pop	r17
    2914:	0f 91       	pop	r16
    2916:	ff 90       	pop	r15
    2918:	ef 90       	pop	r14
    291a:	08 95       	ret

0000291c <ReadVarLen>:
    291c:	dc 01       	movw	r26, r24
    291e:	ed 91       	ld	r30, X+
    2920:	fc 91       	ld	r31, X
    2922:	11 97       	sbiw	r26, 0x01	; 1
    2924:	9f 01       	movw	r18, r30
    2926:	2f 5f       	subi	r18, 0xFF	; 255
    2928:	3f 4f       	sbci	r19, 0xFF	; 255
    292a:	11 96       	adiw	r26, 0x01	; 1
    292c:	3c 93       	st	X, r19
    292e:	2e 93       	st	-X, r18
    2930:	e4 91       	lpm	r30, Z
    2932:	e7 fd       	sbrc	r30, 7
    2934:	03 c0       	rjmp	.+6      	; 0x293c <ReadVarLen+0x20>
    2936:	8e 2f       	mov	r24, r30
    2938:	90 e0       	ldi	r25, 0x00	; 0
    293a:	08 95       	ret
    293c:	ef 77       	andi	r30, 0x7F	; 127
    293e:	8e 2f       	mov	r24, r30
    2940:	90 e0       	ldi	r25, 0x00	; 0
    2942:	96 95       	lsr	r25
    2944:	98 2f       	mov	r25, r24
    2946:	88 27       	eor	r24, r24
    2948:	97 95       	ror	r25
    294a:	87 95       	ror	r24
    294c:	2f 5f       	subi	r18, 0xFF	; 255
    294e:	3f 4f       	sbci	r19, 0xFF	; 255
    2950:	f9 01       	movw	r30, r18
    2952:	31 97       	sbiw	r30, 0x01	; 1
    2954:	e4 91       	lpm	r30, Z
    2956:	4e 2f       	mov	r20, r30
    2958:	4f 77       	andi	r20, 0x7F	; 127
    295a:	84 0f       	add	r24, r20
    295c:	91 1d       	adc	r25, r1
    295e:	e7 fd       	sbrc	r30, 7
    2960:	f0 cf       	rjmp	.-32     	; 0x2942 <ReadVarLen+0x26>
    2962:	2d 93       	st	X+, r18
    2964:	3c 93       	st	X, r19
    2966:	08 95       	ret

00002968 <TriggerCommon>:
    2968:	0f 93       	push	r16
    296a:	1f 93       	push	r17
    296c:	cf 93       	push	r28
    296e:	df 93       	push	r29
    2970:	ec 01       	movw	r28, r24
    2972:	16 2f       	mov	r17, r22
    2974:	88 81       	ld	r24, Y
    2976:	08 2f       	mov	r16, r24
    2978:	00 78       	andi	r16, 0x80	; 128
    297a:	1f 86       	std	Y+15, r1	; 0x0f
    297c:	9f ef       	ldi	r25, 0xFF	; 255
    297e:	9e 87       	std	Y+14, r25	; 0x0e
    2980:	4d 87       	std	Y+13, r20	; 0x0d
    2982:	1c 8a       	std	Y+20, r1	; 0x14
    2984:	87 7b       	andi	r24, 0xB7	; 183
    2986:	88 83       	st	Y, r24
    2988:	1a 86       	std	Y+10, r1	; 0x0a
    298a:	19 86       	std	Y+9, r1	; 0x09
    298c:	29 83       	std	Y+1, r18	; 0x01
    298e:	1c 82       	std	Y+4, r1	; 0x04
    2990:	9b 83       	std	Y+3, r25	; 0x03
    2992:	8a 81       	ldd	r24, Y+2	; 0x02
    2994:	83 30       	cpi	r24, 0x03	; 3
    2996:	69 f4       	brne	.+26     	; 0x29b2 <TriggerCommon+0x4a>
    2998:	01 11       	cpse	r16, r1
    299a:	01 c0       	rjmp	.+2      	; 0x299e <TriggerCommon+0x36>
    299c:	12 2f       	mov	r17, r18
    299e:	81 e0       	ldi	r24, 0x01	; 1
    29a0:	91 e0       	ldi	r25, 0x01	; 1
    29a2:	90 93 2b 09 	sts	0x092B, r25	; 0x80092b <tr4_barrel_hi>
    29a6:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <tr4_barrel_lo>
    29aa:	81 e0       	ldi	r24, 0x01	; 1
    29ac:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <tr4_params>
    29b0:	07 c0       	rjmp	.+14     	; 0x29c0 <TriggerCommon+0x58>
    29b2:	62 2f       	mov	r22, r18
    29b4:	0e 94 42 15 	call	0x2a84	; 0x2a84 <SetMixerNote>
    29b8:	60 e0       	ldi	r22, 0x00	; 0
    29ba:	8a 81       	ldd	r24, Y+2	; 0x02
    29bc:	0e 94 59 15 	call	0x2ab2	; 0x2ab2 <SetMixerWave>
    29c0:	00 23       	and	r16, r16
    29c2:	11 f0       	breq	.+4      	; 0x29c8 <TriggerCommon+0x60>
    29c4:	19 8b       	std	Y+17, r17	; 0x11
    29c6:	01 c0       	rjmp	.+2      	; 0x29ca <TriggerCommon+0x62>
    29c8:	18 8b       	std	Y+16, r17	; 0x10
    29ca:	e0 91 ac 09 	lds	r30, 0x09AC	; 0x8009ac <patchPointers>
    29ce:	f0 91 ad 09 	lds	r31, 0x09AD	; 0x8009ad <patchPointers+0x1>
    29d2:	89 e0       	ldi	r24, 0x09	; 9
    29d4:	18 9f       	mul	r17, r24
    29d6:	e0 0d       	add	r30, r0
    29d8:	f1 1d       	adc	r31, r1
    29da:	11 24       	eor	r1, r1
    29dc:	33 96       	adiw	r30, 0x03	; 3
    29de:	85 91       	lpm	r24, Z+
    29e0:	94 91       	lpm	r25, Z
    29e2:	00 97       	sbiw	r24, 0x00	; 0
    29e4:	19 f4       	brne	.+6      	; 0x29ec <TriggerCommon+0x84>
    29e6:	1e 8a       	std	Y+22, r1	; 0x16
    29e8:	1d 8a       	std	Y+21, r1	; 0x15
    29ea:	07 c0       	rjmp	.+14     	; 0x29fa <TriggerCommon+0x92>
    29ec:	1b 8a       	std	Y+19, r1	; 0x13
    29ee:	fc 01       	movw	r30, r24
    29f0:	24 91       	lpm	r18, Z
    29f2:	2a 8b       	std	Y+18, r18	; 0x12
    29f4:	01 96       	adiw	r24, 0x01	; 1
    29f6:	9e 8b       	std	Y+22, r25	; 0x16
    29f8:	8d 8b       	std	Y+21, r24	; 0x15
    29fa:	df 91       	pop	r29
    29fc:	cf 91       	pop	r28
    29fe:	1f 91       	pop	r17
    2a00:	0f 91       	pop	r16
    2a02:	08 95       	ret

00002a04 <TriggerNote>:


void TriggerNote(unsigned char channel,unsigned char patch,unsigned char note,unsigned char volume){
    2a04:	cf 93       	push	r28
    2a06:	df 93       	push	r29
	Track* track=&tracks[channel];

	//allow only other music notes 
	if((track->flags&TRACK_FLAGS_PLAYING)==0 || (track->flags&TRACK_FLAGS_PRIORITY)==0){
    2a08:	a8 2f       	mov	r26, r24
    2a0a:	b0 e0       	ldi	r27, 0x00	; 0
    2a0c:	97 e1       	ldi	r25, 0x17	; 23
    2a0e:	89 9f       	mul	r24, r25
    2a10:	f0 01       	movw	r30, r0
    2a12:	11 24       	eor	r1, r1
    2a14:	e2 5b       	subi	r30, 0xB2	; 178
    2a16:	f6 4f       	sbci	r31, 0xF6	; 246
    2a18:	80 81       	ld	r24, Z
    2a1a:	85 ff       	sbrs	r24, 5
    2a1c:	02 c0       	rjmp	.+4      	; 0x2a22 <TriggerNote+0x1e>
    2a1e:	87 fd       	sbrc	r24, 7
    2a20:	2e c0       	rjmp	.+92     	; 0x2a7e <TriggerNote+0x7a>
			
		if(volume==0){ //note-off received
    2a22:	21 11       	cpse	r18, r1
    2a24:	18 c0       	rjmp	.+48     	; 0x2a56 <TriggerNote+0x52>

			
			//cut note if there's no envelope & no note hold
			if(track->envelopeStep==0 && !(track->flags&TRACK_FLAGS_HOLD_ENV)){
    2a26:	97 e1       	ldi	r25, 0x17	; 23
    2a28:	9a 9f       	mul	r25, r26
    2a2a:	f0 01       	movw	r30, r0
    2a2c:	9b 9f       	mul	r25, r27
    2a2e:	f0 0d       	add	r31, r0
    2a30:	11 24       	eor	r1, r1
    2a32:	e2 5b       	subi	r30, 0xB2	; 178
    2a34:	f6 4f       	sbci	r31, 0xF6	; 246
    2a36:	97 85       	ldd	r25, Z+15	; 0x0f
    2a38:	91 11       	cpse	r25, r1
    2a3a:	02 c0       	rjmp	.+4      	; 0x2a40 <TriggerNote+0x3c>
    2a3c:	86 ff       	sbrs	r24, 6
				track->noteVol=0;
    2a3e:	15 86       	std	Z+13, r1	; 0x0d
			}

			track->flags&=(~TRACK_FLAGS_HOLD_ENV);//patchEnvelopeHold=false;
    2a40:	97 e1       	ldi	r25, 0x17	; 23
    2a42:	9a 9f       	mul	r25, r26
    2a44:	f0 01       	movw	r30, r0
    2a46:	9b 9f       	mul	r25, r27
    2a48:	f0 0d       	add	r31, r0
    2a4a:	11 24       	eor	r1, r1
    2a4c:	e2 5b       	subi	r30, 0xB2	; 178
    2a4e:	f6 4f       	sbci	r31, 0xF6	; 246
    2a50:	8f 7b       	andi	r24, 0xBF	; 191
    2a52:	80 83       	st	Z, r24
    2a54:	14 c0       	rjmp	.+40     	; 0x2a7e <TriggerNote+0x7a>
    2a56:	82 2f       	mov	r24, r18
    2a58:	24 2f       	mov	r18, r20
		}else{
		
			track->flags=0;//&=(~TRACK_FLAGS_PRIORITY);// priority=0;
    2a5a:	97 e1       	ldi	r25, 0x17	; 23
    2a5c:	9a 9f       	mul	r25, r26
    2a5e:	e0 01       	movw	r28, r0
    2a60:	9b 9f       	mul	r25, r27
    2a62:	d0 0d       	add	r29, r0
    2a64:	11 24       	eor	r1, r1
    2a66:	c2 5b       	subi	r28, 0xB2	; 178
    2a68:	d6 4f       	sbci	r29, 0xF6	; 246
    2a6a:	18 82       	st	Y, r1
			track->patchCommandStreamPos = NULL;
    2a6c:	1e 8a       	std	Y+22, r1	; 0x16
    2a6e:	1d 8a       	std	Y+21, r1	; 0x15
			TriggerCommon(track,patch,volume,note);
    2a70:	48 2f       	mov	r20, r24
    2a72:	ce 01       	movw	r24, r28
    2a74:	0e 94 b4 14 	call	0x2968	; 0x2968 <TriggerCommon>
			track->flags|=TRACK_FLAGS_PLAYING;
    2a78:	88 81       	ld	r24, Y
    2a7a:	80 62       	ori	r24, 0x20	; 32
    2a7c:	88 83       	st	Y, r24
		}

	}
}
    2a7e:	df 91       	pop	r29
    2a80:	cf 91       	pop	r28
    2a82:	08 95       	ret

00002a84 <SetMixerNote>:
    2a84:	99 27       	eor	r25, r25
    2a86:	77 27       	eor	r23, r23
    2a88:	83 30       	cpi	r24, 0x03	; 3
    2a8a:	08 f0       	brcs	.+2      	; 0x2a8e <set_note_waves>
    2a8c:	08 95       	ret

00002a8e <set_note_waves>:
    2a8e:	ec ee       	ldi	r30, 0xEC	; 236
    2a90:	fa e2       	ldi	r31, 0x2A	; 42
    2a92:	66 0f       	add	r22, r22
    2a94:	77 1f       	adc	r23, r23
    2a96:	e6 0f       	add	r30, r22
    2a98:	f7 1f       	adc	r31, r23
    2a9a:	a5 91       	lpm	r26, Z+
    2a9c:	b4 91       	lpm	r27, Z
    2a9e:	e6 e1       	ldi	r30, 0x16	; 22
    2aa0:	f9 e0       	ldi	r31, 0x09	; 9
    2aa2:	26 e0       	ldi	r18, 0x06	; 6
    2aa4:	28 9f       	mul	r18, r24
    2aa6:	e0 0d       	add	r30, r0
    2aa8:	f1 1d       	adc	r31, r1
    2aaa:	a1 83       	std	Z+1, r26	; 0x01
    2aac:	b2 83       	std	Z+2, r27	; 0x02
    2aae:	11 24       	eor	r1, r1
    2ab0:	08 95       	ret

00002ab2 <SetMixerWave>:
;         Noise channel: 0xfe=7 bit lfsr, 0xff=15 bit lfsr
;                 
;***********************
.section .text.SetMixerWave
SetMixerWave:
	clr r25
    2ab2:	99 27       	eor	r25, r25
	clr r23
    2ab4:	77 27       	eor	r23, r23

#if (INCLUDE_DEFAULT_WAVES != 0)
	ldi ZL,lo8(mixerStruct)
    2ab6:	e6 e1       	ldi	r30, 0x16	; 22
	ldi ZH,hi8(mixerStruct)
    2ab8:	f9 e0       	ldi	r31, 0x09	; 9
	ldi r18,CHANNEL_STRUCT_SIZE
    2aba:	26 e0       	ldi	r18, 0x06	; 6
	mul r18,r24	
    2abc:	28 9f       	mul	r18, r24
	add ZL,r0
    2abe:	e0 0d       	add	r30, r0
	adc ZH,r1
    2ac0:	f1 1d       	adc	r31, r1
#endif

#if MIXER_CHAN4_TYPE == 0
	cpi r22,0xfe	;7bit lfsr
    2ac2:	6e 3f       	cpi	r22, 0xFE	; 254
	brne smw1
    2ac4:	31 f4       	brne	.+12     	; 0x2ad2 <smw1>
	lds r22,tr4_params
    2ac6:	60 91 29 09 	lds	r22, 0x0929	; 0x800929 <tr4_params>
	andi r22,0xfe;
    2aca:	6e 7f       	andi	r22, 0xFE	; 254
	sts tr4_params,r22
    2acc:	60 93 29 09 	sts	0x0929, r22	; 0x800929 <tr4_params>
	rjmp esmw	
    2ad0:	0b c0       	rjmp	.+22     	; 0x2ae8 <esmw>

00002ad2 <smw1>:
smw1:
	cpi r22,0xff	;15bit lfsr
    2ad2:	6f 3f       	cpi	r22, 0xFF	; 255
	brne smw2
    2ad4:	31 f4       	brne	.+12     	; 0x2ae2 <smw2>
	lds r22,tr4_params
    2ad6:	60 91 29 09 	lds	r22, 0x0929	; 0x800929 <tr4_params>
	ori r22,0xfe;
    2ada:	6e 6f       	ori	r22, 0xFE	; 254
	sts tr4_params,r22	
    2adc:	60 93 29 09 	sts	0x0929, r22	; 0x800929 <tr4_params>
	rjmp esmw
    2ae0:	03 c0       	rjmp	.+6      	; 0x2ae8 <esmw>

00002ae2 <smw2>:
smw2:
#endif

#if (INCLUDE_DEFAULT_WAVES != 0)
	ldi r23,hi8(waves)
    2ae2:	7c e2       	ldi	r23, 0x2C	; 44
	add r23,r22
    2ae4:	76 0f       	add	r23, r22
	std Z+samplepos_hi,r23 ;store path No
    2ae6:	75 83       	std	Z+5, r23	; 0x05

00002ae8 <esmw>:
#endif

esmw:
	clr r1	
    2ae8:	11 24       	eor	r1, r1
	ret
    2aea:	08 95       	ret

00002aec <steptable>:
    2aec:	22 00       	.word	0x0022	; ????
    2aee:	24 00       	.word	0x0024	; ????
    2af0:	26 00       	.word	0x0026	; ????
    2af2:	28 00       	.word	0x0028	; ????
    2af4:	2b 00       	.word	0x002b	; ????
    2af6:	2d 00       	.word	0x002d	; ????
    2af8:	30 00       	.word	0x0030	; ????
    2afa:	33 00       	.word	0x0033	; ????
    2afc:	36 00       	.word	0x0036	; ????
    2afe:	39 00       	.word	0x0039	; ????
    2b00:	3d 00       	.word	0x003d	; ????
    2b02:	40 00       	.word	0x0040	; ????
    2b04:	44 00       	.word	0x0044	; ????
    2b06:	48 00       	.word	0x0048	; ????
    2b08:	4c 00       	.word	0x004c	; ????
    2b0a:	51 00       	.word	0x0051	; ????
    2b0c:	56 00       	.word	0x0056	; ????
    2b0e:	5b 00       	.word	0x005b	; ????
    2b10:	60 00       	.word	0x0060	; ????
    2b12:	66 00       	.word	0x0066	; ????
    2b14:	6c 00       	.word	0x006c	; ????
    2b16:	73 00       	.word	0x0073	; ????
    2b18:	79 00       	.word	0x0079	; ????
    2b1a:	81 00       	.word	0x0081	; ????
    2b1c:	88 00       	.word	0x0088	; ????
    2b1e:	90 00       	.word	0x0090	; ????
    2b20:	99 00       	.word	0x0099	; ????
    2b22:	a2 00       	.word	0x00a2	; ????
    2b24:	ac 00       	.word	0x00ac	; ????
    2b26:	b6 00       	.word	0x00b6	; ????
    2b28:	c1 00       	.word	0x00c1	; ????
    2b2a:	cc 00       	.word	0x00cc	; ????
    2b2c:	d8 00       	.word	0x00d8	; ????
    2b2e:	e5 00       	.word	0x00e5	; ????
    2b30:	f3 00       	.word	0x00f3	; ????
    2b32:	01 01       	movw	r0, r2
    2b34:	10 01       	movw	r2, r0
    2b36:	21 01       	movw	r4, r2
    2b38:	32 01       	movw	r6, r4
    2b3a:	44 01       	movw	r8, r8
    2b3c:	57 01       	movw	r10, r14
    2b3e:	6c 01       	movw	r12, r24
    2b40:	81 01       	movw	r16, r2
    2b42:	98 01       	movw	r18, r16
    2b44:	b0 01       	movw	r22, r0
    2b46:	ca 01       	movw	r24, r20
    2b48:	e5 01       	movw	r28, r10
    2b4a:	02 02       	muls	r16, r18
    2b4c:	21 02       	muls	r18, r17
    2b4e:	41 02       	muls	r20, r17
    2b50:	64 02       	muls	r22, r20
    2b52:	88 02       	muls	r24, r24
    2b54:	ae 02       	muls	r26, r30
    2b56:	d7 02       	muls	r29, r23
    2b58:	03 03       	mulsu	r16, r19
    2b5a:	30 03       	mulsu	r19, r16
    2b5c:	61 03       	mulsu	r22, r17
    2b5e:	94 03       	fmuls	r17, r20
    2b60:	cb 03       	fmulsu	r20, r19
    2b62:	05 04       	cpc	r0, r5
    2b64:	42 04       	cpc	r4, r2
    2b66:	83 04       	cpc	r8, r3
    2b68:	c7 04       	cpc	r12, r7
    2b6a:	10 05       	cpc	r17, r0
    2b6c:	5d 05       	cpc	r21, r13
    2b6e:	af 05       	cpc	r26, r15
    2b70:	05 06       	cpc	r0, r21
    2b72:	61 06       	cpc	r6, r17
    2b74:	c2 06       	cpc	r12, r18
    2b76:	29 07       	cpc	r18, r25
    2b78:	96 07       	cpc	r25, r22
    2b7a:	09 08       	sbc	r0, r9
    2b7c:	83 08       	sbc	r8, r3
    2b7e:	05 09       	sbc	r16, r5
    2b80:	8e 09       	sbc	r24, r14
    2b82:	20 0a       	sbc	r2, r16
    2b84:	ba 0a       	sbc	r11, r26
    2b86:	5d 0b       	sbc	r21, r29
    2b88:	0a 0c       	add	r0, r10
    2b8a:	c1 0c       	add	r12, r1
    2b8c:	84 0d       	add	r24, r4
    2b8e:	51 0e       	add	r5, r17
    2b90:	2b 0f       	add	r18, r27
    2b92:	12 10       	cpse	r1, r2
    2b94:	07 11       	cpse	r16, r7
    2b96:	0a 12       	cpse	r0, r26
    2b98:	1d 13       	cpse	r17, r29
    2b9a:	40 14       	cp	r4, r0
    2b9c:	74 15       	cp	r23, r4
    2b9e:	ba 16       	cp	r11, r26
    2ba0:	14 18       	sub	r1, r4
    2ba2:	83 19       	sub	r24, r3
    2ba4:	07 1b       	sub	r16, r23
    2ba6:	a3 1c       	adc	r10, r3
    2ba8:	57 1e       	adc	r5, r23
    2baa:	24 20       	and	r2, r4
    2bac:	0e 22       	and	r0, r30
    2bae:	14 24       	eor	r1, r4
    2bb0:	39 26       	eor	r3, r25
    2bb2:	7f 28       	or	r7, r15
    2bb4:	e8 2a       	or	r14, r24
    2bb6:	75 2d       	mov	r23, r5
    2bb8:	29 30       	cpi	r18, 0x09	; 9
    2bba:	06 33       	cpi	r16, 0x36	; 54
    2bbc:	0f 36       	cpi	r16, 0x6F	; 111
    2bbe:	45 39       	cpi	r20, 0x95	; 149
    2bc0:	ad 3c       	cpi	r26, 0xCD	; 205
    2bc2:	49 40       	sbci	r20, 0x09	; 9
    2bc4:	1b 44       	sbci	r17, 0x4B	; 75
    2bc6:	28 48       	sbci	r18, 0x88	; 136
    2bc8:	73 4c       	sbci	r23, 0xC3	; 195
    2bca:	fe 50       	subi	r31, 0x0E	; 14
    2bcc:	cf 55       	subi	r28, 0x5F	; 95
    2bce:	ea 5a       	subi	r30, 0xAA	; 170
    2bd0:	51 60       	ori	r21, 0x01	; 1
    2bd2:	0c 66       	ori	r16, 0x6C	; 108
    2bd4:	1d 6c       	ori	r17, 0xCD	; 205
    2bd6:	8b 72       	andi	r24, 0x2B	; 43
    2bd8:	5a 79       	andi	r21, 0x9A	; 154
    2bda:	92 80       	ldd	r9, Z+2	; 0x02
    2bdc:	37 88       	ldd	r3, Z+23	; 0x17
    2bde:	50 90 e5 98 	lds	r5, 0x98E5	; 0x8098e5 <__bss_end+0x8f28>
    2be2:	fd a1       	ldd	r31, Y+37	; 0x25
    2be4:	9f ab       	std	Y+55, r25	; 0x37
    2be6:	d3 b5       	in	r29, 0x23	; 35
    2be8:	a3 c0       	rjmp	.+326    	; 0x2d30 <waves+0x130>
	...

00002c00 <waves>:
    2c00:	00 03       	mulsu	r16, r16
    2c02:	06 09       	sbc	r16, r6
    2c04:	0c 10       	cpse	r0, r12
    2c06:	13 16       	cp	r1, r19
    2c08:	19 1c       	adc	r1, r9
    2c0a:	1f 22       	and	r1, r31
    2c0c:	25 28       	or	r2, r5
    2c0e:	2b 2e       	mov	r2, r27
    2c10:	31 33       	cpi	r19, 0x31	; 49
    2c12:	36 39       	cpi	r19, 0x96	; 150
    2c14:	3c 3f       	cpi	r19, 0xFC	; 252
    2c16:	41 44       	sbci	r20, 0x41	; 65
    2c18:	47 49       	sbci	r20, 0x97	; 151
    2c1a:	4c 4e       	sbci	r20, 0xEC	; 236
    2c1c:	51 53       	subi	r21, 0x31	; 49
    2c1e:	55 58       	subi	r21, 0x85	; 133
    2c20:	5a 5c       	subi	r21, 0xCA	; 202
    2c22:	5e 60       	ori	r21, 0x0E	; 14
    2c24:	62 64       	ori	r22, 0x42	; 66
    2c26:	66 68       	ori	r22, 0x86	; 134
    2c28:	6a 6b       	ori	r22, 0xBA	; 186
    2c2a:	6d 6f       	ori	r22, 0xFD	; 253
    2c2c:	70 71       	andi	r23, 0x10	; 16
    2c2e:	73 74       	andi	r23, 0x43	; 67
    2c30:	75 76       	andi	r23, 0x65	; 101
    2c32:	78 79       	andi	r23, 0x98	; 152
    2c34:	7a 7a       	andi	r23, 0xAA	; 170
    2c36:	7b 7c       	andi	r23, 0xCB	; 203
    2c38:	7d 7d       	andi	r23, 0xDD	; 221
    2c3a:	7e 7e       	andi	r23, 0xEE	; 238
    2c3c:	7e 7f       	andi	r23, 0xFE	; 254
    2c3e:	7f 7f       	andi	r23, 0xFF	; 255
    2c40:	7f 7f       	andi	r23, 0xFF	; 255
    2c42:	7f 7f       	andi	r23, 0xFF	; 255
    2c44:	7e 7e       	andi	r23, 0xEE	; 238
    2c46:	7e 7d       	andi	r23, 0xDE	; 222
    2c48:	7d 7c       	andi	r23, 0xCD	; 205
    2c4a:	7b 7a       	andi	r23, 0xAB	; 171
    2c4c:	7a 79       	andi	r23, 0x9A	; 154
    2c4e:	78 76       	andi	r23, 0x68	; 104
    2c50:	75 74       	andi	r23, 0x45	; 69
    2c52:	73 71       	andi	r23, 0x13	; 19
    2c54:	70 6f       	ori	r23, 0xF0	; 240
    2c56:	6d 6b       	ori	r22, 0xBD	; 189
    2c58:	6a 68       	ori	r22, 0x8A	; 138
    2c5a:	66 64       	ori	r22, 0x46	; 70
    2c5c:	62 60       	ori	r22, 0x02	; 2
    2c5e:	5e 5c       	subi	r21, 0xCE	; 206
    2c60:	5a 58       	subi	r21, 0x8A	; 138
    2c62:	55 53       	subi	r21, 0x35	; 53
    2c64:	51 4e       	sbci	r21, 0xE1	; 225
    2c66:	4c 49       	sbci	r20, 0x9C	; 156
    2c68:	47 44       	sbci	r20, 0x47	; 71
    2c6a:	41 3f       	cpi	r20, 0xF1	; 241
    2c6c:	3c 39       	cpi	r19, 0x9C	; 156
    2c6e:	36 33       	cpi	r19, 0x36	; 54
    2c70:	31 2e       	mov	r3, r17
    2c72:	2b 28       	or	r2, r11
    2c74:	25 22       	and	r2, r21
    2c76:	1f 1c       	adc	r1, r15
    2c78:	19 16       	cp	r1, r25
    2c7a:	13 10       	cpse	r1, r3
    2c7c:	0c 09       	sbc	r16, r12
    2c7e:	06 03       	mulsu	r16, r22
    2c80:	00 fd       	sbrc	r16, 0
    2c82:	fa f7       	brpl	.-2      	; 0x2c82 <waves+0x82>
    2c84:	f4 f0       	brlt	.+60     	; 0x2cc2 <waves+0xc2>
    2c86:	ed ea       	ldi	r30, 0xAD	; 173
    2c88:	e7 e4       	ldi	r30, 0x47	; 71
    2c8a:	e1 de       	rcall	.-574    	; 0x2a4e <TriggerNote+0x4a>
    2c8c:	db d8       	rcall	.-3658   	; 0x1e44 <render_tile_line+0xc>
    2c8e:	d5 d2       	rcall	.+1450   	; 0x323a <waves+0x63a>
    2c90:	cf cd       	rjmp	.-1122   	; 0x2830 <ProcessMusic+0x2c6>
    2c92:	ca c7       	rjmp	.+3988   	; 0x3c28 <draw+0x4c>
    2c94:	c4 c1       	rjmp	.+904    	; 0x301e <waves+0x41e>
    2c96:	bf bc       	out	0x2f, r11	; 47
    2c98:	b9 b7       	in	r27, 0x39	; 57
    2c9a:	b4 b2       	in	r11, 0x14	; 20
    2c9c:	af ad       	ldd	r26, Y+63	; 0x3f
    2c9e:	ab a8       	ldd	r10, Y+51	; 0x33
    2ca0:	a6 a4       	ldd	r10, Z+46	; 0x2e
    2ca2:	a2 a0       	ldd	r10, Z+34	; 0x22
    2ca4:	9e 9c       	mul	r9, r14
    2ca6:	9a 98       	cbi	0x13, 2	; 19
    2ca8:	96 95       	lsr	r25
    2caa:	93 91       	.word	0x9193	; ????
    2cac:	90 8f       	std	Z+24, r25	; 0x18
    2cae:	8d 8c       	ldd	r8, Y+29	; 0x1d
    2cb0:	8b 8a       	std	Y+19, r8	; 0x13
    2cb2:	88 87       	std	Y+8, r24	; 0x08
    2cb4:	86 86       	std	Z+14, r8	; 0x0e
    2cb6:	85 84       	ldd	r8, Z+13	; 0x0d
    2cb8:	83 83       	std	Z+3, r24	; 0x03
    2cba:	82 82       	std	Z+2, r8	; 0x02
    2cbc:	82 81       	ldd	r24, Z+2	; 0x02
    2cbe:	81 81       	ldd	r24, Z+1	; 0x01
    2cc0:	81 81       	ldd	r24, Z+1	; 0x01
    2cc2:	81 81       	ldd	r24, Z+1	; 0x01
    2cc4:	82 82       	std	Z+2, r8	; 0x02
    2cc6:	82 83       	std	Z+2, r24	; 0x02
    2cc8:	83 84       	ldd	r8, Z+11	; 0x0b
    2cca:	85 86       	std	Z+13, r8	; 0x0d
    2ccc:	86 87       	std	Z+14, r24	; 0x0e
    2cce:	88 8a       	std	Y+16, r8	; 0x10
    2cd0:	8b 8c       	ldd	r8, Y+27	; 0x1b
    2cd2:	8d 8f       	std	Y+29, r24	; 0x1d
    2cd4:	90 91 93 95 	lds	r25, 0x9593	; 0x809593 <__bss_end+0x8bd6>
    2cd8:	96 98       	cbi	0x12, 6	; 18
    2cda:	9a 9c       	mul	r9, r10
    2cdc:	9e a0       	ldd	r9, Y+38	; 0x26
    2cde:	a2 a4       	ldd	r10, Z+42	; 0x2a
    2ce0:	a6 a8       	ldd	r10, Z+54	; 0x36
    2ce2:	ab ad       	ldd	r26, Y+59	; 0x3b
    2ce4:	af b2       	in	r10, 0x1f	; 31
    2ce6:	b4 b7       	in	r27, 0x34	; 52
    2ce8:	b9 bc       	out	0x29, r11	; 41
    2cea:	bf c1       	rjmp	.+894    	; 0x306a <waves+0x46a>
    2cec:	c4 c7       	rjmp	.+3976   	; 0x3c76 <draw+0x9a>
    2cee:	ca cd       	rjmp	.-1132   	; 0x2884 <ProcessMusic+0x31a>
    2cf0:	cf d2       	rcall	.+1438   	; 0x3290 <waves+0x690>
    2cf2:	d5 d8       	rcall	.-3670   	; 0x1e9e <__vector_13+0x24>
    2cf4:	db de       	rcall	.-586    	; 0x2aac <set_note_waves+0x1e>
    2cf6:	e1 e4       	ldi	r30, 0x41	; 65
    2cf8:	e7 ea       	ldi	r30, 0xA7	; 167
    2cfa:	ed f0       	brhs	.+58     	; 0x2d36 <waves+0x136>
    2cfc:	f4 f7       	brge	.-4      	; 0x2cfa <waves+0xfa>
    2cfe:	fa fd       	.word	0xfdfa	; ????
    2d00:	80 81       	ld	r24, Z
    2d02:	82 83       	std	Z+2, r24	; 0x02
    2d04:	84 85       	ldd	r24, Z+12	; 0x0c
    2d06:	86 87       	std	Z+14, r24	; 0x0e
    2d08:	88 89       	ldd	r24, Y+16	; 0x10
    2d0a:	8a 8b       	std	Y+18, r24	; 0x12
    2d0c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2d0e:	8e 8f       	std	Y+30, r24	; 0x1e
    2d10:	90 91 92 93 	lds	r25, 0x9392	; 0x809392 <__bss_end+0x89d5>
    2d14:	94 95       	.word	0x9594	; ????
    2d16:	96 97       	sbiw	r26, 0x26	; 38
    2d18:	98 99       	sbic	0x13, 0	; 19
    2d1a:	9a 9b       	sbis	0x13, 2	; 19
    2d1c:	9c 9d       	mul	r25, r12
    2d1e:	9e 9f       	mul	r25, r30
    2d20:	a0 a1       	ldd	r26, Z+32	; 0x20
    2d22:	a2 a3       	std	Z+34, r26	; 0x22
    2d24:	a4 a5       	ldd	r26, Z+44	; 0x2c
    2d26:	a6 a7       	std	Z+46, r26	; 0x2e
    2d28:	a8 a9       	ldd	r26, Y+48	; 0x30
    2d2a:	aa ab       	std	Y+50, r26	; 0x32
    2d2c:	ac ad       	ldd	r26, Y+60	; 0x3c
    2d2e:	ae af       	std	Y+62, r26	; 0x3e
    2d30:	b0 b1       	in	r27, 0x00	; 0
    2d32:	b2 b3       	in	r27, 0x12	; 18
    2d34:	b4 b5       	in	r27, 0x24	; 36
    2d36:	b6 b7       	in	r27, 0x36	; 54
    2d38:	b8 b9       	out	0x08, r27	; 8
    2d3a:	ba bb       	out	0x1a, r27	; 26
    2d3c:	bc bd       	out	0x2c, r27	; 44
    2d3e:	be bf       	out	0x3e, r27	; 62
    2d40:	c0 c1       	rjmp	.+896    	; 0x30c2 <waves+0x4c2>
    2d42:	c2 c3       	rjmp	.+1924   	; 0x34c8 <waves+0x8c8>
    2d44:	c4 c5       	rjmp	.+2952   	; 0x38ce <update+0xa6>
    2d46:	c6 c7       	rjmp	.+3980   	; 0x3cd4 <draw+0xf8>
    2d48:	c8 c9       	rjmp	.-3184   	; 0x20da <end_set_bank+0x6c>
    2d4a:	ca cb       	rjmp	.-2156   	; 0x24e0 <PatchCommand11+0x4c>
    2d4c:	cc cd       	rjmp	.-1128   	; 0x28e6 <ProcessMusic+0x37c>
    2d4e:	ce cf       	rjmp	.-100    	; 0x2cec <waves+0xec>
    2d50:	d0 d1       	rcall	.+928    	; 0x30f2 <waves+0x4f2>
    2d52:	d2 d3       	rcall	.+1956   	; 0x34f8 <waves+0x8f8>
    2d54:	d4 d5       	rcall	.+2984   	; 0x38fe <update+0xd6>
    2d56:	d6 d7       	rcall	.+4012   	; 0x3d04 <draw+0x128>
    2d58:	d8 d9       	rcall	.-3152   	; 0x210a <mix_loop+0x8>
    2d5a:	da db       	rcall	.-2124   	; 0x2510 <PatchCommand13>
    2d5c:	dc dd       	rcall	.-1096   	; 0x2916 <ProcessMusic+0x3ac>
    2d5e:	de df       	rcall	.-68     	; 0x2d1c <waves+0x11c>
    2d60:	e0 e1       	ldi	r30, 0x10	; 16
    2d62:	e2 e3       	ldi	r30, 0x32	; 50
    2d64:	e4 e5       	ldi	r30, 0x54	; 84
    2d66:	e6 e7       	ldi	r30, 0x76	; 118
    2d68:	e8 e9       	ldi	r30, 0x98	; 152
    2d6a:	ea eb       	ldi	r30, 0xBA	; 186
    2d6c:	ec ed       	ldi	r30, 0xDC	; 220
    2d6e:	ee ef       	ldi	r30, 0xFE	; 254
    2d70:	f0 f1       	brcs	.+124    	; 0x2dee <waves+0x1ee>
    2d72:	f2 f3       	brmi	.-4      	; 0x2d70 <waves+0x170>
    2d74:	f4 f5       	brge	.+124    	; 0x2df2 <waves+0x1f2>
    2d76:	f6 f7       	brtc	.-4      	; 0x2d74 <waves+0x174>
    2d78:	f8 f9       	.word	0xf9f8	; ????
    2d7a:	fa fb       	.word	0xfbfa	; ????
    2d7c:	fc fd       	.word	0xfdfc	; ????
    2d7e:	fe ff       	.word	0xfffe	; ????
    2d80:	00 01       	movw	r0, r0
    2d82:	02 03       	mulsu	r16, r18
    2d84:	04 05       	cpc	r16, r4
    2d86:	06 07       	cpc	r16, r22
    2d88:	08 09       	sbc	r16, r8
    2d8a:	0a 0b       	sbc	r16, r26
    2d8c:	0c 0d       	add	r16, r12
    2d8e:	0e 0f       	add	r16, r30
    2d90:	10 11       	cpse	r17, r0
    2d92:	12 13       	cpse	r17, r18
    2d94:	14 15       	cp	r17, r4
    2d96:	16 17       	cp	r17, r22
    2d98:	18 19       	sub	r17, r8
    2d9a:	1a 1b       	sub	r17, r26
    2d9c:	1c 1d       	adc	r17, r12
    2d9e:	1e 1f       	adc	r17, r30
    2da0:	20 21       	and	r18, r0
    2da2:	22 23       	and	r18, r18
    2da4:	24 25       	eor	r18, r4
    2da6:	26 27       	eor	r18, r22
    2da8:	28 29       	or	r18, r8
    2daa:	2a 2b       	or	r18, r26
    2dac:	2c 2d       	mov	r18, r12
    2dae:	2e 2f       	mov	r18, r30
    2db0:	30 31       	cpi	r19, 0x10	; 16
    2db2:	32 33       	cpi	r19, 0x32	; 50
    2db4:	34 35       	cpi	r19, 0x54	; 84
    2db6:	36 37       	cpi	r19, 0x76	; 118
    2db8:	38 39       	cpi	r19, 0x98	; 152
    2dba:	3a 3b       	cpi	r19, 0xBA	; 186
    2dbc:	3c 3d       	cpi	r19, 0xDC	; 220
    2dbe:	3e 3f       	cpi	r19, 0xFE	; 254
    2dc0:	40 41       	sbci	r20, 0x10	; 16
    2dc2:	42 43       	sbci	r20, 0x32	; 50
    2dc4:	44 45       	sbci	r20, 0x54	; 84
    2dc6:	46 47       	sbci	r20, 0x76	; 118
    2dc8:	48 49       	sbci	r20, 0x98	; 152
    2dca:	4a 4b       	sbci	r20, 0xBA	; 186
    2dcc:	4c 4d       	sbci	r20, 0xDC	; 220
    2dce:	4e 4f       	sbci	r20, 0xFE	; 254
    2dd0:	50 51       	subi	r21, 0x10	; 16
    2dd2:	52 53       	subi	r21, 0x32	; 50
    2dd4:	54 55       	subi	r21, 0x54	; 84
    2dd6:	56 57       	subi	r21, 0x76	; 118
    2dd8:	58 59       	subi	r21, 0x98	; 152
    2dda:	5a 5b       	subi	r21, 0xBA	; 186
    2ddc:	5c 5d       	subi	r21, 0xDC	; 220
    2dde:	5e 5f       	subi	r21, 0xFE	; 254
    2de0:	60 61       	ori	r22, 0x10	; 16
    2de2:	62 63       	ori	r22, 0x32	; 50
    2de4:	64 65       	ori	r22, 0x54	; 84
    2de6:	66 67       	ori	r22, 0x76	; 118
    2de8:	68 69       	ori	r22, 0x98	; 152
    2dea:	6a 6b       	ori	r22, 0xBA	; 186
    2dec:	6c 6d       	ori	r22, 0xDC	; 220
    2dee:	6e 6f       	ori	r22, 0xFE	; 254
    2df0:	70 71       	andi	r23, 0x10	; 16
    2df2:	72 73       	andi	r23, 0x32	; 50
    2df4:	74 75       	andi	r23, 0x54	; 84
    2df6:	76 77       	andi	r23, 0x76	; 118
    2df8:	78 79       	andi	r23, 0x98	; 152
    2dfa:	7a 7b       	andi	r23, 0xBA	; 186
    2dfc:	7c 7d       	andi	r23, 0xDC	; 220
    2dfe:	7e 7f       	andi	r23, 0xFE	; 254
    2e00:	00 02       	muls	r16, r16
    2e02:	04 06       	cpc	r0, r20
    2e04:	08 0a       	sbc	r0, r24
    2e06:	0c 0e       	add	r0, r28
    2e08:	10 12       	cpse	r1, r16
    2e0a:	14 16       	cp	r1, r20
    2e0c:	18 1a       	sub	r1, r24
    2e0e:	1c 1e       	adc	r1, r28
    2e10:	20 22       	and	r2, r16
    2e12:	24 26       	eor	r2, r20
    2e14:	28 2a       	or	r2, r24
    2e16:	2c 2e       	mov	r2, r28
    2e18:	30 32       	cpi	r19, 0x20	; 32
    2e1a:	34 36       	cpi	r19, 0x64	; 100
    2e1c:	38 3a       	cpi	r19, 0xA8	; 168
    2e1e:	3c 3e       	cpi	r19, 0xEC	; 236
    2e20:	40 42       	sbci	r20, 0x20	; 32
    2e22:	44 46       	sbci	r20, 0x64	; 100
    2e24:	48 4a       	sbci	r20, 0xA8	; 168
    2e26:	4c 4e       	sbci	r20, 0xEC	; 236
    2e28:	50 52       	subi	r21, 0x20	; 32
    2e2a:	54 56       	subi	r21, 0x64	; 100
    2e2c:	58 5a       	subi	r21, 0xA8	; 168
    2e2e:	5c 5e       	subi	r21, 0xEC	; 236
    2e30:	60 62       	ori	r22, 0x20	; 32
    2e32:	64 66       	ori	r22, 0x64	; 100
    2e34:	68 6a       	ori	r22, 0xA8	; 168
    2e36:	6c 6e       	ori	r22, 0xEC	; 236
    2e38:	70 72       	andi	r23, 0x20	; 32
    2e3a:	74 76       	andi	r23, 0x64	; 100
    2e3c:	78 7a       	andi	r23, 0xA8	; 168
    2e3e:	7c 7e       	andi	r23, 0xEC	; 236
    2e40:	7f 7d       	andi	r23, 0xDF	; 223
    2e42:	7b 79       	andi	r23, 0x9B	; 155
    2e44:	77 75       	andi	r23, 0x57	; 87
    2e46:	73 71       	andi	r23, 0x13	; 19
    2e48:	6f 6d       	ori	r22, 0xDF	; 223
    2e4a:	6b 69       	ori	r22, 0x9B	; 155
    2e4c:	67 65       	ori	r22, 0x57	; 87
    2e4e:	63 61       	ori	r22, 0x13	; 19
    2e50:	5f 5d       	subi	r21, 0xDF	; 223
    2e52:	5b 59       	subi	r21, 0x9B	; 155
    2e54:	57 55       	subi	r21, 0x57	; 87
    2e56:	53 51       	subi	r21, 0x13	; 19
    2e58:	4f 4d       	sbci	r20, 0xDF	; 223
    2e5a:	4b 49       	sbci	r20, 0x9B	; 155
    2e5c:	47 45       	sbci	r20, 0x57	; 87
    2e5e:	43 41       	sbci	r20, 0x13	; 19
    2e60:	3f 3d       	cpi	r19, 0xDF	; 223
    2e62:	3b 39       	cpi	r19, 0x9B	; 155
    2e64:	37 35       	cpi	r19, 0x57	; 87
    2e66:	33 31       	cpi	r19, 0x13	; 19
    2e68:	2f 2d       	mov	r18, r15
    2e6a:	2b 29       	or	r18, r11
    2e6c:	27 25       	eor	r18, r7
    2e6e:	23 21       	and	r18, r3
    2e70:	1f 1d       	adc	r17, r15
    2e72:	1b 19       	sub	r17, r11
    2e74:	17 15       	cp	r17, r7
    2e76:	13 11       	cpse	r17, r3
    2e78:	0f 0d       	add	r16, r15
    2e7a:	0b 09       	sbc	r16, r11
    2e7c:	07 05       	cpc	r16, r7
    2e7e:	03 01       	movw	r0, r6
    2e80:	ff fd       	.word	0xfdff	; ????
    2e82:	fb f9       	.word	0xf9fb	; ????
    2e84:	f7 f5       	brid	.+124    	; 0x2f02 <waves+0x302>
    2e86:	f3 f1       	brvs	.+124    	; 0x2f04 <waves+0x304>
    2e88:	ef ed       	ldi	r30, 0xDF	; 223
    2e8a:	eb e9       	ldi	r30, 0x9B	; 155
    2e8c:	e7 e5       	ldi	r30, 0x57	; 87
    2e8e:	e3 e1       	ldi	r30, 0x13	; 19
    2e90:	df dd       	rcall	.-1090   	; 0x2a50 <TriggerNote+0x4c>
    2e92:	db d9       	rcall	.-3146   	; 0x224a <update_sound+0x4c>
    2e94:	d7 d5       	rcall	.+2990   	; 0x3a44 <update+0x21c>
    2e96:	d3 d1       	rcall	.+934    	; 0x323e <waves+0x63e>
    2e98:	cf cd       	rjmp	.-1122   	; 0x2a38 <TriggerNote+0x34>
    2e9a:	cb c9       	rjmp	.-3178   	; 0x2232 <update_sound+0x34>
    2e9c:	c7 c5       	rjmp	.+2958   	; 0x3a2c <update+0x204>
    2e9e:	c3 c1       	rjmp	.+902    	; 0x3226 <waves+0x626>
    2ea0:	bf bd       	out	0x2f, r27	; 47
    2ea2:	bb b9       	out	0x0b, r27	; 11
    2ea4:	b7 b5       	in	r27, 0x27	; 39
    2ea6:	b3 b1       	in	r27, 0x03	; 3
    2ea8:	af ad       	ldd	r26, Y+63	; 0x3f
    2eaa:	ab a9       	ldd	r26, Y+51	; 0x33
    2eac:	a7 a5       	ldd	r26, Z+47	; 0x2f
    2eae:	a3 a1       	ldd	r26, Z+35	; 0x23
    2eb0:	9f 9d       	mul	r25, r15
    2eb2:	9b 99       	sbic	0x13, 3	; 19
    2eb4:	97 95       	ror	r25
    2eb6:	93 91       	.word	0x9193	; ????
    2eb8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2eba:	8b 89       	ldd	r24, Y+19	; 0x13
    2ebc:	87 85       	ldd	r24, Z+15	; 0x0f
    2ebe:	83 81       	ldd	r24, Z+3	; 0x03
    2ec0:	80 82       	st	Z, r8
    2ec2:	84 86       	std	Z+12, r8	; 0x0c
    2ec4:	88 8a       	std	Y+16, r8	; 0x10
    2ec6:	8c 8e       	std	Y+28, r8	; 0x1c
    2ec8:	90 92 94 96 	sts	0x9694, r9	; 0x809694 <__bss_end+0x8cd7>
    2ecc:	98 9a       	sbi	0x13, 0	; 19
    2ece:	9c 9e       	mul	r9, r28
    2ed0:	a0 a2       	std	Z+32, r10	; 0x20
    2ed2:	a4 a6       	std	Z+44, r10	; 0x2c
    2ed4:	a8 aa       	std	Y+48, r10	; 0x30
    2ed6:	ac ae       	std	Y+60, r10	; 0x3c
    2ed8:	b0 b2       	in	r11, 0x10	; 16
    2eda:	b4 b6       	in	r11, 0x34	; 52
    2edc:	b8 ba       	out	0x18, r11	; 24
    2ede:	bc be       	out	0x3c, r11	; 60
    2ee0:	c0 c2       	rjmp	.+1408   	; 0x3462 <waves+0x862>
    2ee2:	c4 c6       	rjmp	.+3464   	; 0x3c6c <draw+0x90>
    2ee4:	c8 ca       	rjmp	.-2672   	; 0x2476 <PatchCommand08+0xe>
    2ee6:	cc ce       	rjmp	.-616    	; 0x2c80 <waves+0x80>
    2ee8:	d0 d2       	rcall	.+1440   	; 0x348a <waves+0x88a>
    2eea:	d4 d6       	rcall	.+3496   	; 0x3c94 <draw+0xb8>
    2eec:	d8 da       	rcall	.-2640   	; 0x249e <PatchCommand11+0xa>
    2eee:	dc de       	rcall	.-584    	; 0x2ca8 <waves+0xa8>
    2ef0:	e0 e2       	ldi	r30, 0x20	; 32
    2ef2:	e4 e6       	ldi	r30, 0x64	; 100
    2ef4:	e8 ea       	ldi	r30, 0xA8	; 168
    2ef6:	ec ee       	ldi	r30, 0xEC	; 236
    2ef8:	f0 f2       	brcs	.-68     	; 0x2eb6 <waves+0x2b6>
    2efa:	f4 f6       	brge	.-68     	; 0x2eb8 <waves+0x2b8>
    2efc:	f8 fa       	.word	0xfaf8	; ????
    2efe:	fc fe       	.word	0xfefc	; ????
    2f00:	7f 7f       	andi	r23, 0xFF	; 255
    2f02:	7f 7f       	andi	r23, 0xFF	; 255
    2f04:	7f 7f       	andi	r23, 0xFF	; 255
    2f06:	7f 7f       	andi	r23, 0xFF	; 255
    2f08:	7f 7f       	andi	r23, 0xFF	; 255
    2f0a:	7f 7f       	andi	r23, 0xFF	; 255
    2f0c:	7f 7f       	andi	r23, 0xFF	; 255
    2f0e:	7f 7f       	andi	r23, 0xFF	; 255
    2f10:	7f 7f       	andi	r23, 0xFF	; 255
    2f12:	7f 7f       	andi	r23, 0xFF	; 255
    2f14:	7f 7f       	andi	r23, 0xFF	; 255
    2f16:	7f 7f       	andi	r23, 0xFF	; 255
    2f18:	7f 7f       	andi	r23, 0xFF	; 255
    2f1a:	7f 7f       	andi	r23, 0xFF	; 255
    2f1c:	7f 7f       	andi	r23, 0xFF	; 255
    2f1e:	7f 7f       	andi	r23, 0xFF	; 255
    2f20:	7f 7f       	andi	r23, 0xFF	; 255
    2f22:	7f 7f       	andi	r23, 0xFF	; 255
    2f24:	7f 7f       	andi	r23, 0xFF	; 255
    2f26:	7f 7f       	andi	r23, 0xFF	; 255
    2f28:	7f 7f       	andi	r23, 0xFF	; 255
    2f2a:	7f 7f       	andi	r23, 0xFF	; 255
    2f2c:	7f 7f       	andi	r23, 0xFF	; 255
    2f2e:	7f 7f       	andi	r23, 0xFF	; 255
    2f30:	7f 7f       	andi	r23, 0xFF	; 255
    2f32:	7f 7f       	andi	r23, 0xFF	; 255
    2f34:	7f 7f       	andi	r23, 0xFF	; 255
    2f36:	7f 7f       	andi	r23, 0xFF	; 255
    2f38:	7f 7f       	andi	r23, 0xFF	; 255
    2f3a:	7f 7f       	andi	r23, 0xFF	; 255
    2f3c:	7f 7f       	andi	r23, 0xFF	; 255
    2f3e:	7f 7f       	andi	r23, 0xFF	; 255
    2f40:	80 80       	ld	r8, Z
    2f42:	80 80       	ld	r8, Z
    2f44:	80 80       	ld	r8, Z
    2f46:	80 80       	ld	r8, Z
    2f48:	80 80       	ld	r8, Z
    2f4a:	80 80       	ld	r8, Z
    2f4c:	80 80       	ld	r8, Z
    2f4e:	80 80       	ld	r8, Z
    2f50:	80 80       	ld	r8, Z
    2f52:	80 80       	ld	r8, Z
    2f54:	80 80       	ld	r8, Z
    2f56:	80 80       	ld	r8, Z
    2f58:	80 80       	ld	r8, Z
    2f5a:	80 80       	ld	r8, Z
    2f5c:	80 80       	ld	r8, Z
    2f5e:	80 80       	ld	r8, Z
    2f60:	80 80       	ld	r8, Z
    2f62:	80 80       	ld	r8, Z
    2f64:	80 80       	ld	r8, Z
    2f66:	80 80       	ld	r8, Z
    2f68:	80 80       	ld	r8, Z
    2f6a:	80 80       	ld	r8, Z
    2f6c:	80 80       	ld	r8, Z
    2f6e:	80 80       	ld	r8, Z
    2f70:	80 80       	ld	r8, Z
    2f72:	80 80       	ld	r8, Z
    2f74:	80 80       	ld	r8, Z
    2f76:	80 80       	ld	r8, Z
    2f78:	80 80       	ld	r8, Z
    2f7a:	80 80       	ld	r8, Z
    2f7c:	80 80       	ld	r8, Z
    2f7e:	80 80       	ld	r8, Z
    2f80:	80 80       	ld	r8, Z
    2f82:	80 80       	ld	r8, Z
    2f84:	80 80       	ld	r8, Z
    2f86:	80 80       	ld	r8, Z
    2f88:	80 80       	ld	r8, Z
    2f8a:	80 80       	ld	r8, Z
    2f8c:	80 80       	ld	r8, Z
    2f8e:	80 80       	ld	r8, Z
    2f90:	80 80       	ld	r8, Z
    2f92:	80 80       	ld	r8, Z
    2f94:	80 80       	ld	r8, Z
    2f96:	80 80       	ld	r8, Z
    2f98:	80 80       	ld	r8, Z
    2f9a:	80 80       	ld	r8, Z
    2f9c:	80 80       	ld	r8, Z
    2f9e:	80 80       	ld	r8, Z
    2fa0:	80 80       	ld	r8, Z
    2fa2:	80 80       	ld	r8, Z
    2fa4:	80 80       	ld	r8, Z
    2fa6:	80 80       	ld	r8, Z
    2fa8:	80 80       	ld	r8, Z
    2faa:	80 80       	ld	r8, Z
    2fac:	80 80       	ld	r8, Z
    2fae:	80 80       	ld	r8, Z
    2fb0:	80 80       	ld	r8, Z
    2fb2:	80 80       	ld	r8, Z
    2fb4:	80 80       	ld	r8, Z
    2fb6:	80 80       	ld	r8, Z
    2fb8:	80 80       	ld	r8, Z
    2fba:	80 80       	ld	r8, Z
    2fbc:	80 80       	ld	r8, Z
    2fbe:	80 80       	ld	r8, Z
    2fc0:	80 80       	ld	r8, Z
    2fc2:	80 80       	ld	r8, Z
    2fc4:	80 80       	ld	r8, Z
    2fc6:	80 80       	ld	r8, Z
    2fc8:	80 80       	ld	r8, Z
    2fca:	80 80       	ld	r8, Z
    2fcc:	80 80       	ld	r8, Z
    2fce:	80 80       	ld	r8, Z
    2fd0:	80 80       	ld	r8, Z
    2fd2:	80 80       	ld	r8, Z
    2fd4:	80 80       	ld	r8, Z
    2fd6:	80 80       	ld	r8, Z
    2fd8:	80 80       	ld	r8, Z
    2fda:	80 80       	ld	r8, Z
    2fdc:	80 80       	ld	r8, Z
    2fde:	80 80       	ld	r8, Z
    2fe0:	80 80       	ld	r8, Z
    2fe2:	80 80       	ld	r8, Z
    2fe4:	80 80       	ld	r8, Z
    2fe6:	80 80       	ld	r8, Z
    2fe8:	80 80       	ld	r8, Z
    2fea:	80 80       	ld	r8, Z
    2fec:	80 80       	ld	r8, Z
    2fee:	80 80       	ld	r8, Z
    2ff0:	80 80       	ld	r8, Z
    2ff2:	80 80       	ld	r8, Z
    2ff4:	80 80       	ld	r8, Z
    2ff6:	80 80       	ld	r8, Z
    2ff8:	80 80       	ld	r8, Z
    2ffa:	80 80       	ld	r8, Z
    2ffc:	80 80       	ld	r8, Z
    2ffe:	80 80       	ld	r8, Z
    3000:	7f 7f       	andi	r23, 0xFF	; 255
    3002:	7f 7f       	andi	r23, 0xFF	; 255
    3004:	7f 7f       	andi	r23, 0xFF	; 255
    3006:	7f 7f       	andi	r23, 0xFF	; 255
    3008:	7f 7f       	andi	r23, 0xFF	; 255
    300a:	7f 7f       	andi	r23, 0xFF	; 255
    300c:	7f 7f       	andi	r23, 0xFF	; 255
    300e:	7f 7f       	andi	r23, 0xFF	; 255
    3010:	7f 7f       	andi	r23, 0xFF	; 255
    3012:	7f 7f       	andi	r23, 0xFF	; 255
    3014:	7f 7f       	andi	r23, 0xFF	; 255
    3016:	7f 7f       	andi	r23, 0xFF	; 255
    3018:	7f 7f       	andi	r23, 0xFF	; 255
    301a:	7f 7f       	andi	r23, 0xFF	; 255
    301c:	7f 7f       	andi	r23, 0xFF	; 255
    301e:	7f 7f       	andi	r23, 0xFF	; 255
    3020:	7f 7f       	andi	r23, 0xFF	; 255
    3022:	7f 7f       	andi	r23, 0xFF	; 255
    3024:	7f 7f       	andi	r23, 0xFF	; 255
    3026:	7f 7f       	andi	r23, 0xFF	; 255
    3028:	7f 7f       	andi	r23, 0xFF	; 255
    302a:	7f 7f       	andi	r23, 0xFF	; 255
    302c:	7f 7f       	andi	r23, 0xFF	; 255
    302e:	7f 7f       	andi	r23, 0xFF	; 255
    3030:	7f 7f       	andi	r23, 0xFF	; 255
    3032:	7f 7f       	andi	r23, 0xFF	; 255
    3034:	7f 7f       	andi	r23, 0xFF	; 255
    3036:	7f 7f       	andi	r23, 0xFF	; 255
    3038:	7f 7f       	andi	r23, 0xFF	; 255
    303a:	7f 7f       	andi	r23, 0xFF	; 255
    303c:	7f 7f       	andi	r23, 0xFF	; 255
    303e:	7f 7f       	andi	r23, 0xFF	; 255
    3040:	7f 7f       	andi	r23, 0xFF	; 255
    3042:	7f 7f       	andi	r23, 0xFF	; 255
    3044:	7f 7f       	andi	r23, 0xFF	; 255
    3046:	7f 7f       	andi	r23, 0xFF	; 255
    3048:	7f 7f       	andi	r23, 0xFF	; 255
    304a:	7f 7f       	andi	r23, 0xFF	; 255
    304c:	7f 7f       	andi	r23, 0xFF	; 255
    304e:	7f 7f       	andi	r23, 0xFF	; 255
    3050:	7f 7f       	andi	r23, 0xFF	; 255
    3052:	7f 7f       	andi	r23, 0xFF	; 255
    3054:	7f 7f       	andi	r23, 0xFF	; 255
    3056:	7f 7f       	andi	r23, 0xFF	; 255
    3058:	7f 7f       	andi	r23, 0xFF	; 255
    305a:	7f 7f       	andi	r23, 0xFF	; 255
    305c:	7f 7f       	andi	r23, 0xFF	; 255
    305e:	7f 7f       	andi	r23, 0xFF	; 255
    3060:	7f 7f       	andi	r23, 0xFF	; 255
    3062:	7f 7f       	andi	r23, 0xFF	; 255
    3064:	7f 7f       	andi	r23, 0xFF	; 255
    3066:	7f 7f       	andi	r23, 0xFF	; 255
    3068:	7f 7f       	andi	r23, 0xFF	; 255
    306a:	7f 7f       	andi	r23, 0xFF	; 255
    306c:	7f 7f       	andi	r23, 0xFF	; 255
    306e:	7f 7f       	andi	r23, 0xFF	; 255
    3070:	7f 7f       	andi	r23, 0xFF	; 255
    3072:	7f 7f       	andi	r23, 0xFF	; 255
    3074:	7f 7f       	andi	r23, 0xFF	; 255
    3076:	7f 7f       	andi	r23, 0xFF	; 255
    3078:	7f 7f       	andi	r23, 0xFF	; 255
    307a:	7f 7f       	andi	r23, 0xFF	; 255
    307c:	7f 7f       	andi	r23, 0xFF	; 255
    307e:	7f 7f       	andi	r23, 0xFF	; 255
    3080:	80 80       	ld	r8, Z
    3082:	80 80       	ld	r8, Z
    3084:	80 80       	ld	r8, Z
    3086:	80 80       	ld	r8, Z
    3088:	80 80       	ld	r8, Z
    308a:	80 80       	ld	r8, Z
    308c:	80 80       	ld	r8, Z
    308e:	80 80       	ld	r8, Z
    3090:	80 80       	ld	r8, Z
    3092:	80 80       	ld	r8, Z
    3094:	80 80       	ld	r8, Z
    3096:	80 80       	ld	r8, Z
    3098:	80 80       	ld	r8, Z
    309a:	80 80       	ld	r8, Z
    309c:	80 80       	ld	r8, Z
    309e:	80 80       	ld	r8, Z
    30a0:	80 80       	ld	r8, Z
    30a2:	80 80       	ld	r8, Z
    30a4:	80 80       	ld	r8, Z
    30a6:	80 80       	ld	r8, Z
    30a8:	80 80       	ld	r8, Z
    30aa:	80 80       	ld	r8, Z
    30ac:	80 80       	ld	r8, Z
    30ae:	80 80       	ld	r8, Z
    30b0:	80 80       	ld	r8, Z
    30b2:	80 80       	ld	r8, Z
    30b4:	80 80       	ld	r8, Z
    30b6:	80 80       	ld	r8, Z
    30b8:	80 80       	ld	r8, Z
    30ba:	80 80       	ld	r8, Z
    30bc:	80 80       	ld	r8, Z
    30be:	80 80       	ld	r8, Z
    30c0:	80 80       	ld	r8, Z
    30c2:	80 80       	ld	r8, Z
    30c4:	80 80       	ld	r8, Z
    30c6:	80 80       	ld	r8, Z
    30c8:	80 80       	ld	r8, Z
    30ca:	80 80       	ld	r8, Z
    30cc:	80 80       	ld	r8, Z
    30ce:	80 80       	ld	r8, Z
    30d0:	80 80       	ld	r8, Z
    30d2:	80 80       	ld	r8, Z
    30d4:	80 80       	ld	r8, Z
    30d6:	80 80       	ld	r8, Z
    30d8:	80 80       	ld	r8, Z
    30da:	80 80       	ld	r8, Z
    30dc:	80 80       	ld	r8, Z
    30de:	80 80       	ld	r8, Z
    30e0:	80 80       	ld	r8, Z
    30e2:	80 80       	ld	r8, Z
    30e4:	80 80       	ld	r8, Z
    30e6:	80 80       	ld	r8, Z
    30e8:	80 80       	ld	r8, Z
    30ea:	80 80       	ld	r8, Z
    30ec:	80 80       	ld	r8, Z
    30ee:	80 80       	ld	r8, Z
    30f0:	80 80       	ld	r8, Z
    30f2:	80 80       	ld	r8, Z
    30f4:	80 80       	ld	r8, Z
    30f6:	80 80       	ld	r8, Z
    30f8:	80 80       	ld	r8, Z
    30fa:	80 80       	ld	r8, Z
    30fc:	80 80       	ld	r8, Z
    30fe:	80 80       	ld	r8, Z
    3100:	7f 7f       	andi	r23, 0xFF	; 255
    3102:	7f 7f       	andi	r23, 0xFF	; 255
    3104:	7f 7f       	andi	r23, 0xFF	; 255
    3106:	7f 7f       	andi	r23, 0xFF	; 255
    3108:	7f 7f       	andi	r23, 0xFF	; 255
    310a:	7f 7f       	andi	r23, 0xFF	; 255
    310c:	7f 7f       	andi	r23, 0xFF	; 255
    310e:	7f 7f       	andi	r23, 0xFF	; 255
    3110:	7f 7f       	andi	r23, 0xFF	; 255
    3112:	7f 7f       	andi	r23, 0xFF	; 255
    3114:	7f 7f       	andi	r23, 0xFF	; 255
    3116:	7f 7f       	andi	r23, 0xFF	; 255
    3118:	7f 7f       	andi	r23, 0xFF	; 255
    311a:	7f 7f       	andi	r23, 0xFF	; 255
    311c:	7f 7f       	andi	r23, 0xFF	; 255
    311e:	7f 7f       	andi	r23, 0xFF	; 255
    3120:	7f 7f       	andi	r23, 0xFF	; 255
    3122:	7f 7f       	andi	r23, 0xFF	; 255
    3124:	7f 7f       	andi	r23, 0xFF	; 255
    3126:	7f 7f       	andi	r23, 0xFF	; 255
    3128:	7f 7f       	andi	r23, 0xFF	; 255
    312a:	7f 7f       	andi	r23, 0xFF	; 255
    312c:	7f 7f       	andi	r23, 0xFF	; 255
    312e:	7f 7f       	andi	r23, 0xFF	; 255
    3130:	7f 7f       	andi	r23, 0xFF	; 255
    3132:	7f 7f       	andi	r23, 0xFF	; 255
    3134:	7f 7f       	andi	r23, 0xFF	; 255
    3136:	7f 7f       	andi	r23, 0xFF	; 255
    3138:	7f 7f       	andi	r23, 0xFF	; 255
    313a:	7f 7f       	andi	r23, 0xFF	; 255
    313c:	7f 7f       	andi	r23, 0xFF	; 255
    313e:	7f 7f       	andi	r23, 0xFF	; 255
    3140:	7f 7f       	andi	r23, 0xFF	; 255
    3142:	7f 7f       	andi	r23, 0xFF	; 255
    3144:	7f 7f       	andi	r23, 0xFF	; 255
    3146:	7f 7f       	andi	r23, 0xFF	; 255
    3148:	7f 7f       	andi	r23, 0xFF	; 255
    314a:	7f 7f       	andi	r23, 0xFF	; 255
    314c:	7f 7f       	andi	r23, 0xFF	; 255
    314e:	7f 7f       	andi	r23, 0xFF	; 255
    3150:	7f 7f       	andi	r23, 0xFF	; 255
    3152:	7f 7f       	andi	r23, 0xFF	; 255
    3154:	7f 7f       	andi	r23, 0xFF	; 255
    3156:	7f 7f       	andi	r23, 0xFF	; 255
    3158:	7f 7f       	andi	r23, 0xFF	; 255
    315a:	7f 7f       	andi	r23, 0xFF	; 255
    315c:	7f 7f       	andi	r23, 0xFF	; 255
    315e:	7f 7f       	andi	r23, 0xFF	; 255
    3160:	7f 7f       	andi	r23, 0xFF	; 255
    3162:	7f 7f       	andi	r23, 0xFF	; 255
    3164:	7f 7f       	andi	r23, 0xFF	; 255
    3166:	7f 7f       	andi	r23, 0xFF	; 255
    3168:	7f 7f       	andi	r23, 0xFF	; 255
    316a:	7f 7f       	andi	r23, 0xFF	; 255
    316c:	7f 7f       	andi	r23, 0xFF	; 255
    316e:	7f 7f       	andi	r23, 0xFF	; 255
    3170:	7f 7f       	andi	r23, 0xFF	; 255
    3172:	7f 7f       	andi	r23, 0xFF	; 255
    3174:	7f 7f       	andi	r23, 0xFF	; 255
    3176:	7f 7f       	andi	r23, 0xFF	; 255
    3178:	7f 7f       	andi	r23, 0xFF	; 255
    317a:	7f 7f       	andi	r23, 0xFF	; 255
    317c:	7f 7f       	andi	r23, 0xFF	; 255
    317e:	7f 7f       	andi	r23, 0xFF	; 255
    3180:	7f 7f       	andi	r23, 0xFF	; 255
    3182:	7f 7f       	andi	r23, 0xFF	; 255
    3184:	7f 7f       	andi	r23, 0xFF	; 255
    3186:	7f 7f       	andi	r23, 0xFF	; 255
    3188:	7f 7f       	andi	r23, 0xFF	; 255
    318a:	7f 7f       	andi	r23, 0xFF	; 255
    318c:	7f 7f       	andi	r23, 0xFF	; 255
    318e:	7f 7f       	andi	r23, 0xFF	; 255
    3190:	7f 7f       	andi	r23, 0xFF	; 255
    3192:	7f 7f       	andi	r23, 0xFF	; 255
    3194:	7f 7f       	andi	r23, 0xFF	; 255
    3196:	7f 7f       	andi	r23, 0xFF	; 255
    3198:	7f 7f       	andi	r23, 0xFF	; 255
    319a:	7f 7f       	andi	r23, 0xFF	; 255
    319c:	7f 7f       	andi	r23, 0xFF	; 255
    319e:	7f 7f       	andi	r23, 0xFF	; 255
    31a0:	7f 7f       	andi	r23, 0xFF	; 255
    31a2:	7f 7f       	andi	r23, 0xFF	; 255
    31a4:	7f 7f       	andi	r23, 0xFF	; 255
    31a6:	7f 7f       	andi	r23, 0xFF	; 255
    31a8:	7f 7f       	andi	r23, 0xFF	; 255
    31aa:	7f 7f       	andi	r23, 0xFF	; 255
    31ac:	7f 7f       	andi	r23, 0xFF	; 255
    31ae:	7f 7f       	andi	r23, 0xFF	; 255
    31b0:	7f 7f       	andi	r23, 0xFF	; 255
    31b2:	7f 7f       	andi	r23, 0xFF	; 255
    31b4:	7f 7f       	andi	r23, 0xFF	; 255
    31b6:	7f 7f       	andi	r23, 0xFF	; 255
    31b8:	7f 7f       	andi	r23, 0xFF	; 255
    31ba:	7f 7f       	andi	r23, 0xFF	; 255
    31bc:	7f 7f       	andi	r23, 0xFF	; 255
    31be:	7f 7f       	andi	r23, 0xFF	; 255
    31c0:	80 80       	ld	r8, Z
    31c2:	80 80       	ld	r8, Z
    31c4:	80 80       	ld	r8, Z
    31c6:	80 80       	ld	r8, Z
    31c8:	80 80       	ld	r8, Z
    31ca:	80 80       	ld	r8, Z
    31cc:	80 80       	ld	r8, Z
    31ce:	80 80       	ld	r8, Z
    31d0:	80 80       	ld	r8, Z
    31d2:	80 80       	ld	r8, Z
    31d4:	80 80       	ld	r8, Z
    31d6:	80 80       	ld	r8, Z
    31d8:	80 80       	ld	r8, Z
    31da:	80 80       	ld	r8, Z
    31dc:	80 80       	ld	r8, Z
    31de:	80 80       	ld	r8, Z
    31e0:	80 80       	ld	r8, Z
    31e2:	80 80       	ld	r8, Z
    31e4:	80 80       	ld	r8, Z
    31e6:	80 80       	ld	r8, Z
    31e8:	80 80       	ld	r8, Z
    31ea:	80 80       	ld	r8, Z
    31ec:	80 80       	ld	r8, Z
    31ee:	80 80       	ld	r8, Z
    31f0:	80 80       	ld	r8, Z
    31f2:	80 80       	ld	r8, Z
    31f4:	80 80       	ld	r8, Z
    31f6:	80 80       	ld	r8, Z
    31f8:	80 80       	ld	r8, Z
    31fa:	80 80       	ld	r8, Z
    31fc:	80 80       	ld	r8, Z
    31fe:	80 80       	ld	r8, Z
    3200:	03 09       	sbc	r16, r3
    3202:	13 1e       	adc	r1, r19
    3204:	28 31       	cpi	r18, 0x18	; 24
    3206:	3a 40       	sbci	r19, 0x0A	; 10
    3208:	46 4c       	sbci	r20, 0xC6	; 198
    320a:	50 54       	subi	r21, 0x40	; 64
    320c:	58 5b       	subi	r21, 0xB8	; 184
    320e:	5e 61       	ori	r21, 0x1E	; 30
    3210:	63 65       	ori	r22, 0x53	; 83
    3212:	67 69       	ori	r22, 0x97	; 151
    3214:	6b 6c       	ori	r22, 0xCB	; 203
    3216:	6e 6f       	ori	r22, 0xFE	; 254
    3218:	70 71       	andi	r23, 0x10	; 16
    321a:	72 73       	andi	r23, 0x32	; 50
    321c:	74 75       	andi	r23, 0x54	; 84
    321e:	76 77       	andi	r23, 0x76	; 118
    3220:	77 78       	andi	r23, 0x87	; 135
    3222:	79 79       	andi	r23, 0x99	; 153
    3224:	7a 7a       	andi	r23, 0xAA	; 170
    3226:	7b 7b       	andi	r23, 0xBB	; 187
    3228:	7c 7c       	andi	r23, 0xCC	; 204
    322a:	7c 7d       	andi	r23, 0xDC	; 220
    322c:	7d 7d       	andi	r23, 0xDD	; 221
    322e:	7e 7e       	andi	r23, 0xEE	; 238
    3230:	7e 7e       	andi	r23, 0xEE	; 238
    3232:	7f 7f       	andi	r23, 0xFF	; 255
    3234:	7f 7f       	andi	r23, 0xFF	; 255
    3236:	7f 7f       	andi	r23, 0xFF	; 255
    3238:	7f 7f       	andi	r23, 0xFF	; 255
    323a:	7f 7f       	andi	r23, 0xFF	; 255
    323c:	7f 7f       	andi	r23, 0xFF	; 255
    323e:	7f 7f       	andi	r23, 0xFF	; 255
    3240:	7f 7f       	andi	r23, 0xFF	; 255
    3242:	7f 7f       	andi	r23, 0xFF	; 255
    3244:	7f 7f       	andi	r23, 0xFF	; 255
    3246:	7f 7f       	andi	r23, 0xFF	; 255
    3248:	7f 7f       	andi	r23, 0xFF	; 255
    324a:	7f 7f       	andi	r23, 0xFF	; 255
    324c:	7f 7e       	andi	r23, 0xEF	; 239
    324e:	7e 7e       	andi	r23, 0xEE	; 238
    3250:	7e 7d       	andi	r23, 0xDE	; 222
    3252:	7d 7d       	andi	r23, 0xDD	; 221
    3254:	7c 7c       	andi	r23, 0xCC	; 204
    3256:	7c 7b       	andi	r23, 0xBC	; 188
    3258:	7b 7a       	andi	r23, 0xAB	; 171
    325a:	7a 79       	andi	r23, 0x9A	; 154
    325c:	79 78       	andi	r23, 0x89	; 137
    325e:	77 77       	andi	r23, 0x77	; 119
    3260:	76 75       	andi	r23, 0x56	; 86
    3262:	74 73       	andi	r23, 0x34	; 52
    3264:	72 71       	andi	r23, 0x12	; 18
    3266:	70 6f       	ori	r23, 0xF0	; 240
    3268:	6e 6c       	ori	r22, 0xCE	; 206
    326a:	6b 69       	ori	r22, 0x9B	; 155
    326c:	67 65       	ori	r22, 0x57	; 87
    326e:	63 61       	ori	r22, 0x13	; 19
    3270:	5e 5b       	subi	r21, 0xBE	; 190
    3272:	58 54       	subi	r21, 0x48	; 72
    3274:	50 4c       	sbci	r21, 0xC0	; 192
    3276:	46 40       	sbci	r20, 0x06	; 6
    3278:	3a 31       	cpi	r19, 0x1A	; 26
    327a:	28 1e       	adc	r2, r24
    327c:	13 09       	sbc	r17, r3
    327e:	03 00       	.word	0x0003	; ????
    3280:	c6 cc       	rjmp	.-1652   	; 0x2c0e <waves+0xe>
    3282:	d5 db       	rcall	.-2134   	; 0x2a2e <TriggerNote+0x2a>
    3284:	df e3       	ldi	r29, 0x3F	; 63
    3286:	e5 e7       	ldi	r30, 0x75	; 117
    3288:	e9 ea       	ldi	r30, 0xA9	; 169
    328a:	eb ec       	ldi	r30, 0xCB	; 203
    328c:	ed ee       	ldi	r30, 0xED	; 237
    328e:	ef ef       	ldi	r30, 0xFF	; 255
    3290:	f0 f0       	brcs	.+60     	; 0x32ce <waves+0x6ce>
    3292:	f0 f1       	brcs	.+124    	; 0x3310 <waves+0x710>
    3294:	f1 f1       	breq	.+124    	; 0x3312 <waves+0x712>
    3296:	f1 f2       	breq	.-68     	; 0x3254 <waves+0x654>
    3298:	f2 f2       	brmi	.-68     	; 0x3256 <waves+0x656>
    329a:	f2 f2       	brmi	.-68     	; 0x3258 <waves+0x658>
    329c:	f2 f2       	brmi	.-68     	; 0x325a <waves+0x65a>
    329e:	f2 f3       	brmi	.-4      	; 0x329c <waves+0x69c>
    32a0:	f3 f3       	brvs	.-4      	; 0x329e <waves+0x69e>
    32a2:	f3 f3       	brvs	.-4      	; 0x32a0 <waves+0x6a0>
    32a4:	f3 f3       	brvs	.-4      	; 0x32a2 <waves+0x6a2>
    32a6:	f3 f3       	brvs	.-4      	; 0x32a4 <waves+0x6a4>
    32a8:	f3 f3       	brvs	.-4      	; 0x32a6 <waves+0x6a6>
    32aa:	f3 f3       	brvs	.-4      	; 0x32a8 <waves+0x6a8>
    32ac:	f3 f3       	brvs	.-4      	; 0x32aa <waves+0x6aa>
    32ae:	f3 f3       	brvs	.-4      	; 0x32ac <waves+0x6ac>
    32b0:	f3 f3       	brvs	.-4      	; 0x32ae <waves+0x6ae>
    32b2:	f3 f3       	brvs	.-4      	; 0x32b0 <waves+0x6b0>
    32b4:	f3 f3       	brvs	.-4      	; 0x32b2 <waves+0x6b2>
    32b6:	f3 f3       	brvs	.-4      	; 0x32b4 <waves+0x6b4>
    32b8:	f3 f3       	brvs	.-4      	; 0x32b6 <waves+0x6b6>
    32ba:	f3 f3       	brvs	.-4      	; 0x32b8 <waves+0x6b8>
    32bc:	f3 f3       	brvs	.-4      	; 0x32ba <waves+0x6ba>
    32be:	f3 f3       	brvs	.-4      	; 0x32bc <waves+0x6bc>
    32c0:	f3 f3       	brvs	.-4      	; 0x32be <waves+0x6be>
    32c2:	f3 f3       	brvs	.-4      	; 0x32c0 <waves+0x6c0>
    32c4:	f3 f3       	brvs	.-4      	; 0x32c2 <waves+0x6c2>
    32c6:	f3 f3       	brvs	.-4      	; 0x32c4 <waves+0x6c4>
    32c8:	f3 f3       	brvs	.-4      	; 0x32c6 <waves+0x6c6>
    32ca:	f3 f3       	brvs	.-4      	; 0x32c8 <waves+0x6c8>
    32cc:	f3 f3       	brvs	.-4      	; 0x32ca <waves+0x6ca>
    32ce:	f3 f3       	brvs	.-4      	; 0x32cc <waves+0x6cc>
    32d0:	f3 f3       	brvs	.-4      	; 0x32ce <waves+0x6ce>
    32d2:	f3 f3       	brvs	.-4      	; 0x32d0 <waves+0x6d0>
    32d4:	f3 f3       	brvs	.-4      	; 0x32d2 <waves+0x6d2>
    32d6:	f3 f3       	brvs	.-4      	; 0x32d4 <waves+0x6d4>
    32d8:	f3 f3       	brvs	.-4      	; 0x32d6 <waves+0x6d6>
    32da:	f3 f3       	brvs	.-4      	; 0x32d8 <waves+0x6d8>
    32dc:	f3 f3       	brvs	.-4      	; 0x32da <waves+0x6da>
    32de:	f3 f3       	brvs	.-4      	; 0x32dc <waves+0x6dc>
    32e0:	f2 f2       	brmi	.-68     	; 0x329e <waves+0x69e>
    32e2:	f2 f2       	brmi	.-68     	; 0x32a0 <waves+0x6a0>
    32e4:	f2 f2       	brmi	.-68     	; 0x32a2 <waves+0x6a2>
    32e6:	f2 f2       	brmi	.-68     	; 0x32a4 <waves+0x6a4>
    32e8:	f1 f1       	breq	.+124    	; 0x3366 <waves+0x766>
    32ea:	f1 f1       	breq	.+124    	; 0x3368 <waves+0x768>
    32ec:	f0 f0       	brcs	.+60     	; 0x332a <waves+0x72a>
    32ee:	f0 ef       	ldi	r31, 0xF0	; 240
    32f0:	ef ee       	ldi	r30, 0xEF	; 239
    32f2:	ed ec       	ldi	r30, 0xCD	; 205
    32f4:	eb ea       	ldi	r30, 0xAB	; 171
    32f6:	e9 e7       	ldi	r30, 0x79	; 121
    32f8:	e5 e3       	ldi	r30, 0x35	; 53
    32fa:	df db       	rcall	.-2114   	; 0x2aba <SetMixerWave+0x8>
    32fc:	d5 cc       	rjmp	.-1622   	; 0x2ca8 <waves+0xa8>
    32fe:	c6 00       	.word	0x00c6	; ????
    3300:	00 28       	or	r0, r0
    3302:	3d 42       	sbci	r19, 0x2D	; 45
    3304:	30 2d       	mov	r19, r0
    3306:	2c 2b       	or	r18, r28
    3308:	2c 2d       	mov	r18, r12
    330a:	2e 2f       	mov	r18, r30
    330c:	30 32       	cpi	r19, 0x20	; 32
    330e:	33 35       	cpi	r19, 0x53	; 83
    3310:	37 39       	cpi	r19, 0x97	; 151
    3312:	3b 3d       	cpi	r19, 0xDB	; 219
    3314:	3f 41       	sbci	r19, 0x1F	; 31
    3316:	43 45       	sbci	r20, 0x53	; 83
    3318:	48 4a       	sbci	r20, 0xA8	; 168
    331a:	4c 4e       	sbci	r20, 0xEC	; 236
    331c:	50 53       	subi	r21, 0x30	; 48
    331e:	55 57       	subi	r21, 0x75	; 117
    3320:	59 5b       	subi	r21, 0xB9	; 185
    3322:	5d 5f       	subi	r21, 0xFD	; 253
    3324:	61 63       	ori	r22, 0x31	; 49
    3326:	65 67       	ori	r22, 0x75	; 117
    3328:	69 6b       	ori	r22, 0xB9	; 185
    332a:	6c 6e       	ori	r22, 0xEC	; 236
    332c:	70 71       	andi	r23, 0x10	; 16
    332e:	73 74       	andi	r23, 0x43	; 67
    3330:	75 77       	andi	r23, 0x75	; 117
    3332:	78 79       	andi	r23, 0x98	; 152
    3334:	7a 7b       	andi	r23, 0xBA	; 186
    3336:	7c 7d       	andi	r23, 0xDC	; 220
    3338:	7d 7e       	andi	r23, 0xED	; 237
    333a:	7e 7f       	andi	r23, 0xFE	; 254
    333c:	7f 7f       	andi	r23, 0xFF	; 255
    333e:	7f 7f       	andi	r23, 0xFF	; 255
    3340:	7f 7f       	andi	r23, 0xFF	; 255
    3342:	7f 7f       	andi	r23, 0xFF	; 255
    3344:	7f 7f       	andi	r23, 0xFF	; 255
    3346:	7e 7e       	andi	r23, 0xEE	; 238
    3348:	7d 7d       	andi	r23, 0xDD	; 221
    334a:	7c 7b       	andi	r23, 0xBC	; 188
    334c:	7a 79       	andi	r23, 0x9A	; 154
    334e:	78 77       	andi	r23, 0x78	; 120
    3350:	75 74       	andi	r23, 0x45	; 69
    3352:	73 71       	andi	r23, 0x13	; 19
    3354:	70 6e       	ori	r23, 0xE0	; 224
    3356:	6c 6b       	ori	r22, 0xBC	; 188
    3358:	69 67       	ori	r22, 0x79	; 121
    335a:	65 63       	ori	r22, 0x35	; 53
    335c:	61 5f       	subi	r22, 0xF1	; 241
    335e:	5d 5b       	subi	r21, 0xBD	; 189
    3360:	59 57       	subi	r21, 0x79	; 121
    3362:	55 53       	subi	r21, 0x35	; 53
    3364:	50 4e       	sbci	r21, 0xE0	; 224
    3366:	4c 4a       	sbci	r20, 0xAC	; 172
    3368:	48 45       	sbci	r20, 0x58	; 88
    336a:	43 41       	sbci	r20, 0x13	; 19
    336c:	3f 3d       	cpi	r19, 0xDF	; 223
    336e:	3b 39       	cpi	r19, 0x9B	; 155
    3370:	37 35       	cpi	r19, 0x57	; 87
    3372:	33 32       	cpi	r19, 0x23	; 35
    3374:	30 2f       	mov	r19, r16
    3376:	2e 2d       	mov	r18, r14
    3378:	2c 2b       	or	r18, r28
    337a:	2c 2d       	mov	r18, r12
    337c:	30 42       	sbci	r19, 0x20	; 32
    337e:	3d 28       	or	r3, r13
    3380:	00 e9       	ldi	r16, 0x90	; 144
    3382:	e5 fe       	sbrs	r14, 5
    3384:	d4 d7       	rcall	.+4008   	; 0x432e <__data_load_end+0x19a>
    3386:	d7 d7       	rcall	.+4014   	; 0x4336 <__data_load_end+0x1a2>
    3388:	d6 d4       	rcall	.+2476   	; 0x3d36 <draw+0x15a>
    338a:	d2 d0       	rcall	.+420    	; 0x3530 <waves+0x930>
    338c:	ce cc       	rjmp	.-1636   	; 0x2d2a <waves+0x12a>
    338e:	ca c8       	rjmp	.-3692   	; 0x2524 <PatchCommand14+0xe>
    3390:	c6 c3       	rjmp	.+1932   	; 0x3b1e <update+0x2f6>
    3392:	c1 bf       	out	0x31, r28	; 49
    3394:	bd ba       	out	0x1d, r11	; 29
    3396:	b8 b6       	in	r11, 0x38	; 56
    3398:	b4 b1       	in	r27, 0x04	; 4
    339a:	af ad       	ldd	r26, Y+63	; 0x3f
    339c:	ab a9       	ldd	r26, Y+51	; 0x33
    339e:	a7 a5       	ldd	r26, Z+47	; 0x2f
    33a0:	a3 a1       	ldd	r26, Z+35	; 0x23
    33a2:	9f 9e       	mul	r9, r31
    33a4:	9c 9a       	sbi	0x13, 4	; 19
    33a6:	99 97       	sbiw	r26, 0x29	; 41
    33a8:	95 94       	asr	r9
    33aa:	93 91       	.word	0x9193	; ????
    33ac:	90 8f       	std	Z+24, r25	; 0x18
    33ae:	8d 8c       	ldd	r8, Y+29	; 0x1d
    33b0:	8b 8a       	std	Y+19, r8	; 0x13
    33b2:	89 88       	ldd	r8, Y+17	; 0x11
    33b4:	88 87       	std	Y+8, r24	; 0x08
    33b6:	86 85       	ldd	r24, Z+14	; 0x0e
    33b8:	85 84       	ldd	r8, Z+13	; 0x0d
    33ba:	84 84       	ldd	r8, Z+12	; 0x0c
    33bc:	83 83       	std	Z+3, r24	; 0x03
    33be:	83 83       	std	Z+3, r24	; 0x03
    33c0:	83 83       	std	Z+3, r24	; 0x03
    33c2:	83 83       	std	Z+3, r24	; 0x03
    33c4:	83 84       	ldd	r8, Z+11	; 0x0b
    33c6:	84 84       	ldd	r8, Z+12	; 0x0c
    33c8:	85 85       	ldd	r24, Z+13	; 0x0d
    33ca:	86 87       	std	Z+14, r24	; 0x0e
    33cc:	88 88       	ldd	r8, Y+16	; 0x10
    33ce:	89 8a       	std	Y+17, r8	; 0x11
    33d0:	8b 8c       	ldd	r8, Y+27	; 0x1b
    33d2:	8d 8f       	std	Y+29, r24	; 0x1d
    33d4:	90 91 93 94 	lds	r25, 0x9493	; 0x809493 <__bss_end+0x8ad6>
    33d8:	95 97       	sbiw	r26, 0x25	; 37
    33da:	99 9a       	sbi	0x13, 1	; 19
    33dc:	9c 9e       	mul	r9, r28
    33de:	9f a1       	ldd	r25, Y+39	; 0x27
    33e0:	a3 a5       	ldd	r26, Z+43	; 0x2b
    33e2:	a7 a9       	ldd	r26, Z+55	; 0x37
    33e4:	ab ad       	ldd	r26, Y+59	; 0x3b
    33e6:	af b1       	in	r26, 0x0f	; 15
    33e8:	b4 b6       	in	r11, 0x34	; 52
    33ea:	b8 ba       	out	0x18, r11	; 24
    33ec:	bd bf       	out	0x3d, r27	; 61
    33ee:	c1 c3       	rjmp	.+1922   	; 0x3b72 <update+0x34a>
    33f0:	c6 c8       	rjmp	.-3700   	; 0x257e <ProcessMusic+0x14>
    33f2:	ca cc       	rjmp	.-1644   	; 0x2d88 <waves+0x188>
    33f4:	ce d0       	rcall	.+412    	; 0x3592 <waves+0x992>
    33f6:	d2 d4       	rcall	.+2468   	; 0x3d9c <draw+0x1c0>
    33f8:	d6 d7       	rcall	.+4012   	; 0x43a6 <__data_load_end+0x212>
    33fa:	d7 d7       	rcall	.+4014   	; 0x43aa <__data_load_end+0x216>
    33fc:	d4 fe       	sbrs	r13, 4
    33fe:	e5 e9       	ldi	r30, 0x95	; 149
    3400:	f9 f8       	.word	0xf8f9	; ????
    3402:	f9 f5       	brne	.+126    	; 0x3482 <waves+0x882>
    3404:	eb e1       	ldi	r30, 0x1B	; 27
    3406:	dd de       	rcall	.-582    	; 0x31c2 <waves+0x5c2>
    3408:	e0 e2       	ldi	r30, 0x20	; 32
    340a:	e4 e5       	ldi	r30, 0x54	; 84
    340c:	e6 e5       	ldi	r30, 0x56	; 86
    340e:	e4 e2       	ldi	r30, 0x24	; 36
    3410:	de d9       	rcall	.-3140   	; 0x27ce <ProcessMusic+0x264>
    3412:	d2 ca       	rjmp	.-2652   	; 0x29b8 <TriggerCommon+0x50>
    3414:	c1 b7       	in	r28, 0x31	; 49
    3416:	ac a2       	std	Y+36, r10	; 0x24
    3418:	99 91       	ld	r25, Y+
    341a:	8a 86       	std	Y+10, r8	; 0x0a
    341c:	83 81       	ldd	r24, Z+3	; 0x03
    341e:	80 80       	ld	r8, Z
    3420:	81 82       	std	Z+1, r8	; 0x01
    3422:	83 85       	ldd	r24, Z+11	; 0x0b
    3424:	86 88       	ldd	r8, Z+22	; 0x16
    3426:	8a 8c       	ldd	r8, Y+26	; 0x1a
    3428:	8d 8f       	std	Y+29, r24	; 0x1d
    342a:	90 92 93 95 	sts	0x9593, r9	; 0x809593 <__bss_end+0x8bd6>
    342e:	96 97       	sbiw	r26, 0x26	; 38
    3430:	98 99       	sbic	0x13, 0	; 19
    3432:	9a 9b       	sbis	0x13, 2	; 19
    3434:	9b 9c       	mul	r9, r11
    3436:	9d 9d       	mul	r25, r13
    3438:	9d 9e       	mul	r9, r29
    343a:	9e 9e       	mul	r9, r30
    343c:	9f 9f       	mul	r25, r31
    343e:	9f 9f       	mul	r25, r31
    3440:	9f 9f       	mul	r25, r31
    3442:	9f 9e       	mul	r9, r31
    3444:	9e 9e       	mul	r9, r30
    3446:	9d 9d       	mul	r25, r13
    3448:	9d 9c       	mul	r9, r13
    344a:	9b 9b       	sbis	0x13, 3	; 19
    344c:	9a 99       	sbic	0x13, 2	; 19
    344e:	98 97       	sbiw	r26, 0x28	; 40
    3450:	96 95       	lsr	r25
    3452:	93 92       	.word	0x9293	; ????
    3454:	90 8f       	std	Z+24, r25	; 0x18
    3456:	8d 8c       	ldd	r8, Y+29	; 0x1d
    3458:	8a 88       	ldd	r8, Y+18	; 0x12
    345a:	86 85       	ldd	r24, Z+14	; 0x0e
    345c:	83 82       	std	Z+3, r8	; 0x03
    345e:	81 80       	ldd	r8, Z+1	; 0x01
    3460:	80 81       	ld	r24, Z
    3462:	83 86       	std	Z+11, r8	; 0x0b
    3464:	8a 91       	ld	r24, -Y
    3466:	99 a2       	std	Y+33, r9	; 0x21
    3468:	ac b7       	in	r26, 0x3c	; 60
    346a:	c1 ca       	rjmp	.-2686   	; 0x29ee <TriggerCommon+0x86>
    346c:	d2 d9       	rcall	.-3164   	; 0x2812 <ProcessMusic+0x2a8>
    346e:	de e2       	ldi	r29, 0x2E	; 46
    3470:	e4 e5       	ldi	r30, 0x54	; 84
    3472:	e6 e5       	ldi	r30, 0x56	; 86
    3474:	e4 e2       	ldi	r30, 0x24	; 36
    3476:	e0 de       	rcall	.-576    	; 0x3238 <waves+0x638>
    3478:	dd e1       	ldi	r29, 0x1D	; 29
    347a:	eb f5       	brvc	.+122    	; 0x34f6 <waves+0x8f6>
    347c:	f9 f8       	.word	0xf8f9	; ????
    347e:	f9 00       	.word	0x00f9	; ????
    3480:	07 08       	sbc	r0, r7
    3482:	07 0b       	sbc	r16, r23
    3484:	15 1f       	adc	r17, r21
    3486:	23 22       	and	r2, r19
    3488:	20 1e       	adc	r2, r16
    348a:	1c 1b       	sub	r17, r28
    348c:	1a 1b       	sub	r17, r26
    348e:	1c 1e       	adc	r1, r28
    3490:	22 27       	eor	r18, r18
    3492:	2e 36       	cpi	r18, 0x6E	; 110
    3494:	3f 49       	sbci	r19, 0x9F	; 159
    3496:	54 5e       	subi	r21, 0xE4	; 228
    3498:	67 6f       	ori	r22, 0xF7	; 247
    349a:	76 7a       	andi	r23, 0xA6	; 166
    349c:	7e 7f       	andi	r23, 0xFE	; 254
    349e:	7f 7f       	andi	r23, 0xFF	; 255
    34a0:	7f 7e       	andi	r23, 0xEF	; 239
    34a2:	7d 7b       	andi	r23, 0xBD	; 189
    34a4:	7a 78       	andi	r23, 0x8A	; 138
    34a6:	76 74       	andi	r23, 0x46	; 70
    34a8:	73 71       	andi	r23, 0x13	; 19
    34aa:	70 6e       	ori	r23, 0xE0	; 224
    34ac:	6d 6b       	ori	r22, 0xBD	; 189
    34ae:	6a 69       	ori	r22, 0x9A	; 154
    34b0:	68 67       	ori	r22, 0x78	; 120
    34b2:	66 65       	ori	r22, 0x56	; 86
    34b4:	65 64       	ori	r22, 0x45	; 69
    34b6:	64 63       	ori	r22, 0x34	; 52
    34b8:	63 62       	ori	r22, 0x23	; 35
    34ba:	62 62       	ori	r22, 0x22	; 34
    34bc:	61 61       	ori	r22, 0x11	; 17
    34be:	61 61       	ori	r22, 0x11	; 17
    34c0:	61 61       	ori	r22, 0x11	; 17
    34c2:	61 62       	ori	r22, 0x21	; 33
    34c4:	62 62       	ori	r22, 0x22	; 34
    34c6:	63 63       	ori	r22, 0x33	; 51
    34c8:	63 64       	ori	r22, 0x43	; 67
    34ca:	65 65       	ori	r22, 0x55	; 85
    34cc:	66 67       	ori	r22, 0x76	; 118
    34ce:	68 69       	ori	r22, 0x98	; 152
    34d0:	6a 6b       	ori	r22, 0xBA	; 186
    34d2:	6d 6e       	ori	r22, 0xED	; 237
    34d4:	70 71       	andi	r23, 0x10	; 16
    34d6:	73 74       	andi	r23, 0x43	; 67
    34d8:	76 78       	andi	r23, 0x86	; 134
    34da:	7a 7b       	andi	r23, 0xBA	; 186
    34dc:	7d 7e       	andi	r23, 0xED	; 237
    34de:	7f 7f       	andi	r23, 0xFF	; 255
    34e0:	7f 7f       	andi	r23, 0xFF	; 255
    34e2:	7e 7a       	andi	r23, 0xAE	; 174
    34e4:	76 6f       	ori	r23, 0xF6	; 246
    34e6:	67 5e       	subi	r22, 0xE7	; 231
    34e8:	54 49       	sbci	r21, 0x94	; 148
    34ea:	3f 36       	cpi	r19, 0x6F	; 111
    34ec:	2e 27       	eor	r18, r30
    34ee:	22 1e       	adc	r2, r18
    34f0:	1c 1b       	sub	r17, r28
    34f2:	1a 1b       	sub	r17, r26
    34f4:	1c 1e       	adc	r1, r28
    34f6:	20 22       	and	r2, r16
    34f8:	23 1f       	adc	r18, r19
    34fa:	15 0b       	sbc	r17, r21
    34fc:	07 08       	sbc	r0, r7
    34fe:	07 00       	.word	0x0007	; ????
    3500:	1f 31       	cpi	r17, 0x1F	; 31
    3502:	3d 44       	sbci	r19, 0x4D	; 77
    3504:	4e 53       	subi	r20, 0x3E	; 62
    3506:	54 56       	subi	r21, 0x64	; 100
    3508:	5a 5f       	subi	r21, 0xFA	; 250
    350a:	64 69       	ori	r22, 0x94	; 148
    350c:	6e 74       	andi	r22, 0x4E	; 78
    350e:	76 79       	andi	r23, 0x96	; 150
    3510:	7c 7f       	andi	r23, 0xFC	; 252
    3512:	7f 7f       	andi	r23, 0xFF	; 255
    3514:	7f 7f       	andi	r23, 0xFF	; 255
    3516:	7f 7f       	andi	r23, 0xFF	; 255
    3518:	7f 7f       	andi	r23, 0xFF	; 255
    351a:	7f 7f       	andi	r23, 0xFF	; 255
    351c:	7f 7f       	andi	r23, 0xFF	; 255
    351e:	7f 7f       	andi	r23, 0xFF	; 255
    3520:	7f 7f       	andi	r23, 0xFF	; 255
    3522:	7f 7f       	andi	r23, 0xFF	; 255
    3524:	7f 7f       	andi	r23, 0xFF	; 255
    3526:	7f 7f       	andi	r23, 0xFF	; 255
    3528:	7f 7f       	andi	r23, 0xFF	; 255
    352a:	7f 7f       	andi	r23, 0xFF	; 255
    352c:	7f 7f       	andi	r23, 0xFF	; 255
    352e:	7f 7f       	andi	r23, 0xFF	; 255
    3530:	7f 7f       	andi	r23, 0xFF	; 255
    3532:	7f 7f       	andi	r23, 0xFF	; 255
    3534:	7f 7f       	andi	r23, 0xFF	; 255
    3536:	7f 7f       	andi	r23, 0xFF	; 255
    3538:	7f 7f       	andi	r23, 0xFF	; 255
    353a:	7f 7f       	andi	r23, 0xFF	; 255
    353c:	7f 7f       	andi	r23, 0xFF	; 255
    353e:	7f 7f       	andi	r23, 0xFF	; 255
    3540:	7f 7f       	andi	r23, 0xFF	; 255
    3542:	7f 7f       	andi	r23, 0xFF	; 255
    3544:	7f 7f       	andi	r23, 0xFF	; 255
    3546:	7f 7f       	andi	r23, 0xFF	; 255
    3548:	7f 7f       	andi	r23, 0xFF	; 255
    354a:	7f 7f       	andi	r23, 0xFF	; 255
    354c:	7f 7f       	andi	r23, 0xFF	; 255
    354e:	7f 7f       	andi	r23, 0xFF	; 255
    3550:	7f 7f       	andi	r23, 0xFF	; 255
    3552:	7f 7f       	andi	r23, 0xFF	; 255
    3554:	7f 7f       	andi	r23, 0xFF	; 255
    3556:	7f 7f       	andi	r23, 0xFF	; 255
    3558:	7f 7f       	andi	r23, 0xFF	; 255
    355a:	7f 7f       	andi	r23, 0xFF	; 255
    355c:	7f 7f       	andi	r23, 0xFF	; 255
    355e:	7f 7f       	andi	r23, 0xFF	; 255
    3560:	7f 7f       	andi	r23, 0xFF	; 255
    3562:	7f 7f       	andi	r23, 0xFF	; 255
    3564:	7f 7f       	andi	r23, 0xFF	; 255
    3566:	7f 7f       	andi	r23, 0xFF	; 255
    3568:	7f 7f       	andi	r23, 0xFF	; 255
    356a:	7f 7f       	andi	r23, 0xFF	; 255
    356c:	7f 7f       	andi	r23, 0xFF	; 255
    356e:	7f 7f       	andi	r23, 0xFF	; 255
    3570:	7f 7f       	andi	r23, 0xFF	; 255
    3572:	7f 7f       	andi	r23, 0xFF	; 255
    3574:	7f 7f       	andi	r23, 0xFF	; 255
    3576:	7f 7f       	andi	r23, 0xFF	; 255
    3578:	7f 7f       	andi	r23, 0xFF	; 255
    357a:	7f 7c       	andi	r23, 0xCF	; 207
    357c:	78 71       	andi	r23, 0x18	; 24
    357e:	68 4c       	sbci	r22, 0xC8	; 200
    3580:	2c 1c       	adc	r2, r12
    3582:	12 0c       	add	r1, r2
    3584:	0a 0b       	sbc	r16, r26
    3586:	0a 05       	cpc	r16, r10
    3588:	fd f3       	brhs	.-2      	; 0x3588 <waves+0x988>
    358a:	e9 df       	rcall	.-46     	; 0x355e <waves+0x95e>
    358c:	d4 ca       	rjmp	.-2648   	; 0x2b36 <steptable+0x4a>
    358e:	c0 b7       	in	r28, 0x30	; 48
    3590:	ae a6       	std	Y+46, r10	; 0x2e
    3592:	9e 97       	sbiw	r26, 0x2e	; 46
    3594:	91 8b       	std	Z+17, r25	; 0x11
    3596:	86 85       	ldd	r24, Z+14	; 0x0e
    3598:	82 80       	ldd	r8, Z+2	; 0x02
    359a:	80 80       	ld	r8, Z
    359c:	80 80       	ld	r8, Z
    359e:	80 80       	ld	r8, Z
    35a0:	80 80       	ld	r8, Z
    35a2:	80 80       	ld	r8, Z
    35a4:	80 80       	ld	r8, Z
    35a6:	80 80       	ld	r8, Z
    35a8:	80 80       	ld	r8, Z
    35aa:	80 80       	ld	r8, Z
    35ac:	80 80       	ld	r8, Z
    35ae:	80 80       	ld	r8, Z
    35b0:	80 80       	ld	r8, Z
    35b2:	80 80       	ld	r8, Z
    35b4:	80 80       	ld	r8, Z
    35b6:	80 80       	ld	r8, Z
    35b8:	80 80       	ld	r8, Z
    35ba:	80 80       	ld	r8, Z
    35bc:	80 80       	ld	r8, Z
    35be:	80 80       	ld	r8, Z
    35c0:	80 80       	ld	r8, Z
    35c2:	80 80       	ld	r8, Z
    35c4:	80 80       	ld	r8, Z
    35c6:	80 80       	ld	r8, Z
    35c8:	80 80       	ld	r8, Z
    35ca:	80 80       	ld	r8, Z
    35cc:	80 80       	ld	r8, Z
    35ce:	80 80       	ld	r8, Z
    35d0:	80 80       	ld	r8, Z
    35d2:	80 80       	ld	r8, Z
    35d4:	80 80       	ld	r8, Z
    35d6:	80 80       	ld	r8, Z
    35d8:	80 80       	ld	r8, Z
    35da:	80 80       	ld	r8, Z
    35dc:	80 80       	ld	r8, Z
    35de:	80 80       	ld	r8, Z
    35e0:	80 80       	ld	r8, Z
    35e2:	80 80       	ld	r8, Z
    35e4:	80 80       	ld	r8, Z
    35e6:	80 80       	ld	r8, Z
    35e8:	80 80       	ld	r8, Z
    35ea:	80 80       	ld	r8, Z
    35ec:	80 80       	ld	r8, Z
    35ee:	80 80       	ld	r8, Z
    35f0:	80 80       	ld	r8, Z
    35f2:	80 80       	ld	r8, Z
    35f4:	80 87       	std	Z+8, r24	; 0x08
    35f6:	91 9d       	mul	r25, r1
    35f8:	ac c4       	rjmp	.+2392   	; 0x3f52 <drawRectangle+0x7c>
    35fa:	cb d4       	rcall	.+2454   	; 0x3f92 <drawRectangle+0xbc>
    35fc:	dd f2       	brhs	.-74     	; 0x35b4 <waves+0x9b4>
    35fe:	fa fa       	.word	0xfafa	; ????

00003600 <DisplayLogo>:
    3600:	08 95       	ret

00003602 <InitializeVideoMode>:
		return;
	}
	
	fadeStep=FADER_STEPS;
	fadeDir=-1;
	doFade(speed,blocking);
    3602:	08 95       	ret

00003604 <VideoModeVsync>:
    3604:	0c 94 7a 1b 	jmp	0x36f4	; 0x36f4 <ProcessFading>

00003608 <PrintInt>:
    3608:	cf 92       	push	r12
    360a:	df 92       	push	r13
    360c:	ef 92       	push	r14
    360e:	ff 92       	push	r15
    3610:	0f 93       	push	r16
    3612:	1f 93       	push	r17
    3614:	cf 93       	push	r28
    3616:	df 93       	push	r29
    3618:	c8 2e       	mov	r12, r24
    361a:	d6 2f       	mov	r29, r22
    361c:	8a 01       	movw	r16, r20
    361e:	d2 2e       	mov	r13, r18
    3620:	c0 e0       	ldi	r28, 0x00	; 0
    3622:	8a e0       	ldi	r24, 0x0A	; 10
    3624:	e8 2e       	mov	r14, r24
    3626:	f1 2c       	mov	r15, r1
    3628:	2c 2d       	mov	r18, r12
    362a:	2c 1b       	sub	r18, r28
    362c:	01 15       	cp	r16, r1
    362e:	11 05       	cpc	r17, r1
    3630:	11 f4       	brne	.+4      	; 0x3636 <PrintInt+0x2e>
    3632:	c1 11       	cpse	r28, r1
    3634:	07 c0       	rjmp	.+14     	; 0x3644 <PrintInt+0x3c>
    3636:	c8 01       	movw	r24, r16
    3638:	b7 01       	movw	r22, r14
    363a:	0e 94 d5 1f 	call	0x3faa	; 0x3faa <__udivmodhi4>
    363e:	40 e1       	ldi	r20, 0x10	; 16
    3640:	48 0f       	add	r20, r24
    3642:	05 c0       	rjmp	.+10     	; 0x364e <PrintInt+0x46>
    3644:	dd 20       	and	r13, r13
    3646:	11 f0       	breq	.+4      	; 0x364c <PrintInt+0x44>
    3648:	40 e1       	ldi	r20, 0x10	; 16
    364a:	01 c0       	rjmp	.+2      	; 0x364e <PrintInt+0x46>
    364c:	40 e0       	ldi	r20, 0x00	; 0
    364e:	6d 2f       	mov	r22, r29
    3650:	82 2f       	mov	r24, r18
    3652:	0e 94 38 11 	call	0x2270	; 0x2270 <SetFont>
    3656:	c8 01       	movw	r24, r16
    3658:	b7 01       	movw	r22, r14
    365a:	0e 94 d5 1f 	call	0x3faa	; 0x3faa <__udivmodhi4>
    365e:	8b 01       	movw	r16, r22
    3660:	cf 5f       	subi	r28, 0xFF	; 255
    3662:	c5 30       	cpi	r28, 0x05	; 5
    3664:	09 f7       	brne	.-62     	; 0x3628 <PrintInt+0x20>
    3666:	df 91       	pop	r29
    3668:	cf 91       	pop	r28
    366a:	1f 91       	pop	r17
    366c:	0f 91       	pop	r16
    366e:	ff 90       	pop	r15
    3670:	ef 90       	pop	r14
    3672:	df 90       	pop	r13
    3674:	cf 90       	pop	r12
    3676:	08 95       	ret

00003678 <Print>:
    3678:	df 92       	push	r13
    367a:	ef 92       	push	r14
    367c:	ff 92       	push	r15
    367e:	0f 93       	push	r16
    3680:	1f 93       	push	r17
    3682:	cf 93       	push	r28
    3684:	df 93       	push	r29
    3686:	7c 01       	movw	r14, r24
    3688:	d6 2e       	mov	r13, r22
    368a:	8a 01       	movw	r16, r20
    368c:	ec 01       	movw	r28, r24
    368e:	fe 01       	movw	r30, r28
    3690:	ee 19       	sub	r30, r14
    3692:	ff 09       	sbc	r31, r15
    3694:	e0 0f       	add	r30, r16
    3696:	f1 1f       	adc	r31, r17
    3698:	e4 91       	lpm	r30, Z
    369a:	ee 23       	and	r30, r30
    369c:	49 f0       	breq	.+18     	; 0x36b0 <Print+0x38>
    369e:	ef 77       	andi	r30, 0x7F	; 127
    36a0:	40 ee       	ldi	r20, 0xE0	; 224
    36a2:	4e 0f       	add	r20, r30
    36a4:	6d 2d       	mov	r22, r13
    36a6:	8c 2f       	mov	r24, r28
    36a8:	0e 94 38 11 	call	0x2270	; 0x2270 <SetFont>
    36ac:	21 96       	adiw	r28, 0x01	; 1
    36ae:	ef cf       	rjmp	.-34     	; 0x368e <Print+0x16>
    36b0:	df 91       	pop	r29
    36b2:	cf 91       	pop	r28
    36b4:	1f 91       	pop	r17
    36b6:	0f 91       	pop	r16
    36b8:	ff 90       	pop	r15
    36ba:	ef 90       	pop	r14
    36bc:	df 90       	pop	r13
    36be:	08 95       	ret

000036c0 <PrintChar>:
    36c0:	40 52       	subi	r20, 0x20	; 32
    36c2:	0c 94 38 11 	jmp	0x2270	; 0x2270 <SetFont>

000036c6 <WaitVsync>:
    36c6:	0f 93       	push	r16
    36c8:	1f 93       	push	r17
    36ca:	cf 93       	push	r28
    36cc:	df 93       	push	r29
    36ce:	8c 01       	movw	r16, r24
    36d0:	c0 e0       	ldi	r28, 0x00	; 0
    36d2:	d0 e0       	ldi	r29, 0x00	; 0
    36d4:	c0 17       	cp	r28, r16
    36d6:	d1 07       	cpc	r29, r17
    36d8:	44 f4       	brge	.+16     	; 0x36ea <WaitVsync+0x24>
    36da:	0e 94 55 11 	call	0x22aa	; 0x22aa <GetVsyncFlag>
    36de:	88 23       	and	r24, r24
    36e0:	e1 f3       	breq	.-8      	; 0x36da <WaitVsync+0x14>
    36e2:	0e 94 59 11 	call	0x22b2	; 0x22b2 <ClearVsyncFlag>
    36e6:	21 96       	adiw	r28, 0x01	; 1
    36e8:	f5 cf       	rjmp	.-22     	; 0x36d4 <WaitVsync+0xe>
    36ea:	df 91       	pop	r29
    36ec:	cf 91       	pop	r28
    36ee:	1f 91       	pop	r17
    36f0:	0f 91       	pop	r16
    36f2:	08 95       	ret

000036f4 <ProcessFading>:
}


//called by the kernel at each field end
void ProcessFading(){
	if(fadeActive==true){
    36f4:	80 91 ba 09 	lds	r24, 0x09BA	; 0x8009ba <fadeActive>
    36f8:	88 23       	and	r24, r24
    36fa:	01 f1       	breq	.+64     	; 0x373c <ProcessFading+0x48>
		if(currFadeFrame==0){
    36fc:	80 91 bb 09 	lds	r24, 0x09BB	; 0x8009bb <currFadeFrame>
    3700:	81 11       	cpse	r24, r1
    3702:	19 c0       	rjmp	.+50     	; 0x3736 <ProcessFading+0x42>
			currFadeFrame=fadeSpeed;
    3704:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <fadeSpeed>
    3708:	80 93 bb 09 	sts	0x09BB, r24	; 0x8009bb <currFadeFrame>
			DDRC = pgm_read_byte(&(fader[fadeStep-1]));
    370c:	e0 91 bc 09 	lds	r30, 0x09BC	; 0x8009bc <fadeStep>
    3710:	f0 e0       	ldi	r31, 0x00	; 0
    3712:	e1 52       	subi	r30, 0x21	; 33
    3714:	ff 4f       	sbci	r31, 0xFF	; 255
    3716:	e4 91       	lpm	r30, Z
    3718:	e7 b9       	out	0x07, r30	; 7
			fadeStep+=fadeDir;
    371a:	90 91 bc 09 	lds	r25, 0x09BC	; 0x8009bc <fadeStep>
    371e:	80 91 b9 09 	lds	r24, 0x09B9	; 0x8009b9 <fadeDir>
    3722:	89 0f       	add	r24, r25
    3724:	80 93 bc 09 	sts	0x09BC, r24	; 0x8009bc <fadeStep>
			if(fadeStep==0 || fadeStep==(FADER_STEPS+1)){
    3728:	88 23       	and	r24, r24
    372a:	11 f0       	breq	.+4      	; 0x3730 <ProcessFading+0x3c>
    372c:	8d 30       	cpi	r24, 0x0D	; 13
    372e:	31 f4       	brne	.+12     	; 0x373c <ProcessFading+0x48>
				fadeActive=false;
    3730:	10 92 ba 09 	sts	0x09BA, r1	; 0x8009ba <fadeActive>
    3734:	08 95       	ret
			}
		}else{
			currFadeFrame--;
    3736:	81 50       	subi	r24, 0x01	; 1
    3738:	80 93 bb 09 	sts	0x09BB, r24	; 0x8009bb <currFadeFrame>
    373c:	08 95       	ret

0000373e <getHealth>:
; Get Health
;****************************
.global getHealth
.section .text.gethealth
getHealth:
	ADD R24,R22
    373e:	86 0f       	add	r24, r22
	CLR	R25
    3740:	99 27       	eor	r25, r25
	RET
    3742:	08 95       	ret

00003744 <getScore>:
; Update the Score
;****************************
.global getScore
.section .text.getScore
getScore:
	ADD R24,R22
    3744:	86 0f       	add	r24, r22
	CLR	R25
    3746:	99 27       	eor	r25, r25
	RET
    3748:	08 95       	ret

0000374a <getMoney>:
; Update the Money
;****************************
.global getMoney
.section .text.getMoney
getMoney:
	ADD R24, R22
    374a:	86 0f       	add	r24, r22
	CLR R25
    374c:	99 27       	eor	r25, r25
	RET
    374e:	08 95       	ret

00003750 <setTrue>:
; Updates bool to true
;****************************
.global setTrue
.section .text.setTrue
setTrue:
	MOV R24, R22
    3750:	86 2f       	mov	r24, r22
	CLR R25
    3752:	99 27       	eor	r25, r25
    3754:	08 95       	ret

00003756 <main>:
}

int rnd(int max) {
	int result = rand() % max;
	return result;
}
    3756:	8c ee       	ldi	r24, 0xEC	; 236
    3758:	90 e0       	ldi	r25, 0x00	; 0
    375a:	0e 94 50 11 	call	0x22a0	; 0x22a0 <SetFontTable>
    375e:	0e 94 d6 1b 	call	0x37ac	; 0x37ac <init>
    3762:	81 e0       	ldi	r24, 0x01	; 1
    3764:	90 e0       	ldi	r25, 0x00	; 0
    3766:	0e 94 63 1b 	call	0x36c6	; 0x36c6 <WaitVsync>
    376a:	80 e0       	ldi	r24, 0x00	; 0
    376c:	0e 94 5f 11 	call	0x22be	; 0x22be <ReadJoypad>
    3770:	90 93 44 09 	sts	0x0944, r25	; 0x800944 <buttonHeld+0x1>
    3774:	80 93 43 09 	sts	0x0943, r24	; 0x800943 <buttonHeld>
    3778:	20 91 49 09 	lds	r18, 0x0949	; 0x800949 <buttonPrevious>
    377c:	30 91 4a 09 	lds	r19, 0x094A	; 0x80094a <buttonPrevious+0x1>
    3780:	a9 01       	movw	r20, r18
    3782:	40 95       	com	r20
    3784:	50 95       	com	r21
    3786:	48 23       	and	r20, r24
    3788:	59 23       	and	r21, r25
    378a:	50 93 46 09 	sts	0x0946, r21	; 0x800946 <buttonPressed+0x1>
    378e:	40 93 45 09 	sts	0x0945, r20	; 0x800945 <buttonPressed>
    3792:	80 95       	com	r24
    3794:	90 95       	com	r25
    3796:	82 23       	and	r24, r18
    3798:	93 23       	and	r25, r19
    379a:	90 93 48 09 	sts	0x0948, r25	; 0x800948 <buttonReleased+0x1>
    379e:	80 93 47 09 	sts	0x0947, r24	; 0x800947 <buttonReleased>
    37a2:	0e 94 14 1c 	call	0x3828	; 0x3828 <update>
    37a6:	0e 94 ee 1d 	call	0x3bdc	; 0x3bdc <draw>
    37aa:	db cf       	rjmp	.-74     	; 0x3762 <main+0xc>

000037ac <init>:

void init() {
    37ac:	0f 93       	push	r16
    37ae:	1f 93       	push	r17
    37b0:	cf 93       	push	r28
    37b2:	df 93       	push	r29
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    37b4:	0e 94 6b 20 	call	0x40d6	; 0x40d6 <rand>
	return result;
}

void init() {
	heroX = rnd(SCREEN_TILES_H);
    37b8:	08 e2       	ldi	r16, 0x28	; 40
    37ba:	10 e0       	ldi	r17, 0x00	; 0
    37bc:	b8 01       	movw	r22, r16
    37be:	0e 94 e9 1f 	call	0x3fd2	; 0x3fd2 <__divmodhi4>
    37c2:	90 93 2f 09 	sts	0x092F, r25	; 0x80092f <heroX+0x1>
    37c6:	80 93 2e 09 	sts	0x092E, r24	; 0x80092e <heroX>
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    37ca:	0e 94 6b 20 	call	0x40d6	; 0x40d6 <rand>
	return result;
}

void init() {
	heroX = rnd(SCREEN_TILES_H);
	heroY = rnd(SCREEN_TILES_V);
    37ce:	c2 e1       	ldi	r28, 0x12	; 18
    37d0:	d0 e0       	ldi	r29, 0x00	; 0
    37d2:	be 01       	movw	r22, r28
    37d4:	0e 94 e9 1f 	call	0x3fd2	; 0x3fd2 <__divmodhi4>
    37d8:	90 93 31 09 	sts	0x0931, r25	; 0x800931 <heroY+0x1>
    37dc:	80 93 30 09 	sts	0x0930, r24	; 0x800930 <heroY>
	enemyY = 0;
    37e0:	10 92 35 09 	sts	0x0935, r1	; 0x800935 <enemyY+0x1>
    37e4:	10 92 34 09 	sts	0x0934, r1	; 0x800934 <enemyY>
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    37e8:	0e 94 6b 20 	call	0x40d6	; 0x40d6 <rand>
void init() {
	heroX = rnd(SCREEN_TILES_H);
	heroY = rnd(SCREEN_TILES_V);
	enemyY = 0;

	enemyX = rnd(SCREEN_TILES_V);
    37ec:	be 01       	movw	r22, r28
    37ee:	0e 94 e9 1f 	call	0x3fd2	; 0x3fd2 <__divmodhi4>
    37f2:	90 93 33 09 	sts	0x0933, r25	; 0x800933 <enemyX+0x1>
    37f6:	80 93 32 09 	sts	0x0932, r24	; 0x800932 <enemyX>
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    37fa:	0e 94 6b 20 	call	0x40d6	; 0x40d6 <rand>
	heroX = rnd(SCREEN_TILES_H);
	heroY = rnd(SCREEN_TILES_V);
	enemyY = 0;

	enemyX = rnd(SCREEN_TILES_V);
	followerY = rnd(SCREEN_TILES_V);
    37fe:	be 01       	movw	r22, r28
    3800:	0e 94 e9 1f 	call	0x3fd2	; 0x3fd2 <__divmodhi4>
    3804:	90 93 39 09 	sts	0x0939, r25	; 0x800939 <followerY+0x1>
    3808:	80 93 38 09 	sts	0x0938, r24	; 0x800938 <followerY>
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    380c:	0e 94 6b 20 	call	0x40d6	; 0x40d6 <rand>
	heroY = rnd(SCREEN_TILES_V);
	enemyY = 0;

	enemyX = rnd(SCREEN_TILES_V);
	followerY = rnd(SCREEN_TILES_V);
	followerX = rnd(SCREEN_TILES_H);
    3810:	b8 01       	movw	r22, r16
    3812:	0e 94 e9 1f 	call	0x3fd2	; 0x3fd2 <__divmodhi4>
    3816:	90 93 37 09 	sts	0x0937, r25	; 0x800937 <followerX+0x1>
    381a:	80 93 36 09 	sts	0x0936, r24	; 0x800936 <followerX>
}
    381e:	df 91       	pop	r29
    3820:	cf 91       	pop	r28
    3822:	1f 91       	pop	r17
    3824:	0f 91       	pop	r16
    3826:	08 95       	ret

00003828 <update>:

void update() {
    3828:	af 92       	push	r10
    382a:	bf 92       	push	r11
    382c:	cf 92       	push	r12
    382e:	df 92       	push	r13
    3830:	ef 92       	push	r14
    3832:	ff 92       	push	r15
    3834:	0f 93       	push	r16
    3836:	1f 93       	push	r17
    3838:	cf 93       	push	r28
    383a:	df 93       	push	r29

	switch(buttonPressed){
    383c:	80 91 45 09 	lds	r24, 0x0945	; 0x800945 <buttonPressed>
    3840:	90 91 46 09 	lds	r25, 0x0946	; 0x800946 <buttonPressed+0x1>
    3844:	80 32       	cpi	r24, 0x20	; 32
    3846:	91 05       	cpc	r25, r1
    3848:	99 f1       	breq	.+102    	; 0x38b0 <update+0x88>
    384a:	5c f4       	brge	.+22     	; 0x3862 <update+0x3a>
    384c:	82 30       	cpi	r24, 0x02	; 2
    384e:	91 05       	cpc	r25, r1
    3850:	09 f4       	brne	.+2      	; 0x3854 <update+0x2c>
    3852:	41 c0       	rjmp	.+130    	; 0x38d6 <update+0xae>
    3854:	80 31       	cpi	r24, 0x10	; 16
    3856:	91 05       	cpc	r25, r1
    3858:	a1 f0       	breq	.+40     	; 0x3882 <update+0x5a>
    385a:	01 97       	sbiw	r24, 0x01	; 1
    385c:	09 f0       	breq	.+2      	; 0x3860 <update+0x38>
    385e:	41 c0       	rjmp	.+130    	; 0x38e2 <update+0xba>
    3860:	32 c0       	rjmp	.+100    	; 0x38c6 <update+0x9e>
    3862:	80 38       	cpi	r24, 0x80	; 128
    3864:	91 05       	cpc	r25, r1
    3866:	b9 f1       	breq	.+110    	; 0x38d6 <update+0xae>
    3868:	24 f4       	brge	.+8      	; 0x3872 <update+0x4a>
    386a:	80 34       	cpi	r24, 0x40	; 64
    386c:	91 05       	cpc	r25, r1
    386e:	71 f1       	breq	.+92     	; 0x38cc <update+0xa4>
    3870:	38 c0       	rjmp	.+112    	; 0x38e2 <update+0xba>
    3872:	81 15       	cp	r24, r1
    3874:	21 e0       	ldi	r18, 0x01	; 1
    3876:	92 07       	cpc	r25, r18
    3878:	09 f1       	breq	.+66     	; 0x38bc <update+0x94>
    387a:	81 15       	cp	r24, r1
    387c:	92 40       	sbci	r25, 0x02	; 2
    387e:	31 f1       	breq	.+76     	; 0x38cc <update+0xa4>
    3880:	30 c0       	rjmp	.+96     	; 0x38e2 <update+0xba>
		case BTN_UP:{
			if(game)
    3882:	c0 91 41 09 	lds	r28, 0x0941	; 0x800941 <game>
    3886:	c1 11       	cpse	r28, r1
    3888:	08 c0       	rjmp	.+16     	; 0x389a <update+0x72>
			{MoveHero(0, -1);}
			if(!game || instruc)
			{
				game = setTrue(game,beTrue);
    388a:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <beTrue>
    388e:	8c 2f       	mov	r24, r28
    3890:	0e 94 a8 1b 	call	0x3750	; 0x3750 <setTrue>
    3894:	80 93 41 09 	sts	0x0941, r24	; 0x800941 <game>
    3898:	24 c0       	rjmp	.+72     	; 0x38e2 <update+0xba>
void update() {

	switch(buttonPressed){
		case BTN_UP:{
			if(game)
			{MoveHero(0, -1);}
    389a:	6f ef       	ldi	r22, 0xFF	; 255
    389c:	7f ef       	ldi	r23, 0xFF	; 255
    389e:	80 e0       	ldi	r24, 0x00	; 0
    38a0:	90 e0       	ldi	r25, 0x00	; 0
    38a2:	0e 94 25 1f 	call	0x3e4a	; 0x3e4a <MoveHero>
			if(!game || instruc)
    38a6:	80 91 42 09 	lds	r24, 0x0942	; 0x800942 <instruc>
    38aa:	81 11       	cpse	r24, r1
    38ac:	ee cf       	rjmp	.-36     	; 0x388a <update+0x62>
    38ae:	19 c0       	rjmp	.+50     	; 0x38e2 <update+0xba>
				game = setTrue(game,beTrue);
			}
			break;
		}
		case BTN_DOWN:{
			if(game)
    38b0:	80 91 41 09 	lds	r24, 0x0941	; 0x800941 <game>
    38b4:	88 23       	and	r24, r24
    38b6:	09 f4       	brne	.+2      	; 0x38ba <update+0x92>
    38b8:	7a c1       	rjmp	.+756    	; 0x3bae <update+0x386>
    38ba:	05 c0       	rjmp	.+10     	; 0x38c6 <update+0x9e>
		case BTN_RIGHT:{
			MoveHero(1, 0);
			break;
		}
		case BTN_A:{
			MoveHero(0, -1);
    38bc:	6f ef       	ldi	r22, 0xFF	; 255
    38be:	7f ef       	ldi	r23, 0xFF	; 255
    38c0:	80 e0       	ldi	r24, 0x00	; 0
    38c2:	90 e0       	ldi	r25, 0x00	; 0
    38c4:	0c c0       	rjmp	.+24     	; 0x38de <update+0xb6>
			break;
		}
		case BTN_B:{
			MoveHero(0, 1);
    38c6:	61 e0       	ldi	r22, 0x01	; 1
    38c8:	70 e0       	ldi	r23, 0x00	; 0
    38ca:	fa cf       	rjmp	.-12     	; 0x38c0 <update+0x98>
			break;
		}
		case BTN_X:{
			MoveHero(-1, 0);
    38cc:	60 e0       	ldi	r22, 0x00	; 0
    38ce:	70 e0       	ldi	r23, 0x00	; 0
    38d0:	8f ef       	ldi	r24, 0xFF	; 255
    38d2:	9f ef       	ldi	r25, 0xFF	; 255
    38d4:	04 c0       	rjmp	.+8      	; 0x38de <update+0xb6>
			break;
		}
		case BTN_Y:{
			MoveHero(1, 0);
    38d6:	60 e0       	ldi	r22, 0x00	; 0
    38d8:	70 e0       	ldi	r23, 0x00	; 0
    38da:	81 e0       	ldi	r24, 0x01	; 1
    38dc:	90 e0       	ldi	r25, 0x00	; 0
    38de:	0e 94 25 1f 	call	0x3e4a	; 0x3e4a <MoveHero>
		default:
			break;
	}


	buttonPrevious = buttonHeld;
    38e2:	80 91 43 09 	lds	r24, 0x0943	; 0x800943 <buttonHeld>
    38e6:	90 91 44 09 	lds	r25, 0x0944	; 0x800944 <buttonHeld+0x1>
    38ea:	90 93 4a 09 	sts	0x094A, r25	; 0x80094a <buttonPrevious+0x1>
    38ee:	80 93 49 09 	sts	0x0949, r24	; 0x800949 <buttonPrevious>
	buttonPrevious = buttonHeld;
if(game){
    38f2:	80 91 41 09 	lds	r24, 0x0941	; 0x800941 <game>
    38f6:	88 23       	and	r24, r24
    38f8:	09 f4       	brne	.+2      	; 0x38fc <update+0xd4>
    38fa:	65 c1       	rjmp	.+714    	; 0x3bc6 <update+0x39e>
	followerThinkTime++;
    38fc:	20 91 3a 09 	lds	r18, 0x093A	; 0x80093a <followerThinkTime>
    3900:	30 91 3b 09 	lds	r19, 0x093B	; 0x80093b <followerThinkTime+0x1>
    3904:	2f 5f       	subi	r18, 0xFF	; 255
    3906:	3f 4f       	sbci	r19, 0xFF	; 255
    3908:	30 93 3b 09 	sts	0x093B, r19	; 0x80093b <followerThinkTime+0x1>
    390c:	20 93 3a 09 	sts	0x093A, r18	; 0x80093a <followerThinkTime>
	if (followerThinkTime > followerThinkInterval) {
    3910:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <followerThinkInterval>
    3914:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <followerThinkInterval+0x1>
    3918:	82 17       	cp	r24, r18
    391a:	93 07       	cpc	r25, r19
    391c:	0c f0       	brlt	.+2      	; 0x3920 <update+0xf8>
    391e:	40 c0       	rjmp	.+128    	; 0x39a0 <update+0x178>
		if (followerX < heroX)
    3920:	20 91 36 09 	lds	r18, 0x0936	; 0x800936 <followerX>
    3924:	30 91 37 09 	lds	r19, 0x0937	; 0x800937 <followerX+0x1>
    3928:	40 91 2e 09 	lds	r20, 0x092E	; 0x80092e <heroX>
    392c:	50 91 2f 09 	lds	r21, 0x092F	; 0x80092f <heroX+0x1>
    3930:	24 17       	cp	r18, r20
    3932:	35 07       	cpc	r19, r21
    3934:	34 f4       	brge	.+12     	; 0x3942 <update+0x11a>
			followerX++;
    3936:	2f 5f       	subi	r18, 0xFF	; 255
    3938:	3f 4f       	sbci	r19, 0xFF	; 255
    393a:	30 93 37 09 	sts	0x0937, r19	; 0x800937 <followerX+0x1>
    393e:	20 93 36 09 	sts	0x0936, r18	; 0x800936 <followerX>
		if (followerX > heroX)
    3942:	20 91 36 09 	lds	r18, 0x0936	; 0x800936 <followerX>
    3946:	30 91 37 09 	lds	r19, 0x0937	; 0x800937 <followerX+0x1>
    394a:	42 17       	cp	r20, r18
    394c:	53 07       	cpc	r21, r19
    394e:	34 f4       	brge	.+12     	; 0x395c <update+0x134>
			followerX--;
    3950:	21 50       	subi	r18, 0x01	; 1
    3952:	31 09       	sbc	r19, r1
    3954:	30 93 37 09 	sts	0x0937, r19	; 0x800937 <followerX+0x1>
    3958:	20 93 36 09 	sts	0x0936, r18	; 0x800936 <followerX>
		if (followerY < heroY)
    395c:	20 91 38 09 	lds	r18, 0x0938	; 0x800938 <followerY>
    3960:	30 91 39 09 	lds	r19, 0x0939	; 0x800939 <followerY+0x1>
    3964:	40 91 30 09 	lds	r20, 0x0930	; 0x800930 <heroY>
    3968:	50 91 31 09 	lds	r21, 0x0931	; 0x800931 <heroY+0x1>
    396c:	24 17       	cp	r18, r20
    396e:	35 07       	cpc	r19, r21
    3970:	34 f4       	brge	.+12     	; 0x397e <update+0x156>
			followerY++;
    3972:	2f 5f       	subi	r18, 0xFF	; 255
    3974:	3f 4f       	sbci	r19, 0xFF	; 255
    3976:	30 93 39 09 	sts	0x0939, r19	; 0x800939 <followerY+0x1>
    397a:	20 93 38 09 	sts	0x0938, r18	; 0x800938 <followerY>
		if (followerY > heroY)
    397e:	20 91 38 09 	lds	r18, 0x0938	; 0x800938 <followerY>
    3982:	30 91 39 09 	lds	r19, 0x0939	; 0x800939 <followerY+0x1>
    3986:	42 17       	cp	r20, r18
    3988:	53 07       	cpc	r21, r19
    398a:	34 f4       	brge	.+12     	; 0x3998 <update+0x170>
			followerY--;
    398c:	21 50       	subi	r18, 0x01	; 1
    398e:	31 09       	sbc	r19, r1
    3990:	30 93 39 09 	sts	0x0939, r19	; 0x800939 <followerY+0x1>
    3994:	20 93 38 09 	sts	0x0938, r18	; 0x800938 <followerY>
		followerThinkTime = 0;
    3998:	10 92 3b 09 	sts	0x093B, r1	; 0x80093b <followerThinkTime+0x1>
    399c:	10 92 3a 09 	sts	0x093A, r1	; 0x80093a <followerThinkTime>
	}
	if (score > 3 && followerThinkInterval > 0) {
    39a0:	20 91 3c 09 	lds	r18, 0x093C	; 0x80093c <score>
    39a4:	30 91 3d 09 	lds	r19, 0x093D	; 0x80093d <score+0x1>
    39a8:	24 30       	cpi	r18, 0x04	; 4
    39aa:	31 05       	cpc	r19, r1
    39ac:	2c f0       	brlt	.+10     	; 0x39b8 <update+0x190>
    39ae:	18 16       	cp	r1, r24
    39b0:	19 06       	cpc	r1, r25
    39b2:	6c f4       	brge	.+26     	; 0x39ce <update+0x1a6>
		followerThinkInterval--;
    39b4:	01 97       	sbiw	r24, 0x01	; 1
    39b6:	07 c0       	rjmp	.+14     	; 0x39c6 <update+0x19e>
	}

	if (score == 0 && followerThinkInterval <= 0){
    39b8:	23 2b       	or	r18, r19
    39ba:	49 f4       	brne	.+18     	; 0x39ce <update+0x1a6>
    39bc:	18 16       	cp	r1, r24
    39be:	19 06       	cpc	r1, r25
    39c0:	34 f0       	brlt	.+12     	; 0x39ce <update+0x1a6>
		followerThinkInterval = FOLLOWER_TIME_INTERVAL;
    39c2:	8c e2       	ldi	r24, 0x2C	; 44
    39c4:	91 e0       	ldi	r25, 0x01	; 1
    39c6:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <followerThinkInterval+0x1>
    39ca:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <followerThinkInterval>
	}

	//write code to move the enemy down screen
	enemyY++;
    39ce:	80 91 34 09 	lds	r24, 0x0934	; 0x800934 <enemyY>
    39d2:	90 91 35 09 	lds	r25, 0x0935	; 0x800935 <enemyY+0x1>
    39d6:	01 96       	adiw	r24, 0x01	; 1
    39d8:	90 93 35 09 	sts	0x0935, r25	; 0x800935 <enemyY+0x1>
    39dc:	80 93 34 09 	sts	0x0934, r24	; 0x800934 <enemyY>

	// check if the enemy has reached the bottom of the screen
	if (enemyY >= SCREEN_TILES_V - enemyHeight) {
    39e0:	40 91 06 01 	lds	r20, 0x0106	; 0x800106 <enemyHeight>
    39e4:	50 91 07 01 	lds	r21, 0x0107	; 0x800107 <enemyHeight+0x1>
    39e8:	22 e1       	ldi	r18, 0x12	; 18
    39ea:	30 e0       	ldi	r19, 0x00	; 0
    39ec:	24 1b       	sub	r18, r20
    39ee:	35 0b       	sbc	r19, r21
    39f0:	82 17       	cp	r24, r18
    39f2:	93 07       	cpc	r25, r19
    39f4:	ac f0       	brlt	.+42     	; 0x3a20 <update+0x1f8>
		// reset enemy here..
		// to top of screen and a random y
		enemyX = rnd(SCREEN_TILES_H - enemyWidth);
    39f6:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <enemyWidth>
    39fa:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <enemyWidth+0x1>
    39fe:	c8 e2       	ldi	r28, 0x28	; 40
    3a00:	d0 e0       	ldi	r29, 0x00	; 0
    3a02:	c8 1b       	sub	r28, r24
    3a04:	d9 0b       	sbc	r29, r25
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    3a06:	0e 94 6b 20 	call	0x40d6	; 0x40d6 <rand>

	// check if the enemy has reached the bottom of the screen
	if (enemyY >= SCREEN_TILES_V - enemyHeight) {
		// reset enemy here..
		// to top of screen and a random y
		enemyX = rnd(SCREEN_TILES_H - enemyWidth);
    3a0a:	be 01       	movw	r22, r28
    3a0c:	0e 94 e9 1f 	call	0x3fd2	; 0x3fd2 <__divmodhi4>
    3a10:	90 93 33 09 	sts	0x0933, r25	; 0x800933 <enemyX+0x1>
    3a14:	80 93 32 09 	sts	0x0932, r24	; 0x800932 <enemyX>
		enemyY = 0;
    3a18:	10 92 35 09 	sts	0x0935, r1	; 0x800935 <enemyY+0x1>
    3a1c:	10 92 34 09 	sts	0x0934, r1	; 0x800934 <enemyY>
	}
	if (checkCollision(heroX, heroY, heroWidth, heroHeight, enemyX, enemyY,
    3a20:	a0 90 06 01 	lds	r10, 0x0106	; 0x800106 <enemyHeight>
    3a24:	b0 90 07 01 	lds	r11, 0x0107	; 0x800107 <enemyHeight+0x1>
    3a28:	c0 90 04 01 	lds	r12, 0x0104	; 0x800104 <enemyWidth>
    3a2c:	d0 90 05 01 	lds	r13, 0x0105	; 0x800105 <enemyWidth+0x1>
    3a30:	e0 90 34 09 	lds	r14, 0x0934	; 0x800934 <enemyY>
    3a34:	f0 90 35 09 	lds	r15, 0x0935	; 0x800935 <enemyY+0x1>
    3a38:	00 91 32 09 	lds	r16, 0x0932	; 0x800932 <enemyX>
    3a3c:	10 91 33 09 	lds	r17, 0x0933	; 0x800933 <enemyX+0x1>
    3a40:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <heroHeight>
    3a44:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <heroHeight+0x1>
    3a48:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
    3a4c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
    3a50:	60 91 30 09 	lds	r22, 0x0930	; 0x800930 <heroY>
    3a54:	70 91 31 09 	lds	r23, 0x0931	; 0x800931 <heroY+0x1>
    3a58:	80 91 2e 09 	lds	r24, 0x092E	; 0x80092e <heroX>
    3a5c:	90 91 2f 09 	lds	r25, 0x092F	; 0x80092f <heroX+0x1>
    3a60:	0e 94 fe 1e 	call	0x3dfc	; 0x3dfc <checkCollision>
    3a64:	88 23       	and	r24, r24
    3a66:	c1 f1       	breq	.+112    	; 0x3ad8 <update+0x2b0>
			enemyWidth, enemyHeight) == true) {
		// write code to add score and reset enemy
		score = getScore(score, 1);
    3a68:	61 e0       	ldi	r22, 0x01	; 1
    3a6a:	70 e0       	ldi	r23, 0x00	; 0
    3a6c:	80 91 3c 09 	lds	r24, 0x093C	; 0x80093c <score>
    3a70:	90 91 3d 09 	lds	r25, 0x093D	; 0x80093d <score+0x1>
    3a74:	0e 94 a2 1b 	call	0x3744	; 0x3744 <getScore>
    3a78:	90 93 3d 09 	sts	0x093D, r25	; 0x80093d <score+0x1>
    3a7c:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <score>
		if(score >= 5)
    3a80:	85 30       	cpi	r24, 0x05	; 5
    3a82:	91 05       	cpc	r25, r1
    3a84:	a4 f0       	brlt	.+40     	; 0x3aae <update+0x286>
		{
			score = getScore(score,-5);
    3a86:	6b ef       	ldi	r22, 0xFB	; 251
    3a88:	7f ef       	ldi	r23, 0xFF	; 255
    3a8a:	0e 94 a2 1b 	call	0x3744	; 0x3744 <getScore>
    3a8e:	90 93 3d 09 	sts	0x093D, r25	; 0x80093d <score+0x1>
    3a92:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <score>
			money = getMoney(money,1);
    3a96:	61 e0       	ldi	r22, 0x01	; 1
    3a98:	70 e0       	ldi	r23, 0x00	; 0
    3a9a:	80 91 3e 09 	lds	r24, 0x093E	; 0x80093e <money>
    3a9e:	90 91 3f 09 	lds	r25, 0x093F	; 0x80093f <money+0x1>
    3aa2:	0e 94 a5 1b 	call	0x374a	; 0x374a <getMoney>
    3aa6:	90 93 3f 09 	sts	0x093F, r25	; 0x80093f <money+0x1>
    3aaa:	80 93 3e 09 	sts	0x093E, r24	; 0x80093e <money>
		}
		enemyX = rnd(SCREEN_TILES_H - enemyWidth);
    3aae:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <enemyWidth>
    3ab2:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <enemyWidth+0x1>
    3ab6:	c8 e2       	ldi	r28, 0x28	; 40
    3ab8:	d0 e0       	ldi	r29, 0x00	; 0
    3aba:	c8 1b       	sub	r28, r24
    3abc:	d9 0b       	sbc	r29, r25
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    3abe:	0e 94 6b 20 	call	0x40d6	; 0x40d6 <rand>
		if(score >= 5)
		{
			score = getScore(score,-5);
			money = getMoney(money,1);
		}
		enemyX = rnd(SCREEN_TILES_H - enemyWidth);
    3ac2:	be 01       	movw	r22, r28
    3ac4:	0e 94 e9 1f 	call	0x3fd2	; 0x3fd2 <__divmodhi4>
    3ac8:	90 93 33 09 	sts	0x0933, r25	; 0x800933 <enemyX+0x1>
    3acc:	80 93 32 09 	sts	0x0932, r24	; 0x800932 <enemyX>
		enemyY = 0;
    3ad0:	10 92 35 09 	sts	0x0935, r1	; 0x800935 <enemyY+0x1>
    3ad4:	10 92 34 09 	sts	0x0934, r1	; 0x800934 <enemyY>
	}

	if (checkCollision(heroX, heroY, heroWidth, heroHeight, followerX,
    3ad8:	a0 90 0a 01 	lds	r10, 0x010A	; 0x80010a <followerHeight>
    3adc:	b0 90 0b 01 	lds	r11, 0x010B	; 0x80010b <followerHeight+0x1>
    3ae0:	c0 90 08 01 	lds	r12, 0x0108	; 0x800108 <followerWidth>
    3ae4:	d0 90 09 01 	lds	r13, 0x0109	; 0x800109 <followerWidth+0x1>
    3ae8:	e0 90 38 09 	lds	r14, 0x0938	; 0x800938 <followerY>
    3aec:	f0 90 39 09 	lds	r15, 0x0939	; 0x800939 <followerY+0x1>
    3af0:	00 91 36 09 	lds	r16, 0x0936	; 0x800936 <followerX>
    3af4:	10 91 37 09 	lds	r17, 0x0937	; 0x800937 <followerX+0x1>
    3af8:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <heroHeight>
    3afc:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <heroHeight+0x1>
    3b00:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
    3b04:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
    3b08:	60 91 30 09 	lds	r22, 0x0930	; 0x800930 <heroY>
    3b0c:	70 91 31 09 	lds	r23, 0x0931	; 0x800931 <heroY+0x1>
    3b10:	80 91 2e 09 	lds	r24, 0x092E	; 0x80092e <heroX>
    3b14:	90 91 2f 09 	lds	r25, 0x092F	; 0x80092f <heroX+0x1>
    3b18:	0e 94 fe 1e 	call	0x3dfc	; 0x3dfc <checkCollision>
    3b1c:	88 23       	and	r24, r24
    3b1e:	c1 f1       	breq	.+112    	; 0x3b90 <update+0x368>
			followerY, followerWidth, followerHeight) == true) {
		// write code to add score and reset enemy
		score = getScore(score, -1);
    3b20:	6f ef       	ldi	r22, 0xFF	; 255
    3b22:	7f ef       	ldi	r23, 0xFF	; 255
    3b24:	80 91 3c 09 	lds	r24, 0x093C	; 0x80093c <score>
    3b28:	90 91 3d 09 	lds	r25, 0x093D	; 0x80093d <score+0x1>
    3b2c:	0e 94 a2 1b 	call	0x3744	; 0x3744 <getScore>
    3b30:	90 93 3d 09 	sts	0x093D, r25	; 0x80093d <score+0x1>
    3b34:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <score>
		health = getHealth(health, -1);
    3b38:	6f ef       	ldi	r22, 0xFF	; 255
    3b3a:	7f ef       	ldi	r23, 0xFF	; 255
    3b3c:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <health>
    3b40:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <health+0x1>
    3b44:	0e 94 9f 1b 	call	0x373e	; 0x373e <getHealth>
    3b48:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <health+0x1>
    3b4c:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <health>
		if(score <= 0 )
    3b50:	80 91 3c 09 	lds	r24, 0x093C	; 0x80093c <score>
    3b54:	90 91 3d 09 	lds	r25, 0x093D	; 0x80093d <score+0x1>
    3b58:	18 16       	cp	r1, r24
    3b5a:	19 06       	cpc	r1, r25
    3b5c:	24 f0       	brlt	.+8      	; 0x3b66 <update+0x33e>
		{
			score = 0;
    3b5e:	10 92 3d 09 	sts	0x093D, r1	; 0x80093d <score+0x1>
    3b62:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <score>
		}
		followerX = rnd(SCREEN_TILES_H - followerWidth);
    3b66:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <followerWidth>
    3b6a:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <followerWidth+0x1>
    3b6e:	c8 e2       	ldi	r28, 0x28	; 40
    3b70:	d0 e0       	ldi	r29, 0x00	; 0
    3b72:	c8 1b       	sub	r28, r24
    3b74:	d9 0b       	sbc	r29, r25
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    3b76:	0e 94 6b 20 	call	0x40d6	; 0x40d6 <rand>
		health = getHealth(health, -1);
		if(score <= 0 )
		{
			score = 0;
		}
		followerX = rnd(SCREEN_TILES_H - followerWidth);
    3b7a:	be 01       	movw	r22, r28
    3b7c:	0e 94 e9 1f 	call	0x3fd2	; 0x3fd2 <__divmodhi4>
    3b80:	90 93 37 09 	sts	0x0937, r25	; 0x800937 <followerX+0x1>
    3b84:	80 93 36 09 	sts	0x0936, r24	; 0x800936 <followerX>
		followerY = 0;
    3b88:	10 92 39 09 	sts	0x0939, r1	; 0x800939 <followerY+0x1>
    3b8c:	10 92 38 09 	sts	0x0938, r1	; 0x800938 <followerY>
	}
	if(money == 5)
    3b90:	80 91 3e 09 	lds	r24, 0x093E	; 0x80093e <money>
    3b94:	90 91 3f 09 	lds	r25, 0x093F	; 0x80093f <money+0x1>
    3b98:	05 97       	sbiw	r24, 0x05	; 5
    3b9a:	a9 f4       	brne	.+42     	; 0x3bc6 <update+0x39e>
	{
		shop = setTrue(shop,beTrue);
    3b9c:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <beTrue>
    3ba0:	80 91 40 09 	lds	r24, 0x0940	; 0x800940 <shop>
    3ba4:	0e 94 a8 1b 	call	0x3750	; 0x3750 <setTrue>
    3ba8:	80 93 40 09 	sts	0x0940, r24	; 0x800940 <shop>
	}
}
}
    3bac:	0c c0       	rjmp	.+24     	; 0x3bc6 <update+0x39e>
			break;
		}
		case BTN_DOWN:{
			if(game)
			{MoveHero(0, 1);}
			if(!game && !instruc)
    3bae:	80 91 42 09 	lds	r24, 0x0942	; 0x800942 <instruc>
    3bb2:	81 11       	cpse	r24, r1
    3bb4:	96 ce       	rjmp	.-724    	; 0x38e2 <update+0xba>
			{
				instruc = setTrue(instruc,beTrue);
    3bb6:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <beTrue>
    3bba:	80 e0       	ldi	r24, 0x00	; 0
    3bbc:	0e 94 a8 1b 	call	0x3750	; 0x3750 <setTrue>
    3bc0:	80 93 42 09 	sts	0x0942, r24	; 0x800942 <instruc>
    3bc4:	8e ce       	rjmp	.-740    	; 0x38e2 <update+0xba>
	if(money == 5)
	{
		shop = setTrue(shop,beTrue);
	}
}
}
    3bc6:	df 91       	pop	r29
    3bc8:	cf 91       	pop	r28
    3bca:	1f 91       	pop	r17
    3bcc:	0f 91       	pop	r16
    3bce:	ff 90       	pop	r15
    3bd0:	ef 90       	pop	r14
    3bd2:	df 90       	pop	r13
    3bd4:	cf 90       	pop	r12
    3bd6:	bf 90       	pop	r11
    3bd8:	af 90       	pop	r10
    3bda:	08 95       	ret

00003bdc <draw>:

void draw() {
    3bdc:	0f 93       	push	r16
	//Clear the screen (fills Vram with tile zero)
	ClearVram();
    3bde:	0e 94 2a 11 	call	0x2254	; 0x2254 <ClearVram>
	if(!game)
    3be2:	80 91 41 09 	lds	r24, 0x0941	; 0x800941 <game>
    3be6:	81 11       	cpse	r24, r1
    3be8:	5b c0       	rjmp	.+182    	; 0x3ca0 <draw+0xc4>
	{
		if(!instruc)
    3bea:	80 91 42 09 	lds	r24, 0x0942	; 0x800942 <instruc>
    3bee:	81 11       	cpse	r24, r1
    3bf0:	27 c0       	rjmp	.+78     	; 0x3c40 <draw+0x64>
		{Print(13, 3, PSTR("Welcome to Game"));
    3bf2:	44 ea       	ldi	r20, 0xA4	; 164
    3bf4:	5b e1       	ldi	r21, 0x1B	; 27
    3bf6:	63 e0       	ldi	r22, 0x03	; 3
    3bf8:	70 e0       	ldi	r23, 0x00	; 0
    3bfa:	8d e0       	ldi	r24, 0x0D	; 13
    3bfc:	90 e0       	ldi	r25, 0x00	; 0
    3bfe:	0e 94 3c 1b 	call	0x3678	; 0x3678 <Print>
		Print(12, 5, PSTR("Please enjoy Game"));
    3c02:	44 eb       	ldi	r20, 0xB4	; 180
    3c04:	5b e1       	ldi	r21, 0x1B	; 27
    3c06:	65 e0       	ldi	r22, 0x05	; 5
    3c08:	70 e0       	ldi	r23, 0x00	; 0
    3c0a:	8c e0       	ldi	r24, 0x0C	; 12
    3c0c:	90 e0       	ldi	r25, 0x00	; 0
    3c0e:	0e 94 3c 1b 	call	0x3678	; 0x3678 <Print>
		Print(13, 9, PSTR("UP - Start Game"));
    3c12:	46 ec       	ldi	r20, 0xC6	; 198
    3c14:	5b e1       	ldi	r21, 0x1B	; 27
    3c16:	69 e0       	ldi	r22, 0x09	; 9
    3c18:	70 e0       	ldi	r23, 0x00	; 0
    3c1a:	8d e0       	ldi	r24, 0x0D	; 13
    3c1c:	90 e0       	ldi	r25, 0x00	; 0
    3c1e:	0e 94 3c 1b 	call	0x3678	; 0x3678 <Print>
		Print(12, 11, PSTR("DOWN - Instructions"));
    3c22:	46 ed       	ldi	r20, 0xD6	; 214
    3c24:	5b e1       	ldi	r21, 0x1B	; 27
    3c26:	6b e0       	ldi	r22, 0x0B	; 11
    3c28:	70 e0       	ldi	r23, 0x00	; 0
    3c2a:	8c e0       	ldi	r24, 0x0C	; 12
    3c2c:	90 e0       	ldi	r25, 0x00	; 0
    3c2e:	0e 94 3c 1b 	call	0x3678	; 0x3678 <Print>
		Print(17, 16, PSTR("Please"));}
    3c32:	4a ee       	ldi	r20, 0xEA	; 234
    3c34:	5b e1       	ldi	r21, 0x1B	; 27
    3c36:	60 e1       	ldi	r22, 0x10	; 16
    3c38:	70 e0       	ldi	r23, 0x00	; 0
    3c3a:	81 e1       	ldi	r24, 0x11	; 17
    3c3c:	90 e0       	ldi	r25, 0x00	; 0
    3c3e:	2e c0       	rjmp	.+92     	; 0x3c9c <draw+0xc0>
		else{
			Print(8, 3, PSTR("Collect falling artefacts"));
    3c40:	41 ef       	ldi	r20, 0xF1	; 241
    3c42:	5b e1       	ldi	r21, 0x1B	; 27
    3c44:	63 e0       	ldi	r22, 0x03	; 3
    3c46:	70 e0       	ldi	r23, 0x00	; 0
    3c48:	88 e0       	ldi	r24, 0x08	; 8
    3c4a:	90 e0       	ldi	r25, 0x00	; 0
    3c4c:	0e 94 3c 1b 	call	0x3678	; 0x3678 <Print>
			Print(7, 5, PSTR("Avoid artefact loving Boss"));
    3c50:	4b e0       	ldi	r20, 0x0B	; 11
    3c52:	5c e1       	ldi	r21, 0x1C	; 28
    3c54:	65 e0       	ldi	r22, 0x05	; 5
    3c56:	70 e0       	ldi	r23, 0x00	; 0
    3c58:	87 e0       	ldi	r24, 0x07	; 7
    3c5a:	90 e0       	ldi	r25, 0x00	; 0
    3c5c:	0e 94 3c 1b 	call	0x3678	; 0x3678 <Print>
			Print(6, 7, PSTR("5 artefacts give you 1 money"));
    3c60:	46 e2       	ldi	r20, 0x26	; 38
    3c62:	5c e1       	ldi	r21, 0x1C	; 28
    3c64:	67 e0       	ldi	r22, 0x07	; 7
    3c66:	70 e0       	ldi	r23, 0x00	; 0
    3c68:	86 e0       	ldi	r24, 0x06	; 6
    3c6a:	90 e0       	ldi	r25, 0x00	; 0
    3c6c:	0e 94 3c 1b 	call	0x3678	; 0x3678 <Print>
			Print(2, 9, PSTR("Collect 20 money to get thorns armour"));
    3c70:	43 e4       	ldi	r20, 0x43	; 67
    3c72:	5c e1       	ldi	r21, 0x1C	; 28
    3c74:	69 e0       	ldi	r22, 0x09	; 9
    3c76:	70 e0       	ldi	r23, 0x00	; 0
    3c78:	82 e0       	ldi	r24, 0x02	; 2
    3c7a:	90 e0       	ldi	r25, 0x00	; 0
    3c7c:	0e 94 3c 1b 	call	0x3678	; 0x3678 <Print>
			Print(2, 11, PSTR("Run into boss to kill him with thorns"));
    3c80:	49 e6       	ldi	r20, 0x69	; 105
    3c82:	5c e1       	ldi	r21, 0x1C	; 28
    3c84:	6b e0       	ldi	r22, 0x0B	; 11
    3c86:	70 e0       	ldi	r23, 0x00	; 0
    3c88:	82 e0       	ldi	r24, 0x02	; 2
    3c8a:	90 e0       	ldi	r25, 0x00	; 0
    3c8c:	0e 94 3c 1b 	call	0x3678	; 0x3678 <Print>
			Print(13, 15, PSTR("UP - Start Game"));
    3c90:	4f e8       	ldi	r20, 0x8F	; 143
    3c92:	5c e1       	ldi	r21, 0x1C	; 28
    3c94:	6f e0       	ldi	r22, 0x0F	; 15
    3c96:	70 e0       	ldi	r23, 0x00	; 0
    3c98:	8d e0       	ldi	r24, 0x0D	; 13
    3c9a:	90 e0       	ldi	r25, 0x00	; 0
    3c9c:	0e 94 3c 1b 	call	0x3678	; 0x3678 <Print>
		}
	}
	if(game)
    3ca0:	80 91 41 09 	lds	r24, 0x0941	; 0x800941 <game>
    3ca4:	88 23       	and	r24, r24
    3ca6:	09 f4       	brne	.+2      	; 0x3caa <draw+0xce>
    3ca8:	a7 c0       	rjmp	.+334    	; 0x3df8 <draw+0x21c>
	{
		Print(1, 0, PSTR("Artefacts"));
    3caa:	4f e9       	ldi	r20, 0x9F	; 159
    3cac:	5c e1       	ldi	r21, 0x1C	; 28
    3cae:	60 e0       	ldi	r22, 0x00	; 0
    3cb0:	70 e0       	ldi	r23, 0x00	; 0
    3cb2:	81 e0       	ldi	r24, 0x01	; 1
    3cb4:	90 e0       	ldi	r25, 0x00	; 0
    3cb6:	0e 94 3c 1b 	call	0x3678	; 0x3678 <Print>
		PrintInt(14, 0, score, false);
    3cba:	40 91 3c 09 	lds	r20, 0x093C	; 0x80093c <score>
    3cbe:	50 91 3d 09 	lds	r21, 0x093D	; 0x80093d <score+0x1>
    3cc2:	20 e0       	ldi	r18, 0x00	; 0
    3cc4:	60 e0       	ldi	r22, 0x00	; 0
    3cc6:	70 e0       	ldi	r23, 0x00	; 0
    3cc8:	8e e0       	ldi	r24, 0x0E	; 14
    3cca:	90 e0       	ldi	r25, 0x00	; 0
    3ccc:	0e 94 04 1b 	call	0x3608	; 0x3608 <PrintInt>
		if(shop)
    3cd0:	80 91 40 09 	lds	r24, 0x0940	; 0x800940 <shop>
    3cd4:	88 23       	and	r24, r24
    3cd6:	41 f0       	breq	.+16     	; 0x3ce8 <draw+0x10c>
		{
			Print(25, 15, PSTR("Buy Thorns - E"));
    3cd8:	49 ea       	ldi	r20, 0xA9	; 169
    3cda:	5c e1       	ldi	r21, 0x1C	; 28
    3cdc:	6f e0       	ldi	r22, 0x0F	; 15
    3cde:	70 e0       	ldi	r23, 0x00	; 0
    3ce0:	89 e1       	ldi	r24, 0x19	; 25
    3ce2:	90 e0       	ldi	r25, 0x00	; 0
    3ce4:	0e 94 3c 1b 	call	0x3678	; 0x3678 <Print>
		}
		PrintInt(19, 0, heroX, false);
    3ce8:	40 91 2e 09 	lds	r20, 0x092E	; 0x80092e <heroX>
    3cec:	50 91 2f 09 	lds	r21, 0x092F	; 0x80092f <heroX+0x1>
    3cf0:	20 e0       	ldi	r18, 0x00	; 0
    3cf2:	60 e0       	ldi	r22, 0x00	; 0
    3cf4:	70 e0       	ldi	r23, 0x00	; 0
    3cf6:	83 e1       	ldi	r24, 0x13	; 19
    3cf8:	90 e0       	ldi	r25, 0x00	; 0
    3cfa:	0e 94 04 1b 	call	0x3608	; 0x3608 <PrintInt>
		PrintInt(24, 0, heroY, false);
    3cfe:	40 91 30 09 	lds	r20, 0x0930	; 0x800930 <heroY>
    3d02:	50 91 31 09 	lds	r21, 0x0931	; 0x800931 <heroY+0x1>
    3d06:	20 e0       	ldi	r18, 0x00	; 0
    3d08:	60 e0       	ldi	r22, 0x00	; 0
    3d0a:	70 e0       	ldi	r23, 0x00	; 0
    3d0c:	88 e1       	ldi	r24, 0x18	; 24
    3d0e:	90 e0       	ldi	r25, 0x00	; 0
    3d10:	0e 94 04 1b 	call	0x3608	; 0x3608 <PrintInt>

		Print(27, 0, PSTR("Health"));
    3d14:	48 eb       	ldi	r20, 0xB8	; 184
    3d16:	5c e1       	ldi	r21, 0x1C	; 28
    3d18:	60 e0       	ldi	r22, 0x00	; 0
    3d1a:	70 e0       	ldi	r23, 0x00	; 0
    3d1c:	8b e1       	ldi	r24, 0x1B	; 27
    3d1e:	90 e0       	ldi	r25, 0x00	; 0
    3d20:	0e 94 3c 1b 	call	0x3678	; 0x3678 <Print>
		PrintInt(37, 0, health, false);
    3d24:	40 91 0e 01 	lds	r20, 0x010E	; 0x80010e <health>
    3d28:	50 91 0f 01 	lds	r21, 0x010F	; 0x80010f <health+0x1>
    3d2c:	20 e0       	ldi	r18, 0x00	; 0
    3d2e:	60 e0       	ldi	r22, 0x00	; 0
    3d30:	70 e0       	ldi	r23, 0x00	; 0
    3d32:	85 e2       	ldi	r24, 0x25	; 37
    3d34:	90 e0       	ldi	r25, 0x00	; 0
    3d36:	0e 94 04 1b 	call	0x3608	; 0x3608 <PrintInt>
		Print(1, 17, PSTR("EnemyHealth"));
    3d3a:	4f eb       	ldi	r20, 0xBF	; 191
    3d3c:	5c e1       	ldi	r21, 0x1C	; 28
    3d3e:	61 e1       	ldi	r22, 0x11	; 17
    3d40:	70 e0       	ldi	r23, 0x00	; 0
    3d42:	81 e0       	ldi	r24, 0x01	; 1
    3d44:	90 e0       	ldi	r25, 0x00	; 0
    3d46:	0e 94 3c 1b 	call	0x3678	; 0x3678 <Print>
		PrintInt(16, 17, enemyHealth, false);
    3d4a:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <enemyHealth>
    3d4e:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <enemyHealth+0x1>
    3d52:	20 e0       	ldi	r18, 0x00	; 0
    3d54:	61 e1       	ldi	r22, 0x11	; 17
    3d56:	70 e0       	ldi	r23, 0x00	; 0
    3d58:	80 e1       	ldi	r24, 0x10	; 16
    3d5a:	90 e0       	ldi	r25, 0x00	; 0
    3d5c:	0e 94 04 1b 	call	0x3608	; 0x3608 <PrintInt>
		Print(27,17,PSTR("Money"));
    3d60:	4b ec       	ldi	r20, 0xCB	; 203
    3d62:	5c e1       	ldi	r21, 0x1C	; 28
    3d64:	61 e1       	ldi	r22, 0x11	; 17
    3d66:	70 e0       	ldi	r23, 0x00	; 0
    3d68:	8b e1       	ldi	r24, 0x1B	; 27
    3d6a:	90 e0       	ldi	r25, 0x00	; 0
    3d6c:	0e 94 3c 1b 	call	0x3678	; 0x3678 <Print>
		PrintInt (37,17,money,false);
    3d70:	40 91 3e 09 	lds	r20, 0x093E	; 0x80093e <money>
    3d74:	50 91 3f 09 	lds	r21, 0x093F	; 0x80093f <money+0x1>
    3d78:	20 e0       	ldi	r18, 0x00	; 0
    3d7a:	61 e1       	ldi	r22, 0x11	; 17
    3d7c:	70 e0       	ldi	r23, 0x00	; 0
    3d7e:	85 e2       	ldi	r24, 0x25	; 37
    3d80:	90 e0       	ldi	r25, 0x00	; 0
    3d82:	0e 94 04 1b 	call	0x3608	; 0x3608 <PrintInt>
		drawRectangle(heroX, heroY, heroWidth, heroHeight, '0');
    3d86:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <heroHeight>
    3d8a:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <heroHeight+0x1>
    3d8e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
    3d92:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
    3d96:	60 91 30 09 	lds	r22, 0x0930	; 0x800930 <heroY>
    3d9a:	70 91 31 09 	lds	r23, 0x0931	; 0x800931 <heroY+0x1>
    3d9e:	00 e3       	ldi	r16, 0x30	; 48
    3da0:	80 91 2e 09 	lds	r24, 0x092E	; 0x80092e <heroX>
    3da4:	90 91 2f 09 	lds	r25, 0x092F	; 0x80092f <heroX+0x1>
    3da8:	0e 94 6b 1f 	call	0x3ed6	; 0x3ed6 <drawRectangle>
		drawRectangle(enemyX, enemyY, enemyWidth, enemyHeight, '$');
    3dac:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <enemyHeight>
    3db0:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <enemyHeight+0x1>
    3db4:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <enemyWidth>
    3db8:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <enemyWidth+0x1>
    3dbc:	60 91 34 09 	lds	r22, 0x0934	; 0x800934 <enemyY>
    3dc0:	70 91 35 09 	lds	r23, 0x0935	; 0x800935 <enemyY+0x1>
    3dc4:	04 e2       	ldi	r16, 0x24	; 36
    3dc6:	80 91 32 09 	lds	r24, 0x0932	; 0x800932 <enemyX>
    3dca:	90 91 33 09 	lds	r25, 0x0933	; 0x800933 <enemyX+0x1>
    3dce:	0e 94 6b 1f 	call	0x3ed6	; 0x3ed6 <drawRectangle>
		drawRectangle(followerX, followerY, followerWidth, followerHeight, 'X');
    3dd2:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <followerHeight>
    3dd6:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <followerHeight+0x1>
    3dda:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <followerWidth>
    3dde:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <followerWidth+0x1>
    3de2:	60 91 38 09 	lds	r22, 0x0938	; 0x800938 <followerY>
    3de6:	70 91 39 09 	lds	r23, 0x0939	; 0x800939 <followerY+0x1>
    3dea:	08 e5       	ldi	r16, 0x58	; 88
    3dec:	80 91 36 09 	lds	r24, 0x0936	; 0x800936 <followerX>
    3df0:	90 91 37 09 	lds	r25, 0x0937	; 0x800937 <followerX+0x1>
    3df4:	0e 94 6b 1f 	call	0x3ed6	; 0x3ed6 <drawRectangle>
	}	
}
    3df8:	0f 91       	pop	r16
    3dfa:	08 95       	ret

00003dfc <checkCollision>:
bool checkCollision(int x1, int y1, int width1, int height1, int x2, int y2,
		int width2, int height2) {
    3dfc:	af 92       	push	r10
    3dfe:	bf 92       	push	r11
    3e00:	cf 92       	push	r12
    3e02:	df 92       	push	r13
    3e04:	ef 92       	push	r14
    3e06:	ff 92       	push	r15
    3e08:	0f 93       	push	r16
    3e0a:	1f 93       	push	r17
	// write the code to return true if collided.
	if (x1 + width1 < x2 || y1 + height1 < y2 || x1 > x2 + width2
    3e0c:	48 0f       	add	r20, r24
    3e0e:	59 1f       	adc	r21, r25
    3e10:	40 17       	cp	r20, r16
    3e12:	51 07       	cpc	r21, r17
    3e14:	84 f0       	brlt	.+32     	; 0x3e36 <checkCollision+0x3a>
    3e16:	26 0f       	add	r18, r22
    3e18:	37 1f       	adc	r19, r23
    3e1a:	2e 15       	cp	r18, r14
    3e1c:	3f 05       	cpc	r19, r15
    3e1e:	5c f0       	brlt	.+22     	; 0x3e36 <checkCollision+0x3a>
    3e20:	c0 0e       	add	r12, r16
    3e22:	d1 1e       	adc	r13, r17
    3e24:	c8 16       	cp	r12, r24
    3e26:	d9 06       	cpc	r13, r25
    3e28:	34 f0       	brlt	.+12     	; 0x3e36 <checkCollision+0x3a>
			|| y1 > y2 + height2) {
    3e2a:	ae 0c       	add	r10, r14
    3e2c:	bf 1c       	adc	r11, r15
    3e2e:	81 e0       	ldi	r24, 0x01	; 1
    3e30:	a6 16       	cp	r10, r22
    3e32:	b7 06       	cpc	r11, r23
    3e34:	0c f4       	brge	.+2      	; 0x3e38 <checkCollision+0x3c>
		return false;
    3e36:	80 e0       	ldi	r24, 0x00	; 0
	} else {
		return true;
	}
}
    3e38:	1f 91       	pop	r17
    3e3a:	0f 91       	pop	r16
    3e3c:	ff 90       	pop	r15
    3e3e:	ef 90       	pop	r14
    3e40:	df 90       	pop	r13
    3e42:	cf 90       	pop	r12
    3e44:	bf 90       	pop	r11
    3e46:	af 90       	pop	r10
    3e48:	08 95       	ret

00003e4a <MoveHero>:

void MoveHero(int x, int y) {
    3e4a:	ef 92       	push	r14
    3e4c:	ff 92       	push	r15
    3e4e:	0f 93       	push	r16
    3e50:	1f 93       	push	r17
    3e52:	cf 93       	push	r28
    3e54:	df 93       	push	r29
	// write code to move hero
	heroX = heroX + x;
    3e56:	00 91 2e 09 	lds	r16, 0x092E	; 0x80092e <heroX>
    3e5a:	10 91 2f 09 	lds	r17, 0x092F	; 0x80092f <heroX+0x1>
    3e5e:	f8 01       	movw	r30, r16
    3e60:	e8 0f       	add	r30, r24
    3e62:	f9 1f       	adc	r31, r25
    3e64:	f0 93 2f 09 	sts	0x092F, r31	; 0x80092f <heroX+0x1>
    3e68:	e0 93 2e 09 	sts	0x092E, r30	; 0x80092e <heroX>
	heroY = heroY + y;
    3e6c:	c0 91 30 09 	lds	r28, 0x0930	; 0x800930 <heroY>
    3e70:	d0 91 31 09 	lds	r29, 0x0931	; 0x800931 <heroY+0x1>
    3e74:	9e 01       	movw	r18, r28
    3e76:	26 0f       	add	r18, r22
    3e78:	37 1f       	adc	r19, r23
    3e7a:	30 93 31 09 	sts	0x0931, r19	; 0x800931 <heroY+0x1>
    3e7e:	20 93 30 09 	sts	0x0930, r18	; 0x800930 <heroY>

	// write code to check if the hero is inside the window
	if (heroX < 0 || heroX + (TILE_WIDTH / heroWidth) >= SCREEN_TILES_H || heroY < 0
    3e82:	f7 fd       	sbrc	r31, 7
    3e84:	19 c0       	rjmp	.+50     	; 0x3eb8 <MoveHero+0x6e>
    3e86:	e0 90 00 01 	lds	r14, 0x0100	; 0x800100 <__data_start>
    3e8a:	f0 90 01 01 	lds	r15, 0x0101	; 0x800101 <__data_start+0x1>
    3e8e:	86 e0       	ldi	r24, 0x06	; 6
    3e90:	90 e0       	ldi	r25, 0x00	; 0
    3e92:	b7 01       	movw	r22, r14
    3e94:	0e 94 e9 1f 	call	0x3fd2	; 0x3fd2 <__divmodhi4>
    3e98:	e6 0f       	add	r30, r22
    3e9a:	f7 1f       	adc	r31, r23
    3e9c:	b8 97       	sbiw	r30, 0x28	; 40
    3e9e:	64 f4       	brge	.+24     	; 0x3eb8 <MoveHero+0x6e>
    3ea0:	37 fd       	sbrc	r19, 7
    3ea2:	0a c0       	rjmp	.+20     	; 0x3eb8 <MoveHero+0x6e>
			|| heroY + (TILE_HEIGHT / heroWidth) >= SCREEN_TILES_V ) {
    3ea4:	8c e0       	ldi	r24, 0x0C	; 12
    3ea6:	90 e0       	ldi	r25, 0x00	; 0
    3ea8:	b7 01       	movw	r22, r14
    3eaa:	0e 94 e9 1f 	call	0x3fd2	; 0x3fd2 <__divmodhi4>
    3eae:	26 0f       	add	r18, r22
    3eb0:	37 1f       	adc	r19, r23
    3eb2:	22 31       	cpi	r18, 0x12	; 18
    3eb4:	31 05       	cpc	r19, r1
    3eb6:	44 f0       	brlt	.+16     	; 0x3ec8 <MoveHero+0x7e>
		heroX = heroX - x;
    3eb8:	10 93 2f 09 	sts	0x092F, r17	; 0x80092f <heroX+0x1>
    3ebc:	00 93 2e 09 	sts	0x092E, r16	; 0x80092e <heroX>
		heroY = heroY - y;
    3ec0:	d0 93 31 09 	sts	0x0931, r29	; 0x800931 <heroY+0x1>
    3ec4:	c0 93 30 09 	sts	0x0930, r28	; 0x800930 <heroY>
	}
}
    3ec8:	df 91       	pop	r29
    3eca:	cf 91       	pop	r28
    3ecc:	1f 91       	pop	r17
    3ece:	0f 91       	pop	r16
    3ed0:	ff 90       	pop	r15
    3ed2:	ef 90       	pop	r14
    3ed4:	08 95       	ret

00003ed6 <drawRectangle>:

void drawRectangle(int x, int y, int width, int height, char c) {
    3ed6:	5f 92       	push	r5
    3ed8:	6f 92       	push	r6
    3eda:	7f 92       	push	r7
    3edc:	8f 92       	push	r8
    3ede:	9f 92       	push	r9
    3ee0:	af 92       	push	r10
    3ee2:	bf 92       	push	r11
    3ee4:	cf 92       	push	r12
    3ee6:	df 92       	push	r13
    3ee8:	ef 92       	push	r14
    3eea:	ff 92       	push	r15
    3eec:	0f 93       	push	r16
    3eee:	1f 93       	push	r17
    3ef0:	cf 93       	push	r28
    3ef2:	df 93       	push	r29
	if (x < SCREEN_TILES_H && y < SCREEN_TILES_V) {
    3ef4:	88 32       	cpi	r24, 0x28	; 40
    3ef6:	91 05       	cpc	r25, r1
    3ef8:	0c f0       	brlt	.+2      	; 0x3efc <drawRectangle+0x26>
    3efa:	47 c0       	rjmp	.+142    	; 0x3f8a <drawRectangle+0xb4>
    3efc:	62 31       	cpi	r22, 0x12	; 18
    3efe:	71 05       	cpc	r23, r1
    3f00:	0c f0       	brlt	.+2      	; 0x3f04 <drawRectangle+0x2e>
    3f02:	43 c0       	rjmp	.+134    	; 0x3f8a <drawRectangle+0xb4>
    3f04:	50 2e       	mov	r5, r16
    3f06:	49 01       	movw	r8, r18
    3f08:	ea 01       	movw	r28, r20
    3f0a:	7b 01       	movw	r14, r22
    3f0c:	8c 01       	movw	r16, r24
    3f0e:	3c 01       	movw	r6, r24

		for (int i = 0; i < width; i++) {
			if (x + i < SCREEN_TILES_H && y < SCREEN_TILES_V) {
				PrintChar(x + i, y, c);
			}
			if (y + height - 1 < SCREEN_TILES_V) {
    3f10:	6b 01       	movw	r12, r22
    3f12:	c2 0e       	add	r12, r18
    3f14:	d3 1e       	adc	r13, r19
				PrintChar(x + i, y + height - 1, c);
    3f16:	56 01       	movw	r10, r12
    3f18:	81 e0       	ldi	r24, 0x01	; 1
    3f1a:	a8 1a       	sub	r10, r24
    3f1c:	b1 08       	sbc	r11, r1
}

void drawRectangle(int x, int y, int width, int height, char c) {
	if (x < SCREEN_TILES_H && y < SCREEN_TILES_V) {

		for (int i = 0; i < width; i++) {
    3f1e:	c3 01       	movw	r24, r6
    3f20:	80 1b       	sub	r24, r16
    3f22:	91 0b       	sbc	r25, r17
    3f24:	8c 17       	cp	r24, r28
    3f26:	9d 07       	cpc	r25, r29
    3f28:	b4 f4       	brge	.+44     	; 0x3f56 <drawRectangle+0x80>
			if (x + i < SCREEN_TILES_H && y < SCREEN_TILES_V) {
    3f2a:	88 e2       	ldi	r24, 0x28	; 40
    3f2c:	68 16       	cp	r6, r24
    3f2e:	71 04       	cpc	r7, r1
    3f30:	2c f4       	brge	.+10     	; 0x3f3c <drawRectangle+0x66>
				PrintChar(x + i, y, c);
    3f32:	45 2d       	mov	r20, r5
    3f34:	b7 01       	movw	r22, r14
    3f36:	c3 01       	movw	r24, r6
    3f38:	0e 94 60 1b 	call	0x36c0	; 0x36c0 <PrintChar>
			}
			if (y + height - 1 < SCREEN_TILES_V) {
    3f3c:	83 e1       	ldi	r24, 0x13	; 19
    3f3e:	c8 16       	cp	r12, r24
    3f40:	d1 04       	cpc	r13, r1
    3f42:	2c f4       	brge	.+10     	; 0x3f4e <drawRectangle+0x78>
				PrintChar(x + i, y + height - 1, c);
    3f44:	45 2d       	mov	r20, r5
    3f46:	b5 01       	movw	r22, r10
    3f48:	c3 01       	movw	r24, r6
    3f4a:	0e 94 60 1b 	call	0x36c0	; 0x36c0 <PrintChar>
    3f4e:	8f ef       	ldi	r24, 0xFF	; 255
    3f50:	68 1a       	sub	r6, r24
    3f52:	78 0a       	sbc	r7, r24
    3f54:	e4 cf       	rjmp	.-56     	; 0x3f1e <drawRectangle+0x48>
}

void drawRectangle(int x, int y, int width, int height, char c) {
	if (x < SCREEN_TILES_H && y < SCREEN_TILES_V) {

		for (int i = 0; i < width; i++) {
    3f56:	cc 24       	eor	r12, r12
    3f58:	c3 94       	inc	r12
    3f5a:	d1 2c       	mov	r13, r1
				PrintChar(x + i, y + height - 1, c);
			}
		}
		for (int i = 1; i < height; i++) {
			PrintChar(x, y + i, c);
			PrintChar(x + width - 1, y + i, c);
    3f5c:	c0 0f       	add	r28, r16
    3f5e:	d1 1f       	adc	r29, r17
    3f60:	21 97       	sbiw	r28, 0x01	; 1
			}
			if (y + height - 1 < SCREEN_TILES_V) {
				PrintChar(x + i, y + height - 1, c);
			}
		}
		for (int i = 1; i < height; i++) {
    3f62:	c8 14       	cp	r12, r8
    3f64:	d9 04       	cpc	r13, r9
    3f66:	8c f4       	brge	.+34     	; 0x3f8a <drawRectangle+0xb4>
    3f68:	57 01       	movw	r10, r14
    3f6a:	ac 0c       	add	r10, r12
    3f6c:	bd 1c       	adc	r11, r13
			PrintChar(x, y + i, c);
    3f6e:	45 2d       	mov	r20, r5
    3f70:	b5 01       	movw	r22, r10
    3f72:	c8 01       	movw	r24, r16
    3f74:	0e 94 60 1b 	call	0x36c0	; 0x36c0 <PrintChar>
			PrintChar(x + width - 1, y + i, c);
    3f78:	45 2d       	mov	r20, r5
    3f7a:	b5 01       	movw	r22, r10
    3f7c:	ce 01       	movw	r24, r28
    3f7e:	0e 94 60 1b 	call	0x36c0	; 0x36c0 <PrintChar>
			}
			if (y + height - 1 < SCREEN_TILES_V) {
				PrintChar(x + i, y + height - 1, c);
			}
		}
		for (int i = 1; i < height; i++) {
    3f82:	8f ef       	ldi	r24, 0xFF	; 255
    3f84:	c8 1a       	sub	r12, r24
    3f86:	d8 0a       	sbc	r13, r24
    3f88:	ec cf       	rjmp	.-40     	; 0x3f62 <drawRectangle+0x8c>
			PrintChar(x, y + i, c);
			PrintChar(x + width - 1, y + i, c);
		}
	}
}
    3f8a:	df 91       	pop	r29
    3f8c:	cf 91       	pop	r28
    3f8e:	1f 91       	pop	r17
    3f90:	0f 91       	pop	r16
    3f92:	ff 90       	pop	r15
    3f94:	ef 90       	pop	r14
    3f96:	df 90       	pop	r13
    3f98:	cf 90       	pop	r12
    3f9a:	bf 90       	pop	r11
    3f9c:	af 90       	pop	r10
    3f9e:	9f 90       	pop	r9
    3fa0:	8f 90       	pop	r8
    3fa2:	7f 90       	pop	r7
    3fa4:	6f 90       	pop	r6
    3fa6:	5f 90       	pop	r5
    3fa8:	08 95       	ret

00003faa <__udivmodhi4>:
    3faa:	aa 1b       	sub	r26, r26
    3fac:	bb 1b       	sub	r27, r27
    3fae:	51 e1       	ldi	r21, 0x11	; 17
    3fb0:	07 c0       	rjmp	.+14     	; 0x3fc0 <__udivmodhi4_ep>

00003fb2 <__udivmodhi4_loop>:
    3fb2:	aa 1f       	adc	r26, r26
    3fb4:	bb 1f       	adc	r27, r27
    3fb6:	a6 17       	cp	r26, r22
    3fb8:	b7 07       	cpc	r27, r23
    3fba:	10 f0       	brcs	.+4      	; 0x3fc0 <__udivmodhi4_ep>
    3fbc:	a6 1b       	sub	r26, r22
    3fbe:	b7 0b       	sbc	r27, r23

00003fc0 <__udivmodhi4_ep>:
    3fc0:	88 1f       	adc	r24, r24
    3fc2:	99 1f       	adc	r25, r25
    3fc4:	5a 95       	dec	r21
    3fc6:	a9 f7       	brne	.-22     	; 0x3fb2 <__udivmodhi4_loop>
    3fc8:	80 95       	com	r24
    3fca:	90 95       	com	r25
    3fcc:	bc 01       	movw	r22, r24
    3fce:	cd 01       	movw	r24, r26
    3fd0:	08 95       	ret

00003fd2 <__divmodhi4>:
    3fd2:	97 fb       	bst	r25, 7
    3fd4:	07 2e       	mov	r0, r23
    3fd6:	16 f4       	brtc	.+4      	; 0x3fdc <__divmodhi4+0xa>
    3fd8:	00 94       	com	r0
    3fda:	07 d0       	rcall	.+14     	; 0x3fea <__divmodhi4_neg1>
    3fdc:	77 fd       	sbrc	r23, 7
    3fde:	09 d0       	rcall	.+18     	; 0x3ff2 <__divmodhi4_neg2>
    3fe0:	0e 94 d5 1f 	call	0x3faa	; 0x3faa <__udivmodhi4>
    3fe4:	07 fc       	sbrc	r0, 7
    3fe6:	05 d0       	rcall	.+10     	; 0x3ff2 <__divmodhi4_neg2>
    3fe8:	3e f4       	brtc	.+14     	; 0x3ff8 <__divmodhi4_exit>

00003fea <__divmodhi4_neg1>:
    3fea:	90 95       	com	r25
    3fec:	81 95       	neg	r24
    3fee:	9f 4f       	sbci	r25, 0xFF	; 255
    3ff0:	08 95       	ret

00003ff2 <__divmodhi4_neg2>:
    3ff2:	70 95       	com	r23
    3ff4:	61 95       	neg	r22
    3ff6:	7f 4f       	sbci	r23, 0xFF	; 255

00003ff8 <__divmodhi4_exit>:
    3ff8:	08 95       	ret

00003ffa <__udivmodsi4>:
    3ffa:	a1 e2       	ldi	r26, 0x21	; 33
    3ffc:	1a 2e       	mov	r1, r26
    3ffe:	aa 1b       	sub	r26, r26
    4000:	bb 1b       	sub	r27, r27
    4002:	fd 01       	movw	r30, r26
    4004:	0d c0       	rjmp	.+26     	; 0x4020 <__udivmodsi4_ep>

00004006 <__udivmodsi4_loop>:
    4006:	aa 1f       	adc	r26, r26
    4008:	bb 1f       	adc	r27, r27
    400a:	ee 1f       	adc	r30, r30
    400c:	ff 1f       	adc	r31, r31
    400e:	a2 17       	cp	r26, r18
    4010:	b3 07       	cpc	r27, r19
    4012:	e4 07       	cpc	r30, r20
    4014:	f5 07       	cpc	r31, r21
    4016:	20 f0       	brcs	.+8      	; 0x4020 <__udivmodsi4_ep>
    4018:	a2 1b       	sub	r26, r18
    401a:	b3 0b       	sbc	r27, r19
    401c:	e4 0b       	sbc	r30, r20
    401e:	f5 0b       	sbc	r31, r21

00004020 <__udivmodsi4_ep>:
    4020:	66 1f       	adc	r22, r22
    4022:	77 1f       	adc	r23, r23
    4024:	88 1f       	adc	r24, r24
    4026:	99 1f       	adc	r25, r25
    4028:	1a 94       	dec	r1
    402a:	69 f7       	brne	.-38     	; 0x4006 <__udivmodsi4_loop>
    402c:	60 95       	com	r22
    402e:	70 95       	com	r23
    4030:	80 95       	com	r24
    4032:	90 95       	com	r25
    4034:	9b 01       	movw	r18, r22
    4036:	ac 01       	movw	r20, r24
    4038:	bd 01       	movw	r22, r26
    403a:	cf 01       	movw	r24, r30
    403c:	08 95       	ret

0000403e <do_rand>:
    403e:	8f 92       	push	r8
    4040:	9f 92       	push	r9
    4042:	af 92       	push	r10
    4044:	bf 92       	push	r11
    4046:	cf 92       	push	r12
    4048:	df 92       	push	r13
    404a:	ef 92       	push	r14
    404c:	ff 92       	push	r15
    404e:	cf 93       	push	r28
    4050:	df 93       	push	r29
    4052:	ec 01       	movw	r28, r24
    4054:	68 81       	ld	r22, Y
    4056:	79 81       	ldd	r23, Y+1	; 0x01
    4058:	8a 81       	ldd	r24, Y+2	; 0x02
    405a:	9b 81       	ldd	r25, Y+3	; 0x03
    405c:	61 15       	cp	r22, r1
    405e:	71 05       	cpc	r23, r1
    4060:	81 05       	cpc	r24, r1
    4062:	91 05       	cpc	r25, r1
    4064:	21 f4       	brne	.+8      	; 0x406e <do_rand+0x30>
    4066:	64 e2       	ldi	r22, 0x24	; 36
    4068:	79 ed       	ldi	r23, 0xD9	; 217
    406a:	8b e5       	ldi	r24, 0x5B	; 91
    406c:	97 e0       	ldi	r25, 0x07	; 7
    406e:	2d e1       	ldi	r18, 0x1D	; 29
    4070:	33 ef       	ldi	r19, 0xF3	; 243
    4072:	41 e0       	ldi	r20, 0x01	; 1
    4074:	50 e0       	ldi	r21, 0x00	; 0
    4076:	0e 94 7b 20 	call	0x40f6	; 0x40f6 <__divmodsi4>
    407a:	49 01       	movw	r8, r18
    407c:	5a 01       	movw	r10, r20
    407e:	9b 01       	movw	r18, r22
    4080:	ac 01       	movw	r20, r24
    4082:	a7 ea       	ldi	r26, 0xA7	; 167
    4084:	b1 e4       	ldi	r27, 0x41	; 65
    4086:	0e 94 9a 20 	call	0x4134	; 0x4134 <__muluhisi3>
    408a:	6b 01       	movw	r12, r22
    408c:	7c 01       	movw	r14, r24
    408e:	ac ee       	ldi	r26, 0xEC	; 236
    4090:	b4 ef       	ldi	r27, 0xF4	; 244
    4092:	a5 01       	movw	r20, r10
    4094:	94 01       	movw	r18, r8
    4096:	0e 94 a8 20 	call	0x4150	; 0x4150 <__mulohisi3>
    409a:	dc 01       	movw	r26, r24
    409c:	cb 01       	movw	r24, r22
    409e:	8c 0d       	add	r24, r12
    40a0:	9d 1d       	adc	r25, r13
    40a2:	ae 1d       	adc	r26, r14
    40a4:	bf 1d       	adc	r27, r15
    40a6:	b7 ff       	sbrs	r27, 7
    40a8:	03 c0       	rjmp	.+6      	; 0x40b0 <do_rand+0x72>
    40aa:	01 97       	sbiw	r24, 0x01	; 1
    40ac:	a1 09       	sbc	r26, r1
    40ae:	b0 48       	sbci	r27, 0x80	; 128
    40b0:	88 83       	st	Y, r24
    40b2:	99 83       	std	Y+1, r25	; 0x01
    40b4:	aa 83       	std	Y+2, r26	; 0x02
    40b6:	bb 83       	std	Y+3, r27	; 0x03
    40b8:	9f 77       	andi	r25, 0x7F	; 127
    40ba:	df 91       	pop	r29
    40bc:	cf 91       	pop	r28
    40be:	ff 90       	pop	r15
    40c0:	ef 90       	pop	r14
    40c2:	df 90       	pop	r13
    40c4:	cf 90       	pop	r12
    40c6:	bf 90       	pop	r11
    40c8:	af 90       	pop	r10
    40ca:	9f 90       	pop	r9
    40cc:	8f 90       	pop	r8
    40ce:	08 95       	ret

000040d0 <rand_r>:
    40d0:	0e 94 1f 20 	call	0x403e	; 0x403e <do_rand>
    40d4:	08 95       	ret

000040d6 <rand>:
    40d6:	83 e1       	ldi	r24, 0x13	; 19
    40d8:	91 e0       	ldi	r25, 0x01	; 1
    40da:	0e 94 1f 20 	call	0x403e	; 0x403e <do_rand>
    40de:	08 95       	ret

000040e0 <srand>:
    40e0:	a0 e0       	ldi	r26, 0x00	; 0
    40e2:	b0 e0       	ldi	r27, 0x00	; 0
    40e4:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <next>
    40e8:	90 93 14 01 	sts	0x0114, r25	; 0x800114 <next+0x1>
    40ec:	a0 93 15 01 	sts	0x0115, r26	; 0x800115 <next+0x2>
    40f0:	b0 93 16 01 	sts	0x0116, r27	; 0x800116 <next+0x3>
    40f4:	08 95       	ret

000040f6 <__divmodsi4>:
    40f6:	05 2e       	mov	r0, r21
    40f8:	97 fb       	bst	r25, 7
    40fa:	1e f4       	brtc	.+6      	; 0x4102 <__divmodsi4+0xc>
    40fc:	00 94       	com	r0
    40fe:	0e 94 92 20 	call	0x4124	; 0x4124 <__negsi2>
    4102:	57 fd       	sbrc	r21, 7
    4104:	07 d0       	rcall	.+14     	; 0x4114 <__divmodsi4_neg2>
    4106:	0e 94 fd 1f 	call	0x3ffa	; 0x3ffa <__udivmodsi4>
    410a:	07 fc       	sbrc	r0, 7
    410c:	03 d0       	rcall	.+6      	; 0x4114 <__divmodsi4_neg2>
    410e:	4e f4       	brtc	.+18     	; 0x4122 <__divmodsi4_exit>
    4110:	0c 94 92 20 	jmp	0x4124	; 0x4124 <__negsi2>

00004114 <__divmodsi4_neg2>:
    4114:	50 95       	com	r21
    4116:	40 95       	com	r20
    4118:	30 95       	com	r19
    411a:	21 95       	neg	r18
    411c:	3f 4f       	sbci	r19, 0xFF	; 255
    411e:	4f 4f       	sbci	r20, 0xFF	; 255
    4120:	5f 4f       	sbci	r21, 0xFF	; 255

00004122 <__divmodsi4_exit>:
    4122:	08 95       	ret

00004124 <__negsi2>:
    4124:	90 95       	com	r25
    4126:	80 95       	com	r24
    4128:	70 95       	com	r23
    412a:	61 95       	neg	r22
    412c:	7f 4f       	sbci	r23, 0xFF	; 255
    412e:	8f 4f       	sbci	r24, 0xFF	; 255
    4130:	9f 4f       	sbci	r25, 0xFF	; 255
    4132:	08 95       	ret

00004134 <__muluhisi3>:
    4134:	0e 94 ad 20 	call	0x415a	; 0x415a <__umulhisi3>
    4138:	a5 9f       	mul	r26, r21
    413a:	90 0d       	add	r25, r0
    413c:	b4 9f       	mul	r27, r20
    413e:	90 0d       	add	r25, r0
    4140:	a4 9f       	mul	r26, r20
    4142:	80 0d       	add	r24, r0
    4144:	91 1d       	adc	r25, r1
    4146:	11 24       	eor	r1, r1
    4148:	08 95       	ret

0000414a <__mulshisi3>:
    414a:	b7 ff       	sbrs	r27, 7
    414c:	0c 94 9a 20 	jmp	0x4134	; 0x4134 <__muluhisi3>

00004150 <__mulohisi3>:
    4150:	0e 94 9a 20 	call	0x4134	; 0x4134 <__muluhisi3>
    4154:	82 1b       	sub	r24, r18
    4156:	93 0b       	sbc	r25, r19
    4158:	08 95       	ret

0000415a <__umulhisi3>:
    415a:	a2 9f       	mul	r26, r18
    415c:	b0 01       	movw	r22, r0
    415e:	b3 9f       	mul	r27, r19
    4160:	c0 01       	movw	r24, r0
    4162:	a3 9f       	mul	r26, r19
    4164:	70 0d       	add	r23, r0
    4166:	81 1d       	adc	r24, r1
    4168:	11 24       	eor	r1, r1
    416a:	91 1d       	adc	r25, r1
    416c:	b2 9f       	mul	r27, r18
    416e:	70 0d       	add	r23, r0
    4170:	81 1d       	adc	r24, r1
    4172:	11 24       	eor	r1, r1
    4174:	91 1d       	adc	r25, r1
    4176:	08 95       	ret

00004178 <_exit>:
    4178:	f8 94       	cli

0000417a <__stop_program>:
    417a:	ff cf       	rjmp	.-2      	; 0x417a <__stop_program>
