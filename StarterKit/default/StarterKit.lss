
StarterKit.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000018  00800100  0000438a  0000448a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000438a  00000000  00000000  00000100  2**8
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000008a9  00800118  00800118  000044a2  2**1
                  ALLOC
  3 .comment      00000011  00000000  00000000  000044a2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000044b4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000420  00000000  00000000  000044f0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003e68  00000000  00000000  00004910  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000110a  00000000  00000000  00008778  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002ca5  00000000  00000000  00009882  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000008e8  00000000  00000000  0000c528  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000f01  00000000  00000000  0000ce10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000034a6  00000000  00000000  0000dd11  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000428  00000000  00000000  000111b8  2**3
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 76 0e 	jmp	0x1cec	; 0x1cec <__ctors_end>
       4:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__bad_interrupt>
       8:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__bad_interrupt>
       c:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__bad_interrupt>
      10:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__bad_interrupt>
      14:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__bad_interrupt>
      18:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__bad_interrupt>
      1c:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__bad_interrupt>
      20:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__bad_interrupt>
      24:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__bad_interrupt>
      28:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__bad_interrupt>
      2c:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__bad_interrupt>
      30:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__bad_interrupt>
      34:	0c 94 4a 0f 	jmp	0x1e94	; 0x1e94 <__vector_13>
      38:	0c 94 89 0f 	jmp	0x1f12	; 0x1f12 <__vector_14>
      3c:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__bad_interrupt>
      40:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__bad_interrupt>
      44:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__bad_interrupt>
      48:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__bad_interrupt>
      4c:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__bad_interrupt>
      50:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__bad_interrupt>
      54:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__bad_interrupt>
      58:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__bad_interrupt>
      5c:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__bad_interrupt>
      60:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__bad_interrupt>
      64:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__bad_interrupt>
      68:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__bad_interrupt>
      6c:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	5a 55       	subi	r21, 0x5A	; 90
      72:	01 20       	and	r0, r1
      74:	01 01       	movw	r0, r2
      76:	00 38       	cpi	r16, 0x80	; 128
      78:	08 00       	.word	0x0008	; ????
	...

00000090 <io_table>:
      90:	81 00 45 00 5d ff 5e 10 27 ff 2a d2 2b 7d 21 0c     ..E.].^.'.*.+}!.
      a0:	22 fb 85 00 84 00 89 03 88 8d 81 09 6f 02 44 42     "...........o.DB
      b0:	47 00 45 01 b0 83 b3 00 b1 01 24 b9 25 57 8a 1d     G.E.......$.%W..
      c0:	8b 03                                               ..

000000c2 <patchCommands>:
      c2:	16 12 19 12 21 12 25 12 2c 12 34 12 39 12 3e 12     ....!.%.,.4.9.>.
      d2:	41 12 51 12 54 12 57 12 92 12 95 12 98 12           A.Q.T.W.......

000000e0 <fader>:
      e0:	00 40 88 91 d2 e4 ad b5 b6 be bf ff                 .@..........

000000ec <font>:
	...
     140:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
     150:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
     160:	00 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
     180:	00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00 ff     ................
     190:	00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     1d4:	00 00 00 ff 00 ff 00 00 ff ff ff ff ff 00 00 ff     ................
     1e4:	00 ff 00 00 00 ff 00 ff 00 00 ff ff ff ff ff 00     ................
     1f4:	00 ff 00 ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     214:	ff 00 00 00 00 ff ff ff 00 00 ff 00 ff 00 ff 00     ................
     224:	ff 00 ff 00 00 00 00 ff ff ff 00 00 00 00 ff 00     ................
     234:	ff 00 ff 00 ff 00 ff 00 00 ff ff ff 00 00 00 00     ................
     244:	ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     260:	ff ff 00 00 ff 00 ff ff 00 00 ff 00 00 00 00 ff     ................
     270:	00 00 00 00 ff 00 00 00 00 ff 00 00 00 00 ff 00     ................
     280:	00 ff ff 00 ff 00 00 ff ff 00 00 00 00 00 00 00     ................
	...
     2a8:	00 ff 00 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00     ................
     2b8:	00 00 00 ff 00 00 00 00 ff 00 ff 00 ff 00 ff 00     ................
     2c8:	00 ff 00 00 00 ff ff 00 ff 00 00 00 00 00 00 00     ................
	...
     2ec:	ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
	...
     334:	00 ff 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
     344:	00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00     ................
     354:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
     364:	00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     374:	00 00 00 00 00 00 00 ff 00 00 00 00 00 00 ff 00     ................
     384:	00 00 00 00 ff 00 00 00 00 00 00 ff 00 00 00 00     ................
     394:	00 ff 00 00 00 00 00 ff 00 00 00 00 ff 00 00 00     ................
     3a4:	00 00 ff 00 00 00 00 ff 00 00 00 00 00 00 00 00     ................
	...
     3c8:	00 00 ff 00 00 00 ff 00 ff 00 ff 00 00 ff ff ff     ................
     3d8:	00 00 00 00 ff 00 00 00 00 ff ff ff 00 00 ff 00     ................
     3e8:	ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
     418:	ff 00 00 00 00 00 ff 00 00 00 ff ff ff ff ff 00     ................
     428:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     474:	00 00 00 ff ff 00 00 00 00 ff ff 00 00 00 ff ff     ................
	...
     4b0:	00 00 ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
	...
     504:	00 00 00 ff ff 00 00 00 00 ff ff 00 00 00 00 00     ................
	...
     534:	ff 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00     ................
     544:	ff 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00     ................
     554:	ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     578:	00 00 ff ff 00 00 00 ff 00 00 ff 00 00 ff 00 00     ................
     588:	ff 00 00 ff 00 00 ff 00 00 ff 00 00 ff 00 00 ff     ................
     598:	00 00 ff 00 00 00 ff ff 00 00 00 00 00 00 00 00     ................
	...
     5c0:	00 00 ff 00 00 00 00 ff ff 00 00 00 00 00 ff 00     ................
     5d0:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
     5e0:	ff 00 00 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     608:	00 ff ff ff 00 00 ff 00 00 00 ff 00 00 00 00 00     ................
     618:	ff 00 00 00 00 ff 00 00 00 00 ff 00 00 00 00 ff     ................
     628:	00 00 00 00 ff ff ff ff ff 00 00 00 00 00 00 00     ................
	...
     650:	ff ff ff ff ff 00 00 00 00 00 ff 00 00 00 00 ff     ................
     660:	00 00 00 00 ff ff 00 00 00 00 00 00 ff 00 ff 00     ................
     670:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     698:	00 00 00 ff 00 00 00 00 ff ff 00 00 00 ff 00 ff     ................
     6a8:	00 00 ff 00 00 ff 00 00 ff ff ff ff ff 00 00 00     ................
     6b8:	00 ff 00 00 00 00 00 ff 00 00 00 00 00 00 00 00     ................
	...
     6e0:	ff ff ff ff ff 00 ff 00 00 00 00 00 ff ff ff ff     ................
     6f0:	00 00 00 00 00 00 ff 00 00 00 00 00 ff 00 ff 00     ................
     700:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     728:	00 00 ff ff 00 00 00 ff 00 00 00 00 ff 00 00 00     ................
     738:	00 00 ff ff ff ff 00 00 ff 00 00 00 ff 00 ff 00     ................
     748:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     770:	ff ff ff ff ff 00 00 00 00 00 ff 00 00 00 00 ff     ................
     780:	00 00 00 00 00 ff 00 00 00 00 ff 00 00 00 00 00     ................
     790:	ff 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
     7b8:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     7c8:	ff 00 00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00     ................
     7d8:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     800:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     810:	ff 00 00 ff ff ff ff 00 00 00 00 00 ff 00 00 00     ................
     820:	00 ff 00 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
	...
     854:	00 ff ff 00 00 00 00 ff ff 00 00 00 00 00 00 00     ................
     864:	00 00 00 ff ff 00 00 00 00 ff ff 00 00 00 00 00     ................
	...
     89c:	00 ff ff 00 00 00 00 ff ff 00 00 00 00 00 00 00     ................
     8ac:	00 00 00 ff ff 00 00 00 00 ff ff 00 00 00 ff ff     ................
	...
     8e0:	00 ff 00 00 00 00 ff 00 00 00 00 ff 00 00 00 00     ................
     8f0:	00 00 ff 00 00 00 00 00 00 ff 00 00 00 00 00 00     ................
	...
     92c:	ff ff ff ff ff 00 00 00 00 00 00 00 ff ff ff ff     ................
     93c:	ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     96c:	00 00 00 ff 00 00 00 00 00 00 ff 00 00 00 00 00     ................
     97c:	00 ff 00 00 00 00 ff 00 00 00 00 ff 00 00 00 00     ................
	...
     9b0:	00 ff ff ff 00 00 ff 00 00 00 ff 00 00 00 00 ff     ................
     9c0:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
     9d0:	00 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
     9f8:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 ff ff     ................
     a08:	ff 00 ff 00 ff 00 ff 00 ff 00 ff ff ff 00 ff 00     ................
     a18:	00 00 00 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     a40:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     a50:	ff 00 ff ff ff ff ff 00 ff 00 00 00 ff 00 ff 00     ................
     a60:	00 00 ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     a88:	ff ff ff ff 00 00 00 ff 00 00 ff 00 00 ff 00 00     ................
     a98:	ff 00 00 ff ff ff 00 00 00 ff 00 00 ff 00 00 ff     ................
     aa8:	00 00 ff 00 ff ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     ad0:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     ae0:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
     af0:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     b18:	ff ff ff ff 00 00 00 ff 00 00 ff 00 00 ff 00 00     ................
     b28:	ff 00 00 ff 00 00 ff 00 00 ff 00 00 ff 00 00 ff     ................
     b38:	00 00 ff 00 ff ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     b60:	ff ff ff ff ff 00 ff 00 00 00 00 00 ff 00 00 00     ................
     b70:	00 00 ff ff ff ff 00 00 ff 00 00 00 00 00 ff 00     ................
     b80:	00 00 00 00 ff ff ff ff ff 00 00 00 00 00 00 00     ................
	...
     ba8:	ff ff ff ff ff 00 ff 00 00 00 00 00 ff 00 00 00     ................
     bb8:	00 00 ff ff ff ff 00 00 ff 00 00 00 00 00 ff 00     ................
     bc8:	00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     bf0:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     c00:	00 00 ff 00 00 00 00 00 ff 00 00 ff ff 00 ff 00     ................
     c10:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     c38:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     c48:	ff 00 ff ff ff ff ff 00 ff 00 00 00 ff 00 ff 00     ................
     c58:	00 00 ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     c80:	00 ff ff ff 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
     c90:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
     ca0:	ff 00 00 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     cc8:	00 00 ff ff ff 00 00 00 00 ff 00 00 00 00 00 ff     ................
     cd8:	00 00 00 00 00 ff 00 00 00 00 00 ff 00 00 ff 00     ................
     ce8:	00 ff 00 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
	...
     d10:	ff 00 00 00 ff 00 ff 00 00 ff 00 00 ff 00 ff 00     ................
     d20:	00 00 ff ff 00 00 00 00 ff 00 ff 00 00 00 ff 00     ................
     d30:	00 ff 00 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     d58:	ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
     d68:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
     d78:	00 00 00 00 ff ff ff ff ff 00 00 00 00 00 00 00     ................
	...
     da0:	ff 00 00 00 ff 00 ff ff 00 ff ff 00 ff 00 ff 00     ................
     db0:	ff 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00     ................
     dc0:	00 00 ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     de8:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff ff 00 00     ................
     df8:	ff 00 ff 00 ff 00 ff 00 ff 00 00 ff ff 00 ff 00     ................
     e08:	00 00 ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     e30:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     e40:	ff 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00     ................
     e50:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     e78:	ff ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     e88:	ff 00 ff ff ff ff 00 00 ff 00 00 00 00 00 ff 00     ................
     e98:	00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     ec0:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     ed0:	ff 00 ff 00 00 00 ff 00 ff 00 ff 00 ff 00 ff 00     ................
     ee0:	00 ff 00 00 00 ff ff 00 ff 00 00 00 00 00 00 00     ................
	...
     f08:	ff ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     f18:	ff 00 ff ff ff ff 00 00 ff 00 ff 00 00 00 ff 00     ................
     f28:	00 ff 00 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     f50:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     f60:	00 00 00 ff ff ff 00 00 00 00 00 00 ff 00 ff 00     ................
     f70:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     f98:	ff ff ff ff ff 00 00 00 ff 00 00 00 00 00 ff 00     ................
     fa8:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
     fb8:	ff 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
     fe0:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     ff0:	ff 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00     ................
    1000:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
    1028:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    1038:	ff 00 ff 00 00 00 ff 00 00 ff 00 ff 00 00 00 ff     ................
    1048:	00 ff 00 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
    1070:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    1080:	ff 00 ff 00 00 00 ff 00 ff 00 ff 00 ff 00 ff 00     ................
    1090:	ff 00 ff 00 00 ff 00 ff 00 00 00 00 00 00 00 00     ................
	...
    10b8:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 00 ff 00 ff     ................
    10c8:	00 00 00 00 ff 00 00 00 00 ff 00 ff 00 00 ff 00     ................
    10d8:	00 00 ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
    1100:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 00 ff 00 ff     ................
    1110:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    1120:	ff 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
    1148:	ff ff ff ff ff 00 00 00 00 00 ff 00 00 00 00 ff     ................
    1158:	00 00 00 00 ff 00 00 00 00 ff 00 00 00 00 ff 00     ................
    1168:	00 00 00 00 ff ff ff ff ff 00 00 00 00 00 00 00     ................
	...
    1188:	00 00 00 ff ff ff 00 00 00 ff 00 00 00 00 00 ff     ................
    1198:	00 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00     ................
    11a8:	00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00     ................
    11b8:	00 00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
	...
    11d8:	ff 00 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00     ................
    11e8:	00 00 00 00 ff 00 00 00 00 00 00 ff 00 00 00 00     ................
    11f8:	00 ff 00 00 00 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
    1218:	00 00 00 ff ff ff 00 00 00 00 00 ff 00 00 00 00     ................
    1228:	00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00     ................
    1238:	00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff     ................
    1248:	00 00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
	...
    1264:	ff 00 00 00 00 ff 00 ff 00 00 ff 00 00 00 ff 00     ................
	...
    12e0:	ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    12f0:	00 00 00 ff 00 00 00 00 00 00 ff 00 00 00 00 00     ................
    1300:	00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    134c:	00 ff ff ff 00 00 00 00 00 00 ff 00 00 ff ff ff     ................
    135c:	ff 00 ff 00 00 00 ff 00 00 ff ff ff ff 00 00 00     ................
	...
    1388:	ff 00 00 00 00 00 ff 00 00 00 00 00 ff ff ff ff     ................
    1398:	00 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00     ................
    13a8:	00 00 ff 00 ff ff ff ff 00 00 00 00 00 00 00 00     ................
	...
    13dc:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    13ec:	00 00 ff 00 00 00 ff 00 00 ff ff ff 00 00 00 00     ................
	...
    141c:	ff 00 00 00 00 00 ff 00 00 ff ff ff ff 00 ff 00     ................
    142c:	00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00     ................
    143c:	00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    146c:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff ff ff ff     ................
    147c:	00 00 ff 00 00 00 00 00 00 ff ff ff 00 00 00 00     ................
	...
    14a8:	00 00 ff ff 00 00 00 ff 00 00 ff 00 00 ff 00 00     ................
    14b8:	00 00 ff ff ff 00 00 00 00 ff 00 00 00 00 00 ff     ................
    14c8:	00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00     ................
	...
    14fc:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    150c:	ff 00 ff 00 00 00 ff 00 00 ff ff ff ff 00 00 00     ................
    151c:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
    1538:	ff 00 00 00 00 00 ff 00 00 00 00 00 ff ff ff ff     ................
    1548:	00 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00     ................
    1558:	00 00 ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
    1580:	00 00 ff 00 00 00 00 00 00 00 00 00 00 ff ff 00     ................
    1590:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    15a0:	ff 00 00 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
    15cc:	ff 00 00 00 00 00 00 00 00 00 00 ff ff 00 00 00     ................
    15dc:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
    15ec:	00 00 00 00 ff 00 00 ff 00 00 ff 00 00 00 ff ff     ................
	...
    1610:	ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
    1620:	ff 00 ff 00 00 ff 00 00 ff ff ff 00 00 00 ff 00     ................
    1630:	00 ff 00 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
    1658:	00 ff ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
    1668:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    1678:	ff 00 00 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
    16ac:	ff ff 00 ff 00 00 ff 00 ff 00 ff 00 ff 00 ff 00     ................
    16bc:	ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 00 00     ................
	...
    16f4:	ff 00 ff ff 00 00 ff ff 00 00 ff 00 ff 00 00 00     ................
    1704:	ff 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00 00 00     ................
	...
    173c:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    174c:	ff 00 ff 00 00 00 ff 00 00 ff ff ff 00 00 00 00     ................
	...
    1784:	ff ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    1794:	ff 00 ff 00 00 00 ff 00 ff ff ff ff 00 00 ff 00     ................
    17a4:	00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    17cc:	00 ff ff ff ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    17dc:	ff 00 ff 00 00 00 ff 00 00 ff ff ff ff 00 00 00     ................
    17ec:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
    1814:	ff 00 ff ff 00 00 ff ff 00 00 ff 00 ff 00 00 00     ................
    1824:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
    185c:	00 ff ff ff ff 00 ff 00 00 00 00 00 00 ff ff ff     ................
    186c:	00 00 00 00 00 00 ff 00 ff ff ff ff 00 00 00 00     ................
	...
    1898:	00 00 ff 00 00 00 00 00 ff 00 00 00 ff ff ff ff     ................
    18a8:	ff 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    18b8:	ff 00 00 00 00 00 00 ff ff 00 00 00 00 00 00 00     ................
	...
    18ec:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    18fc:	ff 00 ff 00 00 ff ff 00 00 ff ff 00 ff 00 00 00     ................
	...
    1934:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    1944:	ff 00 00 ff 00 ff 00 00 00 00 ff 00 00 00 00 00     ................
	...
    197c:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 ff 00     ................
    198c:	ff 00 ff 00 ff 00 ff 00 00 ff 00 ff 00 00 00 00     ................
	...
    19c4:	ff 00 00 00 ff 00 00 ff 00 ff 00 00 00 00 ff 00     ................
    19d4:	00 00 00 ff 00 ff 00 00 ff 00 00 00 ff 00 00 00     ................
	...
    1a0c:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    1a1c:	ff 00 00 ff 00 ff 00 00 00 00 ff 00 00 00 00 ff     ................
    1a2c:	00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1a54:	ff ff ff ff ff 00 00 00 00 ff 00 00 00 00 ff 00     ................
    1a64:	00 00 00 ff 00 00 00 00 ff ff ff ff ff 00 00 00     ................
	...
    1a8c:	00 ff 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
    1a9c:	00 00 ff 00 00 00 00 ff 00 00 00 00 00 00 ff 00     ................
    1aac:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    1abc:	00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1ad4:	ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
    1ae4:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
    1af4:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    1b04:	ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1b14:	00 00 00 00 00 00 00 ff 00 00 00 00 00 00 ff 00     ................
    1b24:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    1b34:	00 ff 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
    1b44:	00 00 ff 00 00 00 00 ff 00 00 00 00 00 00 00 00     ................
	...
    1b74:	00 ff 00 00 ff 00 ff 00 ff 00 ff 00 ff 00 00 ff     ................
	...

00001ba4 <__c.2360>:
    1ba4:	57 65 6c 63 6f 6d 65 20 74 6f 20 47 61 6d 65 00     Welcome to Game.

00001bb4 <__c.2362>:
    1bb4:	50 6c 65 61 73 65 20 65 6e 6a 6f 79 20 47 61 6d     Please enjoy Gam
    1bc4:	65 00                                               e.

00001bc6 <__c.2364>:
    1bc6:	55 50 20 2d 20 53 74 61 72 74 20 47 61 6d 65 00     UP - Start Game.

00001bd6 <__c.2366>:
    1bd6:	44 4f 57 4e 20 2d 20 49 6e 73 74 72 75 63 74 69     DOWN - Instructi
    1be6:	6f 6e 73 00                                         ons.

00001bea <__c.2368>:
    1bea:	50 6c 65 61 73 65 00                                Please.

00001bf1 <__c.2370>:
    1bf1:	43 6f 6c 6c 65 63 74 20 66 61 6c 6c 69 6e 67 20     Collect falling 
    1c01:	61 72 74 65 66 61 63 74 73 00                       artefacts.

00001c0b <__c.2372>:
    1c0b:	41 76 6f 69 64 20 61 72 74 65 66 61 63 74 20 6c     Avoid artefact l
    1c1b:	6f 76 69 6e 67 20 42 6f 73 73 00                    oving Boss.

00001c26 <__c.2374>:
    1c26:	37 20 61 72 74 65 66 61 63 74 73 20 67 69 76 65     7 artefacts give
    1c36:	20 79 6f 75 20 31 20 6d 6f 6e 65 79 00               you 1 money.

00001c43 <__c.2376>:
    1c43:	43 6f 6c 6c 65 63 74 20 32 30 20 6d 6f 6e 65 79     Collect 20 money
    1c53:	20 74 6f 20 67 65 74 20 74 68 6f 72 6e 73 20 61      to get thorns a
    1c63:	72 6d 6f 75 72 00                                   rmour.

00001c69 <__c.2378>:
    1c69:	52 75 6e 20 69 6e 74 6f 20 62 6f 73 73 20 74 6f     Run into boss to
    1c79:	20 6b 69 6c 6c 20 68 69 6d 20 77 69 74 68 20 74      kill him with t
    1c89:	68 6f 72 6e 73 00                                   horns.

00001c8f <__c.2380>:
    1c8f:	55 50 20 2d 20 53 74 61 72 74 20 47 61 6d 65 00     UP - Start Game.

00001c9f <__c.2382>:
    1c9f:	47 61 6d 65 20 4f 76 65 72 00                       Game Over.

00001ca9 <__c.2384>:
    1ca9:	59 6f 75 20 77 69 6e 00                             You win.

00001cb1 <__c.2386>:
    1cb1:	59 6f 75 20 6c 6f 73 65 00                          You lose.

00001cba <__c.2388>:
    1cba:	41 72 74 65 66 61 63 74 73 00                       Artefacts.

00001cc4 <__c.2390>:
    1cc4:	42 75 79 20 54 68 6f 72 6e 73 20 2d 20 58 00        Buy Thorns - X.

00001cd3 <__c.2392>:
    1cd3:	48 65 61 6c 74 68 00                                Health.

00001cda <__c.2394>:
    1cda:	45 6e 65 6d 79 48 65 61 6c 74 68 00                 EnemyHealth.

00001ce6 <__c.2396>:
    1ce6:	4d 6f 6e 65 79 00                                   Money.

00001cec <__ctors_end>:
    1cec:	11 24       	eor	r1, r1
    1cee:	1f be       	out	0x3f, r1	; 63
    1cf0:	cf ef       	ldi	r28, 0xFF	; 255
    1cf2:	d0 e1       	ldi	r29, 0x10	; 16
    1cf4:	de bf       	out	0x3e, r29	; 62
    1cf6:	cd bf       	out	0x3d, r28	; 61

00001cf8 <__do_copy_data>:
    1cf8:	11 e0       	ldi	r17, 0x01	; 1
    1cfa:	a0 e0       	ldi	r26, 0x00	; 0
    1cfc:	b1 e0       	ldi	r27, 0x01	; 1
    1cfe:	ea e8       	ldi	r30, 0x8A	; 138
    1d00:	f3 e4       	ldi	r31, 0x43	; 67
    1d02:	02 c0       	rjmp	.+4      	; 0x1d08 <__do_copy_data+0x10>
    1d04:	05 90       	lpm	r0, Z+
    1d06:	0d 92       	st	X+, r0
    1d08:	a8 31       	cpi	r26, 0x18	; 24
    1d0a:	b1 07       	cpc	r27, r17
    1d0c:	d9 f7       	brne	.-10     	; 0x1d04 <__do_copy_data+0xc>

00001d0e <__do_clear_bss>:
    1d0e:	29 e0       	ldi	r18, 0x09	; 9
    1d10:	a8 e1       	ldi	r26, 0x18	; 24
    1d12:	b1 e0       	ldi	r27, 0x01	; 1
    1d14:	01 c0       	rjmp	.+2      	; 0x1d18 <.do_clear_bss_start>

00001d16 <.do_clear_bss_loop>:
    1d16:	1d 92       	st	X+, r1

00001d18 <.do_clear_bss_start>:
    1d18:	a1 3c       	cpi	r26, 0xC1	; 193
    1d1a:	b2 07       	cpc	r27, r18
    1d1c:	e1 f7       	brne	.-8      	; 0x1d16 <.do_clear_bss_loop>

00001d1e <wdt_init>:
	  if (j == count) {
		 WriteEeprom(i*EEPROM_BLOCK_SIZE,(u8)EEPROM_FREE_BLOCK);
		 WriteEeprom(i*EEPROM_BLOCK_SIZE+1,(u8)(EEPROM_FREE_BLOCK>>8));
	  }
   }
}
    1d1e:	14 be       	out	0x34, r1	; 52
    1d20:	0f b6       	in	r0, 0x3f	; 63
    1d22:	f8 94       	cli
    1d24:	a8 95       	wdr
    1d26:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
    1d2a:	88 61       	ori	r24, 0x18	; 24
    1d2c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
    1d30:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
    1d34:	0f be       	out	0x3f, r0	; 63

00001d36 <Initialize>:
    1d36:	f8 94       	cli
    1d38:	80 e9       	ldi	r24, 0x90	; 144
    1d3a:	90 e0       	ldi	r25, 0x00	; 0
    1d3c:	42 ec       	ldi	r20, 0xC2	; 194
    1d3e:	50 e0       	ldi	r21, 0x00	; 0
    1d40:	fc 01       	movw	r30, r24
    1d42:	25 91       	lpm	r18, Z+
    1d44:	34 91       	lpm	r19, Z
    1d46:	f9 01       	movw	r30, r18
    1d48:	ff 27       	eor	r31, r31
    1d4a:	30 83       	st	Z, r19
    1d4c:	02 96       	adiw	r24, 0x02	; 2
    1d4e:	48 17       	cp	r20, r24
    1d50:	59 07       	cpc	r21, r25
    1d52:	b1 f7       	brne	.-20     	; 0x1d40 <Initialize+0xa>
    1d54:	0e 94 ff 11 	call	0x23fe	; 0x23fe <isEepromFormatted>
    1d58:	81 11       	cpse	r24, r1
    1d5a:	02 c0       	rjmp	.+4      	; 0x1d60 <Initialize+0x2a>
    1d5c:	0e 94 dd 11 	call	0x23ba	; 0x23ba <FormatEeprom>
    1d60:	e5 e0       	ldi	r30, 0x05	; 5
    1d62:	f7 e0       	ldi	r31, 0x07	; 7
    1d64:	80 e8       	ldi	r24, 0x80	; 128
    1d66:	81 93       	st	Z+, r24
    1d68:	99 e0       	ldi	r25, 0x09	; 9
    1d6a:	e1 31       	cpi	r30, 0x11	; 17
    1d6c:	f9 07       	cpc	r31, r25
    1d6e:	d9 f7       	brne	.-10     	; 0x1d66 <Initialize+0x30>
    1d70:	85 e0       	ldi	r24, 0x05	; 5
    1d72:	97 e0       	ldi	r25, 0x07	; 7
    1d74:	90 93 12 09 	sts	0x0912, r25	; 0x800912 <mix_pos+0x1>
    1d78:	80 93 11 09 	sts	0x0911, r24	; 0x800911 <mix_pos>
    1d7c:	10 92 13 09 	sts	0x0913, r1	; 0x800913 <mix_bank>
    1d80:	81 e0       	ldi	r24, 0x01	; 1
    1d82:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <tr4_barrel_lo>
    1d86:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <tr4_barrel_hi>
    1d8a:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <tr4_params>
    1d8e:	10 92 16 09 	sts	0x0916, r1	; 0x800916 <mixer>
    1d92:	10 92 1c 09 	sts	0x091C, r1	; 0x80091c <tr2_vol>
    1d96:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <tr3_vol>
    1d9a:	10 92 28 09 	sts	0x0928, r1	; 0x800928 <tr4_vol>
    1d9e:	10 92 f0 06 	sts	0x06F0, r1	; 0x8006f0 <sync_phase>
    1da2:	10 92 f2 06 	sts	0x06F2, r1	; 0x8006f2 <sync_flags>
    1da6:	92 e1       	ldi	r25, 0x12	; 18
    1da8:	90 93 f1 06 	sts	0x06F1, r25	; 0x8006f1 <sync_pulse>
    1dac:	98 ed       	ldi	r25, 0xD8	; 216
    1dae:	90 93 f8 06 	sts	0x06F8, r25	; 0x8006f8 <render_lines_count>
    1db2:	94 e1       	ldi	r25, 0x14	; 20
    1db4:	90 93 f7 06 	sts	0x06F7, r25	; 0x8006f7 <first_render_line>
    1db8:	10 92 fc 06 	sts	0x06FC, r1	; 0x8006fc <joypad1_status_hi+0x1>
    1dbc:	10 92 fb 06 	sts	0x06FB, r1	; 0x8006fb <joypad1_status_hi>
    1dc0:	10 92 00 07 	sts	0x0700, r1	; 0x800700 <joypad2_status_hi+0x1>
    1dc4:	10 92 ff 06 	sts	0x06FF, r1	; 0x8006ff <joypad2_status_hi>
    1dc8:	80 93 15 09 	sts	0x0915, r24	; 0x800915 <sound_enabled>
    1dcc:	0e 94 81 1b 	call	0x3702	; 0x3702 <InitializeVideoMode>
    1dd0:	78 94       	sei
    1dd2:	0e 94 80 1b 	call	0x3700	; 0x3700 <DisplayLogo>
    1dd6:	0e 94 2b 1c 	call	0x3856	; 0x3856 <main>
    1dda:	0c 94 c3 21 	jmp	0x4386	; 0x4386 <_exit>

00001dde <__bad_interrupt>:
    1dde:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00001de2 <sub_video_mode1>:
	brne .-4 ;~1 us
	nop
	sbiw r24,1
	brne WaitUs

	ret
    1de2:	30 e0       	ldi	r19, 0x00	; 0
    1de4:	3a 95       	dec	r19
    1de6:	f1 f7       	brne	.-4      	; 0x1de4 <sub_video_mode1+0x2>
    1de8:	31 ec       	ldi	r19, 0xC1	; 193
    1dea:	3a 95       	dec	r19
    1dec:	f1 f7       	brne	.-4      	; 0x1dea <sub_video_mode1+0x8>
    1dee:	c8 e1       	ldi	r28, 0x18	; 24
    1df0:	d1 e0       	ldi	r29, 0x01	; 1
    1df2:	08 ed       	ldi	r16, 0xD8	; 216
    1df4:	a0 2e       	mov	r10, r16
    1df6:	66 27       	eor	r22, r22
    1df8:	76 e0       	ldi	r23, 0x06	; 6

00001dfa <next_tile_line>:
    1dfa:	2d d1       	rcall	.+602    	; 0x2056 <hsync_pulse>
    1dfc:	3b e2       	ldi	r19, 0x2B	; 43
    1dfe:	3a 95       	dec	r19
    1e00:	f1 f7       	brne	.-4      	; 0x1dfe <next_tile_line+0x4>
    1e02:	0e 94 29 0f 	call	0x1e52	; 0x1e52 <render_tile_line>
    1e06:	31 e1       	ldi	r19, 0x11	; 17
    1e08:	3a 95       	dec	r19
    1e0a:	f1 f7       	brne	.-4      	; 0x1e08 <next_tile_line+0xe>
    1e0c:	aa 94       	dec	r10
    1e0e:	89 f0       	breq	.+34     	; 0x1e32 <frame_end>
    1e10:	c8 95       	lpm
    1e12:	63 95       	inc	r22
    1e14:	6c 30       	cpi	r22, 0x0C	; 12
    1e16:	29 f0       	breq	.+10     	; 0x1e22 <next_tile_row>
    1e18:	33 e0       	ldi	r19, 0x03	; 3
    1e1a:	3a 95       	dec	r19
    1e1c:	f1 f7       	brne	.-4      	; 0x1e1a <next_tile_line+0x20>
    1e1e:	00 00       	nop
    1e20:	ec cf       	rjmp	.-40     	; 0x1dfa <next_tile_line>

00001e22 <next_tile_row>:
    1e22:	66 27       	eor	r22, r22
    1e24:	00 24       	eor	r0, r0
    1e26:	30 e5       	ldi	r19, 0x50	; 80
    1e28:	c3 0f       	add	r28, r19
    1e2a:	d0 1d       	adc	r29, r0
    1e2c:	c8 95       	lpm
    1e2e:	00 00       	nop
    1e30:	e4 cf       	rjmp	.-56     	; 0x1dfa <next_tile_line>

00001e32 <frame_end>:
    1e32:	35 e0       	ldi	r19, 0x05	; 5
    1e34:	3a 95       	dec	r19
    1e36:	f1 f7       	brne	.-4      	; 0x1e34 <frame_end+0x2>
    1e38:	00 c0       	rjmp	.+0      	; 0x1e3a <frame_end+0x8>
    1e3a:	0d d1       	rcall	.+538    	; 0x2056 <hsync_pulse>
    1e3c:	e0 91 f2 06 	lds	r30, 0x06F2	; 0x8006f2 <sync_flags>
    1e40:	42 e0       	ldi	r20, 0x02	; 2
    1e42:	e4 27       	eor	r30, r20
    1e44:	e1 60       	ori	r30, 0x01	; 1
    1e46:	e0 93 f2 06 	sts	0x06F2, r30	; 0x8006f2 <sync_flags>
    1e4a:	e2 e0       	ldi	r30, 0x02	; 2
    1e4c:	e0 93 36 00 	sts	0x0036, r30	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    1e50:	08 95       	ret

00001e52 <render_tile_line>:
    1e52:	de 01       	movw	r26, r28
    1e54:	4d 91       	ld	r20, X+
    1e56:	5d 91       	ld	r21, X+
    1e58:	67 9f       	mul	r22, r23
    1e5a:	c0 01       	movw	r24, r0
    1e5c:	48 0f       	add	r20, r24
    1e5e:	59 1f       	adc	r21, r25
    1e60:	fa 01       	movw	r30, r20
    1e62:	28 e2       	ldi	r18, 0x28	; 40

00001e64 <mode1_loop>:
    1e64:	05 91       	lpm	r16, Z+
    1e66:	08 b9       	out	0x08, r16	; 8
    1e68:	4d 91       	ld	r20, X+
    1e6a:	05 91       	lpm	r16, Z+
    1e6c:	08 b9       	out	0x08, r16	; 8
    1e6e:	5d 91       	ld	r21, X+
    1e70:	05 91       	lpm	r16, Z+
    1e72:	08 b9       	out	0x08, r16	; 8
    1e74:	00 c0       	rjmp	.+0      	; 0x1e76 <mode1_loop+0x12>
    1e76:	05 91       	lpm	r16, Z+
    1e78:	08 b9       	out	0x08, r16	; 8
    1e7a:	48 0f       	add	r20, r24
    1e7c:	59 1f       	adc	r21, r25
    1e7e:	05 91       	lpm	r16, Z+
    1e80:	08 b9       	out	0x08, r16	; 8
    1e82:	05 91       	lpm	r16, Z+
    1e84:	fa 01       	movw	r30, r20
    1e86:	2a 95       	dec	r18
    1e88:	08 b9       	out	0x08, r16	; 8
    1e8a:	61 f7       	brne	.-40     	; 0x1e64 <mode1_loop>
    1e8c:	c8 95       	lpm
    1e8e:	00 27       	eor	r16, r16
    1e90:	08 b9       	out	0x08, r16	; 8
    1e92:	08 95       	ret

00001e94 <__vector_13>:
    1e94:	0f 92       	push	r0
    1e96:	1f 92       	push	r1
    1e98:	ef 93       	push	r30
    1e9a:	ff 93       	push	r31
    1e9c:	ff b7       	in	r31, 0x3f	; 63
    1e9e:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1ea2:	ff 93       	push	r31
    1ea4:	e2 fd       	sbrc	r30, 2
    1ea6:	04 c0       	rjmp	.+8      	; 0x1eb0 <__vector_13+0x1c>
    1ea8:	e1 fd       	sbrc	r30, 1
    1eaa:	02 c0       	rjmp	.+4      	; 0x1eb0 <__vector_13+0x1c>
    1eac:	00 00       	nop
    1eae:	00 c0       	rjmp	.+0      	; 0x1eb0 <__vector_13+0x1c>
    1eb0:	e0 ff       	sbrs	r30, 0
    1eb2:	00 c0       	rjmp	.+0      	; 0x1eb4 <__vector_13+0x20>
    1eb4:	e0 91 f1 06 	lds	r30, 0x06F1	; 0x8006f1 <sync_pulse>
    1eb8:	ea 95       	dec	r30
    1eba:	e0 93 f1 06 	sts	0x06F1, r30	; 0x8006f1 <sync_pulse>
    1ebe:	f0 91 f0 06 	lds	r31, 0x06F0	; 0x8006f0 <sync_phase>
    1ec2:	f0 fd       	sbrc	r31, 0
    1ec4:	51 c0       	rjmp	.+162    	; 0x1f68 <sync_hsync>
    1ec6:	ec 30       	cpi	r30, 0x0C	; 12
    1ec8:	98 f0       	brcs	.+38     	; 0x1ef0 <sync_eq>
    1eca:	f3 e0       	ldi	r31, 0x03	; 3
    1ecc:	f0 93 89 00 	sts	0x0089, r31	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
    1ed0:	fd e8       	ldi	r31, 0x8D	; 141
    1ed2:	f0 93 88 00 	sts	0x0088, r31	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
    1ed6:	e0 fb       	bst	r30, 0
    1ed8:	28 98       	cbi	0x05, 0	; 5
    1eda:	26 f4       	brtc	.+8      	; 0x1ee4 <sync_pre_eq_no_sound_update>
    1edc:	e1 e0       	ldi	r30, 0x01	; 1
    1ede:	0e 94 0c 11 	call	0x2218	; 0x2218 <update_sound>
    1ee2:	b2 c0       	rjmp	.+356    	; 0x2048 <sync_end>

00001ee4 <sync_pre_eq_no_sound_update>:
    1ee4:	e5 e1       	ldi	r30, 0x15	; 21
    1ee6:	ea 95       	dec	r30
    1ee8:	f1 f7       	brne	.-4      	; 0x1ee6 <sync_pre_eq_no_sound_update+0x2>
    1eea:	00 00       	nop
    1eec:	28 9a       	sbi	0x05, 0	; 5
    1eee:	ac c0       	rjmp	.+344    	; 0x2048 <sync_end>

00001ef0 <sync_eq>:
    1ef0:	e6 30       	cpi	r30, 0x06	; 6
    1ef2:	08 f1       	brcs	.+66     	; 0x1f36 <sync_post_eq>
    1ef4:	00 c0       	rjmp	.+0      	; 0x1ef6 <sync_eq+0x6>
    1ef6:	00 c0       	rjmp	.+0      	; 0x1ef8 <sync_eq+0x8>
    1ef8:	28 98       	cbi	0x05, 0	; 5
    1efa:	e0 fb       	bst	r30, 0
    1efc:	e4 e0       	ldi	r30, 0x04	; 4
    1efe:	16 f4       	brtc	.+4      	; 0x1f04 <sync_eq_skip>
    1f00:	0e 94 0c 11 	call	0x2218	; 0x2218 <update_sound>

00001f04 <sync_eq_skip>:
    1f04:	e4 e0       	ldi	r30, 0x04	; 4
    1f06:	e0 93 36 00 	sts	0x0036, r30	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    1f0a:	e6 e0       	ldi	r30, 0x06	; 6
    1f0c:	e0 93 6f 00 	sts	0x006F, r30	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
    1f10:	9b c0       	rjmp	.+310    	; 0x2048 <sync_end>

00001f12 <__vector_14>:
    1f12:	ef 93       	push	r30
    1f14:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1f18:	e2 fd       	sbrc	r30, 2
    1f1a:	04 c0       	rjmp	.+8      	; 0x1f24 <__vector_14+0x12>
    1f1c:	e1 fd       	sbrc	r30, 1
    1f1e:	02 c0       	rjmp	.+4      	; 0x1f24 <__vector_14+0x12>
    1f20:	00 00       	nop
    1f22:	00 c0       	rjmp	.+0      	; 0x1f24 <__vector_14+0x12>
    1f24:	e0 ff       	sbrs	r30, 0
    1f26:	00 c0       	rjmp	.+0      	; 0x1f28 <__vector_14+0x16>
    1f28:	e2 e0       	ldi	r30, 0x02	; 2
    1f2a:	00 00       	nop
    1f2c:	28 9a       	sbi	0x05, 0	; 5
    1f2e:	e0 93 6f 00 	sts	0x006F, r30	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
    1f32:	ef 91       	pop	r30
    1f34:	18 95       	reti

00001f36 <sync_post_eq>:
    1f36:	00 c0       	rjmp	.+0      	; 0x1f38 <sync_post_eq+0x2>
    1f38:	e0 fb       	bst	r30, 0
    1f3a:	28 98       	cbi	0x05, 0	; 5
    1f3c:	26 f4       	brtc	.+8      	; 0x1f46 <sync_post_eq_no_sound_update>
    1f3e:	e1 e0       	ldi	r30, 0x01	; 1
    1f40:	0e 94 0c 11 	call	0x2218	; 0x2218 <update_sound>
    1f44:	05 c0       	rjmp	.+10     	; 0x1f50 <sync_pre_eq_cont>

00001f46 <sync_post_eq_no_sound_update>:
    1f46:	e5 e1       	ldi	r30, 0x15	; 21
    1f48:	ea 95       	dec	r30
    1f4a:	f1 f7       	brne	.-4      	; 0x1f48 <sync_post_eq_no_sound_update+0x2>
    1f4c:	00 00       	nop
    1f4e:	28 9a       	sbi	0x05, 0	; 5

00001f50 <sync_pre_eq_cont>:
    1f50:	e0 91 f1 06 	lds	r30, 0x06F1	; 0x8006f1 <sync_pulse>
    1f54:	e0 30       	cpi	r30, 0x00	; 0
    1f56:	09 f0       	breq	.+2      	; 0x1f5a <sync_pre_eq_cont+0xa>
    1f58:	77 c0       	rjmp	.+238    	; 0x2048 <sync_end>
    1f5a:	ed ef       	ldi	r30, 0xFD	; 253
    1f5c:	e0 93 f1 06 	sts	0x06F1, r30	; 0x8006f1 <sync_pulse>
    1f60:	e1 e0       	ldi	r30, 0x01	; 1
    1f62:	e0 93 f0 06 	sts	0x06F0, r30	; 0x8006f0 <sync_phase>
    1f66:	70 c0       	rjmp	.+224    	; 0x2048 <sync_end>

00001f68 <sync_hsync>:
    1f68:	e7 e0       	ldi	r30, 0x07	; 7
    1f6a:	e0 93 89 00 	sts	0x0089, r30	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
    1f6e:	eb e1       	ldi	r30, 0x1B	; 27
    1f70:	e0 93 88 00 	sts	0x0088, r30	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
    1f74:	00 c0       	rjmp	.+0      	; 0x1f76 <sync_hsync+0xe>
    1f76:	28 98       	cbi	0x05, 0	; 5
    1f78:	e2 e0       	ldi	r30, 0x02	; 2
    1f7a:	00 c0       	rjmp	.+0      	; 0x1f7c <sync_hsync+0x14>
    1f7c:	0e 94 0c 11 	call	0x2218	; 0x2218 <update_sound>
    1f80:	fd ef       	ldi	r31, 0xFD	; 253
    1f82:	00 90 f7 06 	lds	r0, 0x06F7	; 0x8006f7 <first_render_line>
    1f86:	f0 19       	sub	r31, r0
    1f88:	e0 91 f1 06 	lds	r30, 0x06F1	; 0x8006f1 <sync_pulse>
    1f8c:	ef 17       	cp	r30, r31
    1f8e:	d8 f4       	brcc	.+54     	; 0x1fc6 <no_render>
    1f90:	fd ef       	ldi	r31, 0xFD	; 253
    1f92:	00 90 f7 06 	lds	r0, 0x06F7	; 0x8006f7 <first_render_line>
    1f96:	f0 19       	sub	r31, r0
    1f98:	00 90 f8 06 	lds	r0, 0x06F8	; 0x8006f8 <render_lines_count>
    1f9c:	f0 19       	sub	r31, r0
    1f9e:	ef 17       	cp	r30, r31
    1fa0:	90 f0       	brcs	.+36     	; 0x1fc6 <no_render>
    1fa2:	ed e1       	ldi	r30, 0x1D	; 29
    1fa4:	ff 27       	eor	r31, r31

00001fa6 <push_loop>:
    1fa6:	00 80       	ld	r0, Z
    1fa8:	0f 92       	push	r0
    1faa:	ea 95       	dec	r30
    1fac:	e1 f7       	brne	.-8      	; 0x1fa6 <push_loop>
    1fae:	0f e1       	ldi	r16, 0x1F	; 31
    1fb0:	0a 95       	dec	r16
    1fb2:	f1 f7       	brne	.-4      	; 0x1fb0 <push_loop+0xa>
    1fb4:	00 c0       	rjmp	.+0      	; 0x1fb6 <push_loop+0x10>
    1fb6:	0e 94 f1 0e 	call	0x1de2	; 0x1de2 <sub_video_mode1>
    1fba:	e1 e0       	ldi	r30, 0x01	; 1
    1fbc:	ff 27       	eor	r31, r31

00001fbe <pop_loop>:
    1fbe:	0f 90       	pop	r0
    1fc0:	01 92       	st	Z+, r0
    1fc2:	ee 31       	cpi	r30, 0x1E	; 30
    1fc4:	e0 f3       	brcs	.-8      	; 0x1fbe <pop_loop>

00001fc6 <no_render>:
    1fc6:	e0 91 f1 06 	lds	r30, 0x06F1	; 0x8006f1 <sync_pulse>
    1fca:	e0 30       	cpi	r30, 0x00	; 0
    1fcc:	09 f0       	breq	.+2      	; 0x1fd0 <no_render+0xa>
    1fce:	3c c0       	rjmp	.+120    	; 0x2048 <sync_end>
    1fd0:	2f 93       	push	r18
    1fd2:	3f 93       	push	r19
    1fd4:	4f 93       	push	r20
    1fd6:	5f 93       	push	r21
    1fd8:	6f 93       	push	r22
    1fda:	7f 93       	push	r23
    1fdc:	8f 93       	push	r24
    1fde:	9f 93       	push	r25
    1fe0:	af 93       	push	r26
    1fe2:	bf 93       	push	r27
    1fe4:	78 94       	sei
    1fe6:	11 24       	eor	r1, r1
    1fe8:	ee 27       	eor	r30, r30
    1fea:	e0 93 f0 06 	sts	0x06F0, r30	; 0x8006f0 <sync_phase>
    1fee:	e2 e1       	ldi	r30, 0x12	; 18
    1ff0:	e0 93 f1 06 	sts	0x06F1, r30	; 0x8006f1 <sync_pulse>
    1ff4:	80 91 01 07 	lds	r24, 0x0701	; 0x800701 <vsync_counter>
    1ff8:	90 91 02 07 	lds	r25, 0x0702	; 0x800702 <vsync_counter+0x1>
    1ffc:	01 96       	adiw	r24, 0x01	; 1
    1ffe:	80 93 01 07 	sts	0x0701, r24	; 0x800701 <vsync_counter>
    2002:	90 93 02 07 	sts	0x0702, r25	; 0x800702 <vsync_counter+0x1>
    2006:	e0 91 f3 06 	lds	r30, 0x06F3	; 0x8006f3 <pre_vsync_user_callback>
    200a:	f0 91 f4 06 	lds	r31, 0x06F4	; 0x8006f4 <pre_vsync_user_callback+0x1>
    200e:	e1 15       	cp	r30, r1
    2010:	f1 05       	cpc	r31, r1
    2012:	09 f0       	breq	.+2      	; 0x2016 <no_render+0x50>
    2014:	09 95       	icall
    2016:	0e 94 cd 11 	call	0x239a	; 0x239a <ReadControllers>
    201a:	0e 94 82 1b 	call	0x3704	; 0x3704 <VideoModeVsync>
    201e:	0e 94 36 10 	call	0x206c	; 0x206c <process_music>
    2022:	11 24       	eor	r1, r1
    2024:	e0 91 f5 06 	lds	r30, 0x06F5	; 0x8006f5 <post_vsync_user_callback>
    2028:	f0 91 f6 06 	lds	r31, 0x06F6	; 0x8006f6 <post_vsync_user_callback+0x1>
    202c:	e1 15       	cp	r30, r1
    202e:	f1 05       	cpc	r31, r1
    2030:	09 f0       	breq	.+2      	; 0x2034 <no_render+0x6e>
    2032:	09 95       	icall
    2034:	bf 91       	pop	r27
    2036:	af 91       	pop	r26
    2038:	9f 91       	pop	r25
    203a:	8f 91       	pop	r24
    203c:	7f 91       	pop	r23
    203e:	6f 91       	pop	r22
    2040:	5f 91       	pop	r21
    2042:	4f 91       	pop	r20
    2044:	3f 91       	pop	r19
    2046:	2f 91       	pop	r18

00002048 <sync_end>:
    2048:	ef 91       	pop	r30
    204a:	ef bf       	out	0x3f, r30	; 63
    204c:	ff 91       	pop	r31
    204e:	ef 91       	pop	r30
    2050:	1f 90       	pop	r1
    2052:	0f 90       	pop	r0
    2054:	18 95       	reti

00002056 <hsync_pulse>:
    2056:	28 98       	cbi	0x05, 0	; 5
    2058:	e2 e0       	ldi	r30, 0x02	; 2
    205a:	00 c0       	rjmp	.+0      	; 0x205c <hsync_pulse+0x6>
    205c:	0e 94 0c 11 	call	0x2218	; 0x2218 <update_sound>
    2060:	e0 91 f1 06 	lds	r30, 0x06F1	; 0x8006f1 <sync_pulse>
    2064:	ea 95       	dec	r30
    2066:	e0 93 f1 06 	sts	0x06F1, r30	; 0x8006f1 <sync_pulse>
    206a:	08 95       	ret

0000206c <process_music>:
	andi r25,1
	lsl r24
	or r24,r25

	sts tr4_params,r24	
	ret
    206c:	e0 91 15 09 	lds	r30, 0x0915	; 0x800915 <sound_enabled>
    2070:	e0 fd       	sbrc	r30, 0
    2072:	0e 94 c2 12 	call	0x2584	; 0x2584 <ProcessMusic>
    2076:	00 90 13 09 	lds	r0, 0x0913	; 0x800913 <mix_bank>
    207a:	00 20       	and	r0, r0
    207c:	19 f4       	brne	.+6      	; 0x2084 <set_hi_bank>
    207e:	a5 e0       	ldi	r26, 0x05	; 5
    2080:	b7 e0       	ldi	r27, 0x07	; 7
    2082:	02 c0       	rjmp	.+4      	; 0x2088 <end_set_bank>

00002084 <set_hi_bank>:
    2084:	ab e0       	ldi	r26, 0x0B	; 11
    2086:	b8 e0       	ldi	r27, 0x08	; 8

00002088 <end_set_bank>:
    2088:	21 e0       	ldi	r18, 0x01	; 1
    208a:	02 26       	eor	r0, r18
    208c:	00 92 13 09 	sts	0x0913, r0	; 0x800913 <mix_bank>
    2090:	22 e0       	ldi	r18, 0x02	; 2
    2092:	20 93 14 09 	sts	0x0914, r18	; 0x800914 <mix_block>
    2096:	e0 91 15 09 	lds	r30, 0x0915	; 0x800915 <sound_enabled>
    209a:	e0 ff       	sbrs	r30, 0
    209c:	08 95       	ret
    209e:	2f 92       	push	r2
    20a0:	3f 92       	push	r3
    20a2:	4f 92       	push	r4
    20a4:	5f 92       	push	r5
    20a6:	6f 92       	push	r6
    20a8:	7f 92       	push	r7
    20aa:	8f 92       	push	r8
    20ac:	9f 92       	push	r9
    20ae:	af 92       	push	r10
    20b0:	bf 92       	push	r11
    20b2:	cf 92       	push	r12
    20b4:	df 92       	push	r13
    20b6:	ef 92       	push	r14
    20b8:	ff 92       	push	r15
    20ba:	0f 93       	push	r16
    20bc:	1f 93       	push	r17
    20be:	cf 93       	push	r28
    20c0:	df 93       	push	r29
    20c2:	50 91 28 09 	lds	r21, 0x0928	; 0x800928 <tr4_vol>
    20c6:	60 91 2a 09 	lds	r22, 0x092A	; 0x80092a <tr4_barrel_lo>
    20ca:	70 91 2b 09 	lds	r23, 0x092B	; 0x80092b <tr4_barrel_hi>
    20ce:	80 91 2c 09 	lds	r24, 0x092C	; 0x80092c <tr4_divider>
    20d2:	20 90 17 09 	lds	r2, 0x0917	; 0x800917 <tr1_step_lo>
    20d6:	30 90 18 09 	lds	r3, 0x0918	; 0x800918 <tr1_step_hi>
    20da:	40 90 1a 09 	lds	r4, 0x091A	; 0x80091a <tr1_pos_lo>
    20de:	50 90 1b 09 	lds	r5, 0x091B	; 0x80091b <tr1_pos_hi>
    20e2:	60 90 19 09 	lds	r6, 0x0919	; 0x800919 <tr1_pos_frac>
    20e6:	10 91 16 09 	lds	r17, 0x0916	; 0x800916 <mixer>
    20ea:	70 90 1d 09 	lds	r7, 0x091D	; 0x80091d <tr2_step_lo>
    20ee:	80 90 1e 09 	lds	r8, 0x091E	; 0x80091e <tr2_step_hi>
    20f2:	90 90 1f 09 	lds	r9, 0x091F	; 0x80091f <tr2_pos_frac>
    20f6:	a0 90 20 09 	lds	r10, 0x0920	; 0x800920 <tr2_pos_lo>
    20fa:	b0 90 21 09 	lds	r11, 0x0921	; 0x800921 <tr2_pos_hi>
    20fe:	20 91 1c 09 	lds	r18, 0x091C	; 0x80091c <tr2_vol>
    2102:	c0 90 23 09 	lds	r12, 0x0923	; 0x800923 <tr3_step_lo>
    2106:	d0 90 24 09 	lds	r13, 0x0924	; 0x800924 <tr3_step_hi>
    210a:	e0 90 26 09 	lds	r14, 0x0926	; 0x800926 <tr3_pos_lo>
    210e:	f0 90 27 09 	lds	r15, 0x0927	; 0x800927 <tr3_pos_hi>
    2112:	00 91 25 09 	lds	r16, 0x0925	; 0x800925 <tr3_pos_frac>
    2116:	30 91 22 09 	lds	r19, 0x0922	; 0x800922 <tr3_vol>
    211a:	9f ef       	ldi	r25, 0xFF	; 255

0000211c <mix_loop>:
    211c:	62 0c       	add	r6, r2
    211e:	43 1c       	adc	r4, r3
    2120:	f2 01       	movw	r30, r4
    2122:	44 91       	lpm	r20, Z
    2124:	41 03       	mulsu	r20, r17
    2126:	00 08       	sbc	r0, r0
    2128:	c1 2d       	mov	r28, r1
    212a:	d0 2d       	mov	r29, r0
    212c:	97 0c       	add	r9, r7
    212e:	a8 1c       	adc	r10, r8
    2130:	f5 01       	movw	r30, r10
    2132:	44 91       	lpm	r20, Z
    2134:	42 03       	mulsu	r20, r18
    2136:	00 08       	sbc	r0, r0
    2138:	c1 0d       	add	r28, r1
    213a:	d0 1d       	adc	r29, r0
    213c:	0c 0d       	add	r16, r12
    213e:	ed 1c       	adc	r14, r13
    2140:	f7 01       	movw	r30, r14
    2142:	44 91       	lpm	r20, Z
    2144:	43 03       	mulsu	r20, r19
    2146:	00 08       	sbc	r0, r0
    2148:	c1 0d       	add	r28, r1
    214a:	d0 1d       	adc	r29, r0
    214c:	8a 95       	dec	r24
    214e:	6a f4       	brpl	.+26     	; 0x216a <no_shift>
    2150:	40 91 29 09 	lds	r20, 0x0929	; 0x800929 <tr4_params>
    2154:	84 2f       	mov	r24, r20
    2156:	86 95       	lsr	r24
    2158:	06 2e       	mov	r0, r22
    215a:	06 94       	lsr	r0
    215c:	06 26       	eor	r0, r22
    215e:	00 fa       	bst	r0, 0
    2160:	76 95       	lsr	r23
    2162:	67 95       	ror	r22
    2164:	76 f9       	bld	r23, 6
    2166:	40 ff       	sbrs	r20, 0
    2168:	66 f9       	bld	r22, 6

0000216a <no_shift>:
    216a:	40 e8       	ldi	r20, 0x80	; 128
    216c:	60 fd       	sbrc	r22, 0
    216e:	4f e7       	ldi	r20, 0x7F	; 127
    2170:	45 03       	mulsu	r20, r21
    2172:	00 08       	sbc	r0, r0
    2174:	c1 0d       	add	r28, r1
    2176:	d0 1d       	adc	r29, r0
    2178:	00 24       	eor	r0, r0
    217a:	c0 38       	cpi	r28, 0x80	; 128
    217c:	d0 05       	cpc	r29, r0
    217e:	0c f0       	brlt	.+2      	; 0x2182 <no_shift+0x18>
    2180:	cf e7       	ldi	r28, 0x7F	; 127
    2182:	0a 94       	dec	r0
    2184:	c0 38       	cpi	r28, 0x80	; 128
    2186:	d0 05       	cpc	r29, r0
    2188:	0c f4       	brge	.+2      	; 0x218c <no_shift+0x22>
    218a:	c0 e8       	ldi	r28, 0x80	; 128
    218c:	c0 58       	subi	r28, 0x80	; 128
    218e:	cd 93       	st	X+, r28
    2190:	9a 95       	dec	r25
    2192:	09 f0       	breq	.+2      	; 0x2196 <no_shift+0x2c>
    2194:	c3 cf       	rjmp	.-122    	; 0x211c <mix_loop>
    2196:	40 91 14 09 	lds	r20, 0x0914	; 0x800914 <mix_block>
    219a:	4a 95       	dec	r20
    219c:	40 93 14 09 	sts	0x0914, r20	; 0x800914 <mix_block>
    21a0:	97 e0       	ldi	r25, 0x07	; 7
    21a2:	09 f0       	breq	.+2      	; 0x21a6 <no_shift+0x3c>
    21a4:	bb cf       	rjmp	.-138    	; 0x211c <mix_loop>
    21a6:	60 92 19 09 	sts	0x0919, r6	; 0x800919 <tr1_pos_frac>
    21aa:	40 92 1a 09 	sts	0x091A, r4	; 0x80091a <tr1_pos_lo>
    21ae:	90 92 1f 09 	sts	0x091F, r9	; 0x80091f <tr2_pos_frac>
    21b2:	a0 92 20 09 	sts	0x0920, r10	; 0x800920 <tr2_pos_lo>
    21b6:	00 93 25 09 	sts	0x0925, r16	; 0x800925 <tr3_pos_frac>
    21ba:	e0 92 26 09 	sts	0x0926, r14	; 0x800926 <tr3_pos_lo>
    21be:	60 93 2a 09 	sts	0x092A, r22	; 0x80092a <tr4_barrel_lo>
    21c2:	70 93 2b 09 	sts	0x092B, r23	; 0x80092b <tr4_barrel_hi>
    21c6:	80 93 2c 09 	sts	0x092C, r24	; 0x80092c <tr4_divider>
    21ca:	df 91       	pop	r29
    21cc:	cf 91       	pop	r28
    21ce:	1f 91       	pop	r17
    21d0:	0f 91       	pop	r16
    21d2:	ff 90       	pop	r15
    21d4:	ef 90       	pop	r14
    21d6:	df 90       	pop	r13
    21d8:	cf 90       	pop	r12
    21da:	bf 90       	pop	r11
    21dc:	af 90       	pop	r10
    21de:	9f 90       	pop	r9
    21e0:	8f 90       	pop	r8
    21e2:	7f 90       	pop	r7
    21e4:	6f 90       	pop	r6
    21e6:	5f 90       	pop	r5
    21e8:	4f 90       	pop	r4
    21ea:	3f 90       	pop	r3
    21ec:	2f 90       	pop	r2
    21ee:	08 95       	ret

000021f0 <update_sound_buffer_fast>:
    21f0:	e0 91 11 09 	lds	r30, 0x0911	; 0x800911 <mix_pos>
    21f4:	f0 91 12 09 	lds	r31, 0x0912	; 0x800912 <mix_pos+0x1>
    21f8:	01 91       	ld	r16, Z+
    21fa:	00 00       	nop
    21fc:	00 93 b3 00 	sts	0x00B3, r16	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
    2200:	09 e0       	ldi	r16, 0x09	; 9
    2202:	e1 31       	cpi	r30, 0x11	; 17
    2204:	f0 07       	cpc	r31, r16
    2206:	05 e0       	ldi	r16, 0x05	; 5
    2208:	17 e0       	ldi	r17, 0x07	; 7
    220a:	08 f0       	brcs	.+2      	; 0x220e <update_sound_buffer_fast+0x1e>
    220c:	f8 01       	movw	r30, r16
    220e:	e0 93 11 09 	sts	0x0911, r30	; 0x800911 <mix_pos>
    2212:	f0 93 12 09 	sts	0x0912, r31	; 0x800912 <mix_pos+0x1>
    2216:	08 95       	ret

00002218 <update_sound>:
    2218:	0f 93       	push	r16
    221a:	1f 93       	push	r17
    221c:	2f 93       	push	r18
    221e:	ef 93       	push	r30
    2220:	e0 91 11 09 	lds	r30, 0x0911	; 0x800911 <mix_pos>
    2224:	f0 91 12 09 	lds	r31, 0x0912	; 0x800912 <mix_pos+0x1>
    2228:	01 91       	ld	r16, Z+
    222a:	00 93 b3 00 	sts	0x00B3, r16	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
    222e:	09 e0       	ldi	r16, 0x09	; 9
    2230:	e1 31       	cpi	r30, 0x11	; 17
    2232:	f0 07       	cpc	r31, r16
    2234:	05 e0       	ldi	r16, 0x05	; 5
    2236:	17 e0       	ldi	r17, 0x07	; 7
    2238:	08 f0       	brcs	.+2      	; 0x223c <update_sound+0x24>
    223a:	f8 01       	movw	r30, r16
    223c:	e0 93 11 09 	sts	0x0911, r30	; 0x800911 <mix_pos>
    2240:	f0 93 12 09 	sts	0x0912, r31	; 0x800912 <mix_pos+0x1>
    2244:	e8 e0       	ldi	r30, 0x08	; 8
    2246:	ea 95       	dec	r30
    2248:	f1 f7       	brne	.-4      	; 0x2246 <update_sound+0x2e>
    224a:	ef 91       	pop	r30
    224c:	2f 91       	pop	r18
    224e:	1f 91       	pop	r17
    2250:	0f 91       	pop	r16
    2252:	e0 fd       	sbrc	r30, 0
    2254:	28 9a       	sbi	0x05, 0	; 5
    2256:	e0 ff       	sbrs	r30, 0
    2258:	01 c0       	rjmp	.+2      	; 0x225c <update_sound+0x44>
    225a:	08 95       	ret
    225c:	f4 e1       	ldi	r31, 0x14	; 20
    225e:	fa 95       	dec	r31
    2260:	f1 f7       	brne	.-4      	; 0x225e <update_sound+0x46>
    2262:	00 c0       	rjmp	.+0      	; 0x2264 <update_sound+0x4c>
    2264:	e1 fd       	sbrc	r30, 1
    2266:	28 9a       	sbi	0x05, 0	; 5
    2268:	e1 ff       	sbrs	r30, 1
    226a:	00 c0       	rjmp	.+0      	; 0x226c <update_sound+0x54>
    226c:	08 95       	ret

0000226e <ClearVram>:
    226e:	ea ee       	ldi	r30, 0xEA	; 234
    2270:	f2 e0       	ldi	r31, 0x02	; 2
    2272:	a8 e1       	ldi	r26, 0x18	; 24
    2274:	b1 e0       	ldi	r27, 0x01	; 1
    2276:	60 91 ec 06 	lds	r22, 0x06EC	; 0x8006ec <font_table_lo>
    227a:	70 91 ed 06 	lds	r23, 0x06ED	; 0x8006ed <font_table_hi>

0000227e <fill_vram_loop>:
    227e:	6d 93       	st	X+, r22
    2280:	7d 93       	st	X+, r23
    2282:	31 97       	sbiw	r30, 0x01	; 1
    2284:	e1 f7       	brne	.-8      	; 0x227e <fill_vram_loop>
    2286:	11 24       	eor	r1, r1
    2288:	08 95       	ret

0000228a <SetFont>:
    228a:	99 27       	eor	r25, r25
    228c:	55 27       	eor	r21, r21
    228e:	28 e2       	ldi	r18, 0x28	; 40
    2290:	22 0f       	add	r18, r18
    2292:	62 9f       	mul	r22, r18
    2294:	88 0f       	add	r24, r24
    2296:	08 0e       	add	r0, r24
    2298:	19 1e       	adc	r1, r25
    229a:	a8 e1       	ldi	r26, 0x18	; 24
    229c:	b1 e0       	ldi	r27, 0x01	; 1
    229e:	a0 0d       	add	r26, r0
    22a0:	b1 1d       	adc	r27, r1
    22a2:	60 91 ec 06 	lds	r22, 0x06EC	; 0x8006ec <font_table_lo>
    22a6:	70 91 ed 06 	lds	r23, 0x06ED	; 0x8006ed <font_table_hi>
    22aa:	28 e4       	ldi	r18, 0x48	; 72
    22ac:	42 9f       	mul	r20, r18
    22ae:	60 0d       	add	r22, r0
    22b0:	71 1d       	adc	r23, r1
    22b2:	6d 93       	st	X+, r22
    22b4:	7c 93       	st	X, r23
    22b6:	11 24       	eor	r1, r1
    22b8:	08 95       	ret

000022ba <SetFontTable>:
    22ba:	80 93 ec 06 	sts	0x06EC, r24	; 0x8006ec <font_table_lo>
    22be:	90 93 ed 06 	sts	0x06ED, r25	; 0x8006ed <font_table_hi>
    22c2:	08 95       	ret

000022c4 <GetVsyncFlag>:
    22c4:	80 91 f2 06 	lds	r24, 0x06F2	; 0x8006f2 <sync_flags>
    22c8:	81 70       	andi	r24, 0x01	; 1
    22ca:	08 95       	ret

000022cc <ClearVsyncFlag>:
    22cc:	20 91 f2 06 	lds	r18, 0x06F2	; 0x8006f2 <sync_flags>
    22d0:	2e 7f       	andi	r18, 0xFE	; 254
    22d2:	20 93 f2 06 	sts	0x06F2, r18	; 0x8006f2 <sync_flags>
    22d6:	08 95       	ret

000022d8 <ReadJoypad>:
    22d8:	88 23       	and	r24, r24
    22da:	29 f4       	brne	.+10     	; 0x22e6 <rj_p2>
    22dc:	80 91 f9 06 	lds	r24, 0x06F9	; 0x8006f9 <joypad1_status_lo>
    22e0:	90 91 fa 06 	lds	r25, 0x06FA	; 0x8006fa <joypad1_status_lo+0x1>
    22e4:	08 95       	ret

000022e6 <rj_p2>:
    22e6:	80 91 fd 06 	lds	r24, 0x06FD	; 0x8006fd <joypad2_status_lo>
    22ea:	90 91 fe 06 	lds	r25, 0x06FE	; 0x8006fe <joypad2_status_lo+0x1>
    22ee:	08 95       	ret

000022f0 <SoftReset>:
    22f0:	e0 e6       	ldi	r30, 0x60	; 96
    22f2:	f0 e0       	ldi	r31, 0x00	; 0
    22f4:	80 81       	ld	r24, Z
    22f6:	83 fd       	sbrc	r24, 3
    22f8:	08 95       	ret
    22fa:	88 e1       	ldi	r24, 0x18	; 24
    22fc:	98 e0       	ldi	r25, 0x08	; 8
    22fe:	f8 94       	cli
    2300:	80 83       	st	Z, r24
    2302:	90 83       	st	Z, r25
    2304:	78 94       	sei
    2306:	ff cf       	rjmp	.-2      	; 0x2306 <SoftReset+0x16>

00002308 <WriteEeprom>:
;****************************

.section .text.WriteEeprom
WriteEeprom:
   ; Wait for completion of previous write
   sbic _SFR_IO_ADDR(EECR),EEPE
    2308:	f9 99       	sbic	0x1f, 1	; 31
   rjmp WriteEeprom
    230a:	fe cf       	rjmp	.-4      	; 0x2308 <WriteEeprom>
   ; Set up address (r25:r24) in address register
   out _SFR_IO_ADDR(EEARH), r25
    230c:	92 bd       	out	0x22, r25	; 34
   out _SFR_IO_ADDR(EEARL), r24
    230e:	81 bd       	out	0x21, r24	; 33
   ; Write data (r22) to Data Register
   out _SFR_IO_ADDR(EEDR),r22
    2310:	60 bd       	out	0x20, r22	; 32
   cli
    2312:	f8 94       	cli
   ; Write logical one to EEMPE
   sbi _SFR_IO_ADDR(EECR),EEMPE
    2314:	fa 9a       	sbi	0x1f, 2	; 31
   ; Start eeprom write by setting EEPE
   sbi _SFR_IO_ADDR(EECR),EEPE
    2316:	f9 9a       	sbi	0x1f, 1	; 31
   sei
    2318:	78 94       	sei
   ret
    231a:	08 95       	ret

0000231c <ReadEeprom>:
; r24 - value read
;****************************
.section .text.ReadEeprom
ReadEeprom:
   ; Wait for completion of previous write
   sbic _SFR_IO_ADDR(EECR),EEPE
    231c:	f9 99       	sbic	0x1f, 1	; 31
   rjmp ReadEeprom
    231e:	fe cf       	rjmp	.-4      	; 0x231c <ReadEeprom>
   ; Set up address (r25:r24) in address register
   out _SFR_IO_ADDR(EEARH), r25
    2320:	92 bd       	out	0x22, r25	; 34
   out _SFR_IO_ADDR(EEARL), r24
    2322:	81 bd       	out	0x21, r24	; 33
   ; Start eeprom read by writing EERE
   cli
    2324:	f8 94       	cli
   sbi _SFR_IO_ADDR(EECR),EERE
    2326:	f8 9a       	sbi	0x1f, 0	; 31
   ; Read data from Data Register
   in r24,_SFR_IO_ADDR(EEDR)
    2328:	80 b5       	in	r24, 0x20	; 32
   sei
    232a:	78 94       	sei
   ret
    232c:	08 95       	ret

0000232e <ReadButtons>:
    232e:	12 9a       	sbi	0x02, 2	; 2
    2330:	c8 95       	lpm
    2332:	c8 95       	lpm
    2334:	c8 95       	lpm
    2336:	c8 95       	lpm
    2338:	12 98       	cbi	0x02, 2	; 2
    233a:	40 e1       	ldi	r20, 0x10	; 16
    233c:	80 e0       	ldi	r24, 0x00	; 0
    233e:	90 e0       	ldi	r25, 0x00	; 0
    2340:	20 e0       	ldi	r18, 0x00	; 0
    2342:	30 e0       	ldi	r19, 0x00	; 0
    2344:	36 95       	lsr	r19
    2346:	27 95       	ror	r18
    2348:	96 95       	lsr	r25
    234a:	87 95       	ror	r24
    234c:	c8 95       	lpm
    234e:	c8 95       	lpm
    2350:	c8 95       	lpm
    2352:	c8 95       	lpm
    2354:	13 98       	cbi	0x02, 3	; 2
    2356:	00 9b       	sbis	0x00, 0	; 0
    2358:	30 68       	ori	r19, 0x80	; 128
    235a:	01 9b       	sbis	0x00, 1	; 0
    235c:	90 68       	ori	r25, 0x80	; 128
    235e:	13 9a       	sbi	0x02, 3	; 2
    2360:	c8 95       	lpm
    2362:	c8 95       	lpm
    2364:	c8 95       	lpm
    2366:	c8 95       	lpm
    2368:	41 50       	subi	r20, 0x01	; 1
    236a:	61 f7       	brne	.-40     	; 0x2344 <ReadButtons+0x16>
    236c:	30 93 fa 06 	sts	0x06FA, r19	; 0x8006fa <joypad1_status_lo+0x1>
    2370:	20 93 f9 06 	sts	0x06F9, r18	; 0x8006f9 <joypad1_status_lo>
    2374:	90 93 fe 06 	sts	0x06FE, r25	; 0x8006fe <joypad2_status_lo+0x1>
    2378:	80 93 fd 06 	sts	0x06FD, r24	; 0x8006fd <joypad2_status_lo>
    237c:	80 91 f9 06 	lds	r24, 0x06F9	; 0x8006f9 <joypad1_status_lo>
    2380:	90 91 fa 06 	lds	r25, 0x06FA	; 0x8006fa <joypad1_status_lo+0x1>
    2384:	0f 97       	sbiw	r24, 0x0f	; 15
    2386:	31 f0       	breq	.+12     	; 0x2394 <ReadButtons+0x66>
    2388:	80 91 fd 06 	lds	r24, 0x06FD	; 0x8006fd <joypad2_status_lo>
    238c:	90 91 fe 06 	lds	r25, 0x06FE	; 0x8006fe <joypad2_status_lo+0x1>
    2390:	0f 97       	sbiw	r24, 0x0f	; 15
    2392:	11 f4       	brne	.+4      	; 0x2398 <ReadButtons+0x6a>
    2394:	0c 94 78 11 	jmp	0x22f0	; 0x22f0 <SoftReset>
    2398:	08 95       	ret

0000239a <ReadControllers>:
    239a:	10 92 4f 09 	sts	0x094F, r1	; 0x80094f <joypadsConnectionStatus>
    239e:	00 99       	sbic	0x00, 0	; 0
    23a0:	03 c0       	rjmp	.+6      	; 0x23a8 <ReadControllers+0xe>
    23a2:	81 e0       	ldi	r24, 0x01	; 1
    23a4:	80 93 4f 09 	sts	0x094F, r24	; 0x80094f <joypadsConnectionStatus>
    23a8:	01 99       	sbic	0x00, 1	; 0
    23aa:	05 c0       	rjmp	.+10     	; 0x23b6 <ReadControllers+0x1c>
    23ac:	80 91 4f 09 	lds	r24, 0x094F	; 0x80094f <joypadsConnectionStatus>
    23b0:	82 60       	ori	r24, 0x02	; 2
    23b2:	80 93 4f 09 	sts	0x094F, r24	; 0x80094f <joypadsConnectionStatus>
    23b6:	0c 94 97 11 	jmp	0x232e	; 0x232e <ReadButtons>

000023ba <FormatEeprom>:
    23ba:	cf 93       	push	r28
    23bc:	df 93       	push	r29
    23be:	c0 e0       	ldi	r28, 0x00	; 0
    23c0:	d0 e0       	ldi	r29, 0x00	; 0
    23c2:	fe 01       	movw	r30, r28
    23c4:	e0 59       	subi	r30, 0x90	; 144
    23c6:	ff 4f       	sbci	r31, 0xFF	; 255
    23c8:	64 91       	lpm	r22, Z
    23ca:	ce 01       	movw	r24, r28
    23cc:	0e 94 84 11 	call	0x2308	; 0x2308 <WriteEeprom>
    23d0:	21 96       	adiw	r28, 0x01	; 1
    23d2:	c0 32       	cpi	r28, 0x20	; 32
    23d4:	d1 05       	cpc	r29, r1
    23d6:	a9 f7       	brne	.-22     	; 0x23c2 <FormatEeprom+0x8>
    23d8:	c0 e2       	ldi	r28, 0x20	; 32
    23da:	d0 e0       	ldi	r29, 0x00	; 0
    23dc:	6f ef       	ldi	r22, 0xFF	; 255
    23de:	ce 01       	movw	r24, r28
    23e0:	0e 94 84 11 	call	0x2308	; 0x2308 <WriteEeprom>
    23e4:	6f ef       	ldi	r22, 0xFF	; 255
    23e6:	ce 01       	movw	r24, r28
    23e8:	01 96       	adiw	r24, 0x01	; 1
    23ea:	0e 94 84 11 	call	0x2308	; 0x2308 <WriteEeprom>
    23ee:	a0 96       	adiw	r28, 0x20	; 32
    23f0:	c1 15       	cp	r28, r1
    23f2:	88 e0       	ldi	r24, 0x08	; 8
    23f4:	d8 07       	cpc	r29, r24
    23f6:	91 f7       	brne	.-28     	; 0x23dc <FormatEeprom+0x22>
    23f8:	df 91       	pop	r29
    23fa:	cf 91       	pop	r28
    23fc:	08 95       	ret

000023fe <isEepromFormatted>:
	
//returns true if the EEPROM has been setup to work with the kernel.
bool isEepromFormatted(){
    23fe:	cf 93       	push	r28
	unsigned id;
	id=ReadEeprom(0)+(ReadEeprom(1)<<8);
    2400:	80 e0       	ldi	r24, 0x00	; 0
    2402:	90 e0       	ldi	r25, 0x00	; 0
    2404:	0e 94 8e 11 	call	0x231c	; 0x231c <ReadEeprom>
    2408:	c8 2f       	mov	r28, r24
    240a:	81 e0       	ldi	r24, 0x01	; 1
    240c:	90 e0       	ldi	r25, 0x00	; 0
    240e:	0e 94 8e 11 	call	0x231c	; 0x231c <ReadEeprom>
	return (id==EEPROM_SIGNATURE);
    2412:	28 2f       	mov	r18, r24
    2414:	30 e0       	ldi	r19, 0x00	; 0
    2416:	32 2f       	mov	r19, r18
    2418:	22 27       	eor	r18, r18
    241a:	2c 0f       	add	r18, r28
    241c:	31 1d       	adc	r19, r1
    241e:	81 e0       	ldi	r24, 0x01	; 1
    2420:	2a 35       	cpi	r18, 0x5A	; 90
    2422:	35 45       	sbci	r19, 0x55	; 85
    2424:	09 f0       	breq	.+2      	; 0x2428 <isEepromFormatted+0x2a>
    2426:	80 e0       	ldi	r24, 0x00	; 0
}
    2428:	cf 91       	pop	r28
    242a:	08 95       	ret

0000242c <PatchCommand00>:
	Track* track=&tracks[channel];
	track->flags=TRACK_FLAGS_PRIORITY; //priority=1;
	track->patchCommandStreamPos = NULL;
	TriggerCommon(track,patch,volume,80);
	track->flags|=TRACK_FLAGS_PLAYING;
}
    242c:	fc 01       	movw	r30, r24
    242e:	67 87       	std	Z+15, r22	; 0x0f
    2430:	08 95       	ret

00002432 <PatchCommand01>:
    2432:	e6 e1       	ldi	r30, 0x16	; 22
    2434:	f9 e0       	ldi	r31, 0x09	; 9
    2436:	81 e0       	ldi	r24, 0x01	; 1
    2438:	91 e0       	ldi	r25, 0x01	; 1
    243a:	95 8b       	std	Z+21, r25	; 0x15
    243c:	84 8b       	std	Z+20, r24	; 0x14
    243e:	63 8b       	std	Z+19, r22	; 0x13
    2440:	08 95       	ret

00002442 <PatchCommand02>:
    2442:	fc 01       	movw	r30, r24
    2444:	82 81       	ldd	r24, Z+2	; 0x02
    2446:	0c 94 66 15 	jmp	0x2acc	; 0x2acc <SetMixerWave>

0000244a <PatchCommand03>:
    244a:	fc 01       	movw	r30, r24
    244c:	91 81       	ldd	r25, Z+1	; 0x01
    244e:	69 0f       	add	r22, r25
    2450:	61 83       	std	Z+1, r22	; 0x01
    2452:	82 81       	ldd	r24, Z+2	; 0x02
    2454:	0c 94 4f 15 	jmp	0x2a9e	; 0x2a9e <SetMixerNote>

00002458 <PatchCommand04>:
    2458:	fc 01       	movw	r30, r24
    245a:	91 81       	ldd	r25, Z+1	; 0x01
    245c:	96 1b       	sub	r25, r22
    245e:	69 2f       	mov	r22, r25
    2460:	91 83       	std	Z+1, r25	; 0x01
    2462:	82 81       	ldd	r24, Z+2	; 0x02
    2464:	0c 94 4f 15 	jmp	0x2a9e	; 0x2a9e <SetMixerNote>

00002468 <PatchCommand05>:
    2468:	fc 01       	movw	r30, r24
    246a:	90 81       	ld	r25, Z
    246c:	9f 75       	andi	r25, 0x5F	; 95
    246e:	90 83       	st	Z, r25
    2470:	08 95       	ret

00002472 <PatchCommand06>:
    2472:	fc 01       	movw	r30, r24
    2474:	90 81       	ld	r25, Z
    2476:	90 64       	ori	r25, 0x40	; 64
    2478:	90 83       	st	Z, r25
    247a:	08 95       	ret

0000247c <PatchCommand07>:
    247c:	fc 01       	movw	r30, r24
    247e:	66 87       	std	Z+14, r22	; 0x0e
    2480:	08 95       	ret

00002482 <PatchCommand08>:
    2482:	1f 93       	push	r17
    2484:	cf 93       	push	r28
    2486:	df 93       	push	r29
    2488:	ec 01       	movw	r28, r24
    248a:	16 2f       	mov	r17, r22
    248c:	8a 81       	ldd	r24, Y+2	; 0x02
    248e:	0e 94 4f 15 	call	0x2a9e	; 0x2a9e <SetMixerNote>
    2492:	19 83       	std	Y+1, r17	; 0x01
    2494:	88 81       	ld	r24, Y
    2496:	87 7f       	andi	r24, 0xF7	; 247
    2498:	88 83       	st	Y, r24
    249a:	df 91       	pop	r29
    249c:	cf 91       	pop	r28
    249e:	1f 91       	pop	r17
    24a0:	08 95       	ret

000024a2 <PatchCommand09>:
    24a2:	fc 01       	movw	r30, r24
    24a4:	62 87       	std	Z+10, r22	; 0x0a
    24a6:	08 95       	ret

000024a8 <PatchCommand10>:
    24a8:	fc 01       	movw	r30, r24
    24aa:	63 87       	std	Z+11, r22	; 0x0b
    24ac:	08 95       	ret

000024ae <PatchCommand11>:
    24ae:	cf 93       	push	r28
    24b0:	df 93       	push	r29
    24b2:	ec 01       	movw	r28, r24
    24b4:	26 2f       	mov	r18, r22
    24b6:	89 81       	ldd	r24, Y+1	; 0x01
    24b8:	90 e0       	ldi	r25, 0x00	; 0
    24ba:	fc 01       	movw	r30, r24
    24bc:	ee 0f       	add	r30, r30
    24be:	ff 1f       	adc	r31, r31
    24c0:	ea 5f       	subi	r30, 0xFA	; 250
    24c2:	f4 4d       	sbci	r31, 0xD4	; 212
    24c4:	45 91       	lpm	r20, Z+
    24c6:	54 91       	lpm	r21, Z
    24c8:	fc 01       	movw	r30, r24
    24ca:	e6 0f       	add	r30, r22
    24cc:	f1 1d       	adc	r31, r1
    24ce:	67 fd       	sbrc	r22, 7
    24d0:	fa 95       	dec	r31
    24d2:	ee 0f       	add	r30, r30
    24d4:	ff 1f       	adc	r31, r31
    24d6:	ea 5f       	subi	r30, 0xFA	; 250
    24d8:	f4 4d       	sbci	r31, 0xD4	; 212
    24da:	85 91       	lpm	r24, Z+
    24dc:	94 91       	lpm	r25, Z
    24de:	84 1b       	sub	r24, r20
    24e0:	95 0b       	sbc	r25, r21
    24e2:	68 85       	ldd	r22, Y+8	; 0x08
    24e4:	70 e0       	ldi	r23, 0x00	; 0
    24e6:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <__divmodhi4>
    24ea:	61 15       	cp	r22, r1
    24ec:	71 05       	cpc	r23, r1
    24ee:	11 f4       	brne	.+4      	; 0x24f4 <PatchCommand11+0x46>
    24f0:	61 e0       	ldi	r22, 0x01	; 1
    24f2:	70 e0       	ldi	r23, 0x00	; 0
    24f4:	ea 81       	ldd	r30, Y+2	; 0x02
    24f6:	86 e0       	ldi	r24, 0x06	; 6
    24f8:	e8 9f       	mul	r30, r24
    24fa:	f0 01       	movw	r30, r0
    24fc:	11 24       	eor	r1, r1
    24fe:	ea 5e       	subi	r30, 0xEA	; 234
    2500:	f6 4f       	sbci	r31, 0xF6	; 246
    2502:	81 81       	ldd	r24, Z+1	; 0x01
    2504:	92 81       	ldd	r25, Z+2	; 0x02
    2506:	86 0f       	add	r24, r22
    2508:	97 1f       	adc	r25, r23
    250a:	92 83       	std	Z+2, r25	; 0x02
    250c:	81 83       	std	Z+1, r24	; 0x01
    250e:	7e 83       	std	Y+6, r23	; 0x06
    2510:	6d 83       	std	Y+5, r22	; 0x05
    2512:	88 81       	ld	r24, Y
    2514:	88 60       	ori	r24, 0x08	; 8
    2516:	88 83       	st	Y, r24
    2518:	89 81       	ldd	r24, Y+1	; 0x01
    251a:	28 0f       	add	r18, r24
    251c:	2f 83       	std	Y+7, r18	; 0x07
    251e:	df 91       	pop	r29
    2520:	cf 91       	pop	r28
    2522:	08 95       	ret

00002524 <PatchCommand12>:
    2524:	fc 01       	movw	r30, r24
    2526:	60 87       	std	Z+8, r22	; 0x08
    2528:	08 95       	ret

0000252a <PatchCommand13>:
    252a:	fc 01       	movw	r30, r24
    252c:	64 83       	std	Z+4, r22	; 0x04
    252e:	08 95       	ret

00002530 <PatchCommand14>:
    2530:	dc 01       	movw	r26, r24
    2532:	14 96       	adiw	r26, 0x04	; 4
    2534:	8c 91       	ld	r24, X
    2536:	14 97       	sbiw	r26, 0x04	; 4
    2538:	88 23       	and	r24, r24
    253a:	19 f1       	breq	.+70     	; 0x2582 <PatchCommand14+0x52>
    253c:	55 96       	adiw	r26, 0x15	; 21
    253e:	2d 91       	ld	r18, X+
    2540:	3c 91       	ld	r19, X
    2542:	56 97       	sbiw	r26, 0x16	; 22
    2544:	66 23       	and	r22, r22
    2546:	79 f0       	breq	.+30     	; 0x2566 <PatchCommand14+0x36>
    2548:	06 2e       	mov	r0, r22
    254a:	00 0c       	add	r0, r0
    254c:	77 0b       	sbc	r23, r23
    254e:	6f 5f       	subi	r22, 0xFF	; 255
    2550:	7f 4f       	sbci	r23, 0xFF	; 255
    2552:	ab 01       	movw	r20, r22
    2554:	44 0f       	add	r20, r20
    2556:	55 1f       	adc	r21, r21
    2558:	64 0f       	add	r22, r20
    255a:	75 1f       	adc	r23, r21
    255c:	26 1b       	sub	r18, r22
    255e:	37 0b       	sbc	r19, r23
    2560:	09 c0       	rjmp	.+18     	; 0x2574 <PatchCommand14+0x44>
    2562:	ef 3f       	cpi	r30, 0xFF	; 255
    2564:	39 f0       	breq	.+14     	; 0x2574 <PatchCommand14+0x44>
    2566:	23 50       	subi	r18, 0x03	; 3
    2568:	31 09       	sbc	r19, r1
    256a:	f9 01       	movw	r30, r18
    256c:	32 97       	sbiw	r30, 0x02	; 2
    256e:	e4 91       	lpm	r30, Z
    2570:	ed 30       	cpi	r30, 0x0D	; 13
    2572:	b9 f7       	brne	.-18     	; 0x2562 <PatchCommand14+0x32>
    2574:	56 96       	adiw	r26, 0x16	; 22
    2576:	3c 93       	st	X, r19
    2578:	2e 93       	st	-X, r18
    257a:	55 97       	sbiw	r26, 0x15	; 21
    257c:	81 50       	subi	r24, 0x01	; 1
    257e:	14 96       	adiw	r26, 0x04	; 4
    2580:	8c 93       	st	X, r24
    2582:	08 95       	ret

00002584 <ProcessMusic>:
    2584:	ef 92       	push	r14
    2586:	ff 92       	push	r15
    2588:	0f 93       	push	r16
    258a:	1f 93       	push	r17
    258c:	cf 93       	push	r28
    258e:	df 93       	push	r29
    2590:	c2 e5       	ldi	r28, 0x52	; 82
    2592:	d9 e0       	ldi	r29, 0x09	; 9
    2594:	06 e1       	ldi	r16, 0x16	; 22
    2596:	19 e0       	ldi	r17, 0x09	; 9
    2598:	98 01       	movw	r18, r16
    259a:	de 01       	movw	r26, r28
    259c:	1f 96       	adiw	r26, 0x0f	; 15
    259e:	8c 91       	ld	r24, X
    25a0:	1f 97       	sbiw	r26, 0x0f	; 15
    25a2:	88 23       	and	r24, r24
    25a4:	a9 f0       	breq	.+42     	; 0x25d0 <ProcessMusic+0x4c>
    25a6:	1e 96       	adiw	r26, 0x0e	; 14
    25a8:	4c 91       	ld	r20, X
    25aa:	1e 97       	sbiw	r26, 0x0e	; 14
    25ac:	08 2e       	mov	r0, r24
    25ae:	00 0c       	add	r0, r0
    25b0:	99 0b       	sbc	r25, r25
    25b2:	84 0f       	add	r24, r20
    25b4:	91 1d       	adc	r25, r1
    25b6:	8f 3f       	cpi	r24, 0xFF	; 255
    25b8:	91 05       	cpc	r25, r1
    25ba:	19 f0       	breq	.+6      	; 0x25c2 <ProcessMusic+0x3e>
    25bc:	14 f0       	brlt	.+4      	; 0x25c2 <ProcessMusic+0x3e>
    25be:	8f ef       	ldi	r24, 0xFF	; 255
    25c0:	90 e0       	ldi	r25, 0x00	; 0
    25c2:	97 ff       	sbrs	r25, 7
    25c4:	02 c0       	rjmp	.+4      	; 0x25ca <ProcessMusic+0x46>
    25c6:	80 e0       	ldi	r24, 0x00	; 0
    25c8:	90 e0       	ldi	r25, 0x00	; 0
    25ca:	1e 96       	adiw	r26, 0x0e	; 14
    25cc:	8c 93       	st	X, r24
    25ce:	1e 97       	sbiw	r26, 0x0e	; 14
    25d0:	6c 91       	ld	r22, X
    25d2:	63 ff       	sbrs	r22, 3
    25d4:	26 c0       	rjmp	.+76     	; 0x2622 <ProcessMusic+0x9e>
    25d6:	15 96       	adiw	r26, 0x05	; 5
    25d8:	4d 91       	ld	r20, X+
    25da:	5c 91       	ld	r21, X
    25dc:	16 97       	sbiw	r26, 0x06	; 6
    25de:	f9 01       	movw	r30, r18
    25e0:	81 81       	ldd	r24, Z+1	; 0x01
    25e2:	92 81       	ldd	r25, Z+2	; 0x02
    25e4:	84 0f       	add	r24, r20
    25e6:	95 1f       	adc	r25, r21
    25e8:	92 83       	std	Z+2, r25	; 0x02
    25ea:	81 83       	std	Z+1, r24	; 0x01
    25ec:	17 96       	adiw	r26, 0x07	; 7
    25ee:	ec 91       	ld	r30, X
    25f0:	17 97       	sbiw	r26, 0x07	; 7
    25f2:	f0 e0       	ldi	r31, 0x00	; 0
    25f4:	ee 0f       	add	r30, r30
    25f6:	ff 1f       	adc	r31, r31
    25f8:	ea 5f       	subi	r30, 0xFA	; 250
    25fa:	f4 4d       	sbci	r31, 0xD4	; 212
    25fc:	e5 90       	lpm	r14, Z+
    25fe:	f4 90       	lpm	r15, Z
    2600:	14 16       	cp	r1, r20
    2602:	15 06       	cpc	r1, r21
    2604:	24 f4       	brge	.+8      	; 0x260e <ProcessMusic+0x8a>
    2606:	8e 15       	cp	r24, r14
    2608:	9f 05       	cpc	r25, r15
    260a:	30 f4       	brcc	.+12     	; 0x2618 <ProcessMusic+0x94>
    260c:	0a c0       	rjmp	.+20     	; 0x2622 <ProcessMusic+0x9e>
    260e:	45 2b       	or	r20, r21
    2610:	41 f0       	breq	.+16     	; 0x2622 <ProcessMusic+0x9e>
    2612:	e8 16       	cp	r14, r24
    2614:	f9 06       	cpc	r15, r25
    2616:	28 f0       	brcs	.+10     	; 0x2622 <ProcessMusic+0x9e>
    2618:	f9 01       	movw	r30, r18
    261a:	f2 82       	std	Z+2, r15	; 0x02
    261c:	e1 82       	std	Z+1, r14	; 0x01
    261e:	67 7f       	andi	r22, 0xF7	; 247
    2620:	6c 93       	st	X, r22
    2622:	57 96       	adiw	r26, 0x17	; 23
    2624:	2a 5f       	subi	r18, 0xFA	; 250
    2626:	3f 4f       	sbci	r19, 0xFF	; 255
    2628:	f9 e0       	ldi	r31, 0x09	; 9
    262a:	ae 3a       	cpi	r26, 0xAE	; 174
    262c:	bf 07       	cpc	r27, r31
    262e:	09 f0       	breq	.+2      	; 0x2632 <ProcessMusic+0xae>
    2630:	b5 cf       	rjmp	.-150    	; 0x259c <ProcessMusic+0x18>
    2632:	80 91 04 07 	lds	r24, 0x0704	; 0x800704 <playSong>
    2636:	88 23       	and	r24, r24
    2638:	09 f4       	brne	.+2      	; 0x263c <ProcessMusic+0xb8>
    263a:	cc c0       	rjmp	.+408    	; 0x27d4 <ProcessMusic+0x250>
    263c:	87 e1       	ldi	r24, 0x17	; 23
    263e:	f8 2e       	mov	r15, r24
    2640:	80 91 ae 09 	lds	r24, 0x09AE	; 0x8009ae <currDeltaTime>
    2644:	90 91 af 09 	lds	r25, 0x09AF	; 0x8009af <currDeltaTime+0x1>
    2648:	20 91 b4 09 	lds	r18, 0x09B4	; 0x8009b4 <nextDeltaTime>
    264c:	30 91 b5 09 	lds	r19, 0x09B5	; 0x8009b5 <nextDeltaTime+0x1>
    2650:	82 17       	cp	r24, r18
    2652:	93 07       	cpc	r25, r19
    2654:	09 f0       	breq	.+2      	; 0x2658 <ProcessMusic+0xd4>
    2656:	b9 c0       	rjmp	.+370    	; 0x27ca <ProcessMusic+0x246>
    2658:	20 91 b7 09 	lds	r18, 0x09B7	; 0x8009b7 <songPos>
    265c:	30 91 b8 09 	lds	r19, 0x09B8	; 0x8009b8 <songPos+0x1>
    2660:	b9 01       	movw	r22, r18
    2662:	6f 5f       	subi	r22, 0xFF	; 255
    2664:	7f 4f       	sbci	r23, 0xFF	; 255
    2666:	70 93 b8 09 	sts	0x09B8, r23	; 0x8009b8 <songPos+0x1>
    266a:	60 93 b7 09 	sts	0x09B7, r22	; 0x8009b7 <songPos>
    266e:	f9 01       	movw	r30, r18
    2670:	44 91       	lpm	r20, Z
    2672:	4f 3f       	cpi	r20, 0xFF	; 255
    2674:	79 f5       	brne	.+94     	; 0x26d4 <ProcessMusic+0x150>
    2676:	a9 01       	movw	r20, r18
    2678:	4e 5f       	subi	r20, 0xFE	; 254
    267a:	5f 4f       	sbci	r21, 0xFF	; 255
    267c:	50 93 b8 09 	sts	0x09B8, r21	; 0x8009b8 <songPos+0x1>
    2680:	40 93 b7 09 	sts	0x09B7, r20	; 0x8009b7 <songPos>
    2684:	fb 01       	movw	r30, r22
    2686:	64 91       	lpm	r22, Z
    2688:	6f 32       	cpi	r22, 0x2F	; 47
    268a:	19 f4       	brne	.+6      	; 0x2692 <ProcessMusic+0x10e>
    268c:	10 92 04 07 	sts	0x0704, r1	; 0x800704 <playSong>
    2690:	9c c0       	rjmp	.+312    	; 0x27ca <ProcessMusic+0x246>
    2692:	66 30       	cpi	r22, 0x06	; 6
    2694:	09 f0       	breq	.+2      	; 0x2698 <ProcessMusic+0x114>
    2696:	8c c0       	rjmp	.+280    	; 0x27b0 <ProcessMusic+0x22c>
    2698:	fa 01       	movw	r30, r20
    269a:	44 91       	lpm	r20, Z
    269c:	c9 01       	movw	r24, r18
    269e:	04 96       	adiw	r24, 0x04	; 4
    26a0:	90 93 b8 09 	sts	0x09B8, r25	; 0x8009b8 <songPos+0x1>
    26a4:	80 93 b7 09 	sts	0x09B7, r24	; 0x8009b7 <songPos>
    26a8:	f9 01       	movw	r30, r18
    26aa:	33 96       	adiw	r30, 0x03	; 3
    26ac:	e4 91       	lpm	r30, Z
    26ae:	e3 35       	cpi	r30, 0x53	; 83
    26b0:	29 f4       	brne	.+10     	; 0x26bc <ProcessMusic+0x138>
    26b2:	90 93 ba 09 	sts	0x09BA, r25	; 0x8009ba <loopStart+0x1>
    26b6:	80 93 b9 09 	sts	0x09B9, r24	; 0x8009b9 <loopStart>
    26ba:	7a c0       	rjmp	.+244    	; 0x27b0 <ProcessMusic+0x22c>
    26bc:	e5 34       	cpi	r30, 0x45	; 69
    26be:	09 f0       	breq	.+2      	; 0x26c2 <ProcessMusic+0x13e>
    26c0:	77 c0       	rjmp	.+238    	; 0x27b0 <ProcessMusic+0x22c>
    26c2:	80 91 b9 09 	lds	r24, 0x09B9	; 0x8009b9 <loopStart>
    26c6:	90 91 ba 09 	lds	r25, 0x09BA	; 0x8009ba <loopStart+0x1>
    26ca:	90 93 b8 09 	sts	0x09B8, r25	; 0x8009b8 <songPos+0x1>
    26ce:	80 93 b7 09 	sts	0x09B7, r24	; 0x8009b7 <songPos>
    26d2:	6e c0       	rjmp	.+220    	; 0x27b0 <ProcessMusic+0x22c>
    26d4:	47 fd       	sbrc	r20, 7
    26d6:	40 93 b2 09 	sts	0x09B2, r20	; 0x8009b2 <lastStatus>
    26da:	90 91 b2 09 	lds	r25, 0x09B2	; 0x8009b2 <lastStatus>
    26de:	89 2f       	mov	r24, r25
    26e0:	8f 70       	andi	r24, 0x0F	; 15
    26e2:	47 ff       	sbrs	r20, 7
    26e4:	08 c0       	rjmp	.+16     	; 0x26f6 <ProcessMusic+0x172>
    26e6:	2e 5f       	subi	r18, 0xFE	; 254
    26e8:	3f 4f       	sbci	r19, 0xFF	; 255
    26ea:	30 93 b8 09 	sts	0x09B8, r19	; 0x8009b8 <songPos+0x1>
    26ee:	20 93 b7 09 	sts	0x09B7, r18	; 0x8009b7 <songPos>
    26f2:	fb 01       	movw	r30, r22
    26f4:	44 91       	lpm	r20, Z
    26f6:	90 7f       	andi	r25, 0xF0	; 240
    26f8:	90 3b       	cpi	r25, 0xB0	; 176
    26fa:	e1 f0       	breq	.+56     	; 0x2734 <ProcessMusic+0x1b0>
    26fc:	90 3c       	cpi	r25, 0xC0	; 192
    26fe:	09 f4       	brne	.+2      	; 0x2702 <ProcessMusic+0x17e>
    2700:	51 c0       	rjmp	.+162    	; 0x27a4 <ProcessMusic+0x220>
    2702:	90 39       	cpi	r25, 0x90	; 144
    2704:	09 f0       	breq	.+2      	; 0x2708 <ProcessMusic+0x184>
    2706:	54 c0       	rjmp	.+168    	; 0x27b0 <ProcessMusic+0x22c>
    2708:	e0 91 b7 09 	lds	r30, 0x09B7	; 0x8009b7 <songPos>
    270c:	f0 91 b8 09 	lds	r31, 0x09B8	; 0x8009b8 <songPos+0x1>
    2710:	9f 01       	movw	r18, r30
    2712:	2f 5f       	subi	r18, 0xFF	; 255
    2714:	3f 4f       	sbci	r19, 0xFF	; 255
    2716:	30 93 b8 09 	sts	0x09B8, r19	; 0x8009b8 <songPos+0x1>
    271a:	20 93 b7 09 	sts	0x09B7, r18	; 0x8009b7 <songPos>
    271e:	24 91       	lpm	r18, Z
    2720:	22 0f       	add	r18, r18
    2722:	f8 9e       	mul	r15, r24
    2724:	f0 01       	movw	r30, r0
    2726:	11 24       	eor	r1, r1
    2728:	ee 5a       	subi	r30, 0xAE	; 174
    272a:	f6 4f       	sbci	r31, 0xF6	; 246
    272c:	60 89       	ldd	r22, Z+16	; 0x10
    272e:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <TriggerNote>
    2732:	3e c0       	rjmp	.+124    	; 0x27b0 <ProcessMusic+0x22c>
    2734:	e0 91 b7 09 	lds	r30, 0x09B7	; 0x8009b7 <songPos>
    2738:	f0 91 b8 09 	lds	r31, 0x09B8	; 0x8009b8 <songPos+0x1>
    273c:	9f 01       	movw	r18, r30
    273e:	2f 5f       	subi	r18, 0xFF	; 255
    2740:	3f 4f       	sbci	r19, 0xFF	; 255
    2742:	30 93 b8 09 	sts	0x09B8, r19	; 0x8009b8 <songPos+0x1>
    2746:	20 93 b7 09 	sts	0x09B7, r18	; 0x8009b7 <songPos>
    274a:	e4 91       	lpm	r30, Z
    274c:	47 30       	cpi	r20, 0x07	; 7
    274e:	49 f4       	brne	.+18     	; 0x2762 <ProcessMusic+0x1de>
    2750:	f8 9e       	mul	r15, r24
    2752:	d0 01       	movw	r26, r0
    2754:	11 24       	eor	r1, r1
    2756:	ae 5a       	subi	r26, 0xAE	; 174
    2758:	b6 4f       	sbci	r27, 0xF6	; 246
    275a:	ee 0f       	add	r30, r30
    275c:	1c 96       	adiw	r26, 0x0c	; 12
    275e:	ec 93       	st	X, r30
    2760:	27 c0       	rjmp	.+78     	; 0x27b0 <ProcessMusic+0x22c>
    2762:	4b 30       	cpi	r20, 0x0B	; 11
    2764:	49 f4       	brne	.+18     	; 0x2778 <ProcessMusic+0x1f4>
    2766:	f8 9e       	mul	r15, r24
    2768:	d0 01       	movw	r26, r0
    276a:	11 24       	eor	r1, r1
    276c:	ae 5a       	subi	r26, 0xAE	; 174
    276e:	b6 4f       	sbci	r27, 0xF6	; 246
    2770:	ee 0f       	add	r30, r30
    2772:	13 96       	adiw	r26, 0x03	; 3
    2774:	ec 93       	st	X, r30
    2776:	1c c0       	rjmp	.+56     	; 0x27b0 <ProcessMusic+0x22c>
    2778:	4c 35       	cpi	r20, 0x5C	; 92
    277a:	49 f4       	brne	.+18     	; 0x278e <ProcessMusic+0x20a>
    277c:	f8 9e       	mul	r15, r24
    277e:	d0 01       	movw	r26, r0
    2780:	11 24       	eor	r1, r1
    2782:	ae 5a       	subi	r26, 0xAE	; 174
    2784:	b6 4f       	sbci	r27, 0xF6	; 246
    2786:	ee 0f       	add	r30, r30
    2788:	1a 96       	adiw	r26, 0x0a	; 10
    278a:	ec 93       	st	X, r30
    278c:	11 c0       	rjmp	.+34     	; 0x27b0 <ProcessMusic+0x22c>
    278e:	44 36       	cpi	r20, 0x64	; 100
    2790:	79 f4       	brne	.+30     	; 0x27b0 <ProcessMusic+0x22c>
    2792:	f8 9e       	mul	r15, r24
    2794:	d0 01       	movw	r26, r0
    2796:	11 24       	eor	r1, r1
    2798:	ae 5a       	subi	r26, 0xAE	; 174
    279a:	b6 4f       	sbci	r27, 0xF6	; 246
    279c:	ee 0f       	add	r30, r30
    279e:	1b 96       	adiw	r26, 0x0b	; 11
    27a0:	ec 93       	st	X, r30
    27a2:	06 c0       	rjmp	.+12     	; 0x27b0 <ProcessMusic+0x22c>
    27a4:	f8 9e       	mul	r15, r24
    27a6:	f0 01       	movw	r30, r0
    27a8:	11 24       	eor	r1, r1
    27aa:	ee 5a       	subi	r30, 0xAE	; 174
    27ac:	f6 4f       	sbci	r31, 0xF6	; 246
    27ae:	40 8b       	std	Z+16, r20	; 0x10
    27b0:	87 eb       	ldi	r24, 0xB7	; 183
    27b2:	99 e0       	ldi	r25, 0x09	; 9
    27b4:	0e 94 9b 14 	call	0x2936	; 0x2936 <ReadVarLen>
    27b8:	90 93 b5 09 	sts	0x09B5, r25	; 0x8009b5 <nextDeltaTime+0x1>
    27bc:	80 93 b4 09 	sts	0x09B4, r24	; 0x8009b4 <nextDeltaTime>
    27c0:	10 92 af 09 	sts	0x09AF, r1	; 0x8009af <currDeltaTime+0x1>
    27c4:	10 92 ae 09 	sts	0x09AE, r1	; 0x8009ae <currDeltaTime>
    27c8:	3b cf       	rjmp	.-394    	; 0x2640 <ProcessMusic+0xbc>
    27ca:	01 96       	adiw	r24, 0x01	; 1
    27cc:	90 93 af 09 	sts	0x09AF, r25	; 0x8009af <currDeltaTime+0x1>
    27d0:	80 93 ae 09 	sts	0x09AE, r24	; 0x8009ae <currDeltaTime>
    27d4:	ee 24       	eor	r14, r14
    27d6:	ea 94       	dec	r14
    27d8:	f1 2c       	mov	r15, r1
    27da:	88 81       	ld	r24, Y
    27dc:	85 ff       	sbrs	r24, 5
    27de:	37 c0       	rjmp	.+110    	; 0x284e <ProcessMusic+0x2ca>
    27e0:	2d 89       	ldd	r18, Y+21	; 0x15
    27e2:	3e 89       	ldd	r19, Y+22	; 0x16
    27e4:	23 2b       	or	r18, r19
    27e6:	09 f4       	brne	.+2      	; 0x27ea <ProcessMusic+0x266>
    27e8:	32 c0       	rjmp	.+100    	; 0x284e <ProcessMusic+0x2ca>
    27ea:	86 fd       	sbrc	r24, 6
    27ec:	30 c0       	rjmp	.+96     	; 0x284e <ProcessMusic+0x2ca>
    27ee:	9b 89       	ldd	r25, Y+19	; 0x13
    27f0:	8a 89       	ldd	r24, Y+18	; 0x12
    27f2:	98 13       	cpse	r25, r24
    27f4:	2a c0       	rjmp	.+84     	; 0x284a <ProcessMusic+0x2c6>
    27f6:	ed 89       	ldd	r30, Y+21	; 0x15
    27f8:	fe 89       	ldd	r31, Y+22	; 0x16
    27fa:	bf 01       	movw	r22, r30
    27fc:	6f 5f       	subi	r22, 0xFF	; 255
    27fe:	7f 4f       	sbci	r23, 0xFF	; 255
    2800:	7e 8b       	std	Y+22, r23	; 0x16
    2802:	6d 8b       	std	Y+21, r22	; 0x15
    2804:	84 91       	lpm	r24, Z
    2806:	8f 3f       	cpi	r24, 0xFF	; 255
    2808:	31 f4       	brne	.+12     	; 0x2816 <ProcessMusic+0x292>
    280a:	88 81       	ld	r24, Y
    280c:	8f 77       	andi	r24, 0x7F	; 127
    280e:	88 83       	st	Y, r24
    2810:	1e 8a       	std	Y+22, r1	; 0x16
    2812:	1d 8a       	std	Y+21, r1	; 0x15
    2814:	1a c0       	rjmp	.+52     	; 0x284a <ProcessMusic+0x2c6>
    2816:	32 96       	adiw	r30, 0x02	; 2
    2818:	fe 8b       	std	Y+22, r31	; 0x16
    281a:	ed 8b       	std	Y+21, r30	; 0x15
    281c:	fb 01       	movw	r30, r22
    281e:	64 91       	lpm	r22, Z
    2820:	e8 2f       	mov	r30, r24
    2822:	f0 e0       	ldi	r31, 0x00	; 0
    2824:	ee 0f       	add	r30, r30
    2826:	ff 1f       	adc	r31, r31
    2828:	ee 53       	subi	r30, 0x3E	; 62
    282a:	ff 4f       	sbci	r31, 0xFF	; 255
    282c:	25 91       	lpm	r18, Z+
    282e:	34 91       	lpm	r19, Z
    2830:	ce 01       	movw	r24, r28
    2832:	f9 01       	movw	r30, r18
    2834:	09 95       	icall
    2836:	ed 89       	ldd	r30, Y+21	; 0x15
    2838:	fe 89       	ldd	r31, Y+22	; 0x16
    283a:	cf 01       	movw	r24, r30
    283c:	01 96       	adiw	r24, 0x01	; 1
    283e:	9e 8b       	std	Y+22, r25	; 0x16
    2840:	8d 8b       	std	Y+21, r24	; 0x15
    2842:	e4 91       	lpm	r30, Z
    2844:	ea 8b       	std	Y+18, r30	; 0x12
    2846:	1b 8a       	std	Y+19, r1	; 0x13
    2848:	d2 cf       	rjmp	.-92     	; 0x27ee <ProcessMusic+0x26a>
    284a:	9f 5f       	subi	r25, 0xFF	; 255
    284c:	9b 8b       	std	Y+19, r25	; 0x13
    284e:	98 81       	ld	r25, Y
    2850:	95 ff       	sbrs	r25, 5
    2852:	5e c0       	rjmp	.+188    	; 0x2910 <ProcessMusic+0x38c>
    2854:	8c 89       	ldd	r24, Y+20	; 0x14
    2856:	8f 3f       	cpi	r24, 0xFF	; 255
    2858:	11 f0       	breq	.+4      	; 0x285e <ProcessMusic+0x2da>
    285a:	8f 5f       	subi	r24, 0xFF	; 255
    285c:	8c 8b       	std	Y+20, r24	; 0x14
    285e:	97 fd       	sbrc	r25, 7
    2860:	02 c0       	rjmp	.+4      	; 0x2866 <ProcessMusic+0x2e2>
    2862:	9c 85       	ldd	r25, Y+12	; 0x0c
    2864:	01 c0       	rjmp	.+2      	; 0x2868 <ProcessMusic+0x2e4>
    2866:	9f ef       	ldi	r25, 0xFF	; 255
    2868:	8d 85       	ldd	r24, Y+13	; 0x0d
    286a:	49 85       	ldd	r20, Y+9	; 0x09
    286c:	88 23       	and	r24, r24
    286e:	09 f4       	brne	.+2      	; 0x2872 <ProcessMusic+0x2ee>
    2870:	49 c0       	rjmp	.+146    	; 0x2904 <ProcessMusic+0x380>
    2872:	6e 85       	ldd	r22, Y+14	; 0x0e
    2874:	66 23       	and	r22, r22
    2876:	09 f4       	brne	.+2      	; 0x287a <ProcessMusic+0x2f6>
    2878:	45 c0       	rjmp	.+138    	; 0x2904 <ProcessMusic+0x380>
    287a:	99 23       	and	r25, r25
    287c:	09 f4       	brne	.+2      	; 0x2880 <ProcessMusic+0x2fc>
    287e:	42 c0       	rjmp	.+132    	; 0x2904 <ProcessMusic+0x380>
    2880:	50 91 b3 09 	lds	r21, 0x09B3	; 0x8009b3 <masterVolume>
    2884:	55 23       	and	r21, r21
    2886:	09 f4       	brne	.+2      	; 0x288a <ProcessMusic+0x306>
    2888:	3d c0       	rjmp	.+122    	; 0x2904 <ProcessMusic+0x380>
    288a:	89 9f       	mul	r24, r25
    288c:	c0 01       	movw	r24, r0
    288e:	11 24       	eor	r1, r1
    2890:	93 95       	inc	r25
    2892:	89 2f       	mov	r24, r25
    2894:	99 27       	eor	r25, r25
    2896:	68 9f       	mul	r22, r24
    2898:	90 01       	movw	r18, r0
    289a:	69 9f       	mul	r22, r25
    289c:	30 0d       	add	r19, r0
    289e:	11 24       	eor	r1, r1
    28a0:	33 95       	inc	r19
    28a2:	23 2f       	mov	r18, r19
    28a4:	33 27       	eor	r19, r19
    28a6:	6b 81       	ldd	r22, Y+3	; 0x03
    28a8:	62 9f       	mul	r22, r18
    28aa:	c0 01       	movw	r24, r0
    28ac:	63 9f       	mul	r22, r19
    28ae:	90 0d       	add	r25, r0
    28b0:	11 24       	eor	r1, r1
    28b2:	93 95       	inc	r25
    28b4:	89 2f       	mov	r24, r25
    28b6:	99 27       	eor	r25, r25
    28b8:	58 9f       	mul	r21, r24
    28ba:	90 01       	movw	r18, r0
    28bc:	59 9f       	mul	r21, r25
    28be:	30 0d       	add	r19, r0
    28c0:	11 24       	eor	r1, r1
    28c2:	33 95       	inc	r19
    28c4:	23 2f       	mov	r18, r19
    28c6:	33 27       	eor	r19, r19
    28c8:	8a 85       	ldd	r24, Y+10	; 0x0a
    28ca:	88 23       	and	r24, r24
    28cc:	e9 f0       	breq	.+58     	; 0x2908 <ProcessMusic+0x384>
    28ce:	e4 2f       	mov	r30, r20
    28d0:	f0 e0       	ldi	r31, 0x00	; 0
    28d2:	e0 50       	subi	r30, 0x00	; 0
    28d4:	f3 4d       	sbci	r31, 0xD3	; 211
    28d6:	e4 91       	lpm	r30, Z
    28d8:	e0 58       	subi	r30, 0x80	; 128
    28da:	8e 9f       	mul	r24, r30
    28dc:	f0 01       	movw	r30, r0
    28de:	11 24       	eor	r1, r1
    28e0:	f3 95       	inc	r31
    28e2:	ef 2f       	mov	r30, r31
    28e4:	ff 27       	eor	r31, r31
    28e6:	b7 01       	movw	r22, r14
    28e8:	6e 1b       	sub	r22, r30
    28ea:	7f 0b       	sbc	r23, r31
    28ec:	62 9f       	mul	r22, r18
    28ee:	c0 01       	movw	r24, r0
    28f0:	63 9f       	mul	r22, r19
    28f2:	90 0d       	add	r25, r0
    28f4:	72 9f       	mul	r23, r18
    28f6:	90 0d       	add	r25, r0
    28f8:	11 24       	eor	r1, r1
    28fa:	9c 01       	movw	r18, r24
    28fc:	33 95       	inc	r19
    28fe:	23 2f       	mov	r18, r19
    2900:	33 27       	eor	r19, r19
    2902:	02 c0       	rjmp	.+4      	; 0x2908 <ProcessMusic+0x384>
    2904:	20 e0       	ldi	r18, 0x00	; 0
    2906:	30 e0       	ldi	r19, 0x00	; 0
    2908:	8b 85       	ldd	r24, Y+11	; 0x0b
    290a:	48 0f       	add	r20, r24
    290c:	49 87       	std	Y+9, r20	; 0x09
    290e:	02 c0       	rjmp	.+4      	; 0x2914 <ProcessMusic+0x390>
    2910:	20 e0       	ldi	r18, 0x00	; 0
    2912:	30 e0       	ldi	r19, 0x00	; 0
    2914:	f8 01       	movw	r30, r16
    2916:	20 83       	st	Z, r18
    2918:	67 96       	adiw	r28, 0x17	; 23
    291a:	0a 5f       	subi	r16, 0xFA	; 250
    291c:	1f 4f       	sbci	r17, 0xFF	; 255
    291e:	f9 e0       	ldi	r31, 0x09	; 9
    2920:	ce 3a       	cpi	r28, 0xAE	; 174
    2922:	df 07       	cpc	r29, r31
    2924:	09 f0       	breq	.+2      	; 0x2928 <ProcessMusic+0x3a4>
    2926:	59 cf       	rjmp	.-334    	; 0x27da <ProcessMusic+0x256>
    2928:	df 91       	pop	r29
    292a:	cf 91       	pop	r28
    292c:	1f 91       	pop	r17
    292e:	0f 91       	pop	r16
    2930:	ff 90       	pop	r15
    2932:	ef 90       	pop	r14
    2934:	08 95       	ret

00002936 <ReadVarLen>:
    2936:	dc 01       	movw	r26, r24
    2938:	ed 91       	ld	r30, X+
    293a:	fc 91       	ld	r31, X
    293c:	11 97       	sbiw	r26, 0x01	; 1
    293e:	9f 01       	movw	r18, r30
    2940:	2f 5f       	subi	r18, 0xFF	; 255
    2942:	3f 4f       	sbci	r19, 0xFF	; 255
    2944:	11 96       	adiw	r26, 0x01	; 1
    2946:	3c 93       	st	X, r19
    2948:	2e 93       	st	-X, r18
    294a:	e4 91       	lpm	r30, Z
    294c:	e7 fd       	sbrc	r30, 7
    294e:	03 c0       	rjmp	.+6      	; 0x2956 <ReadVarLen+0x20>
    2950:	8e 2f       	mov	r24, r30
    2952:	90 e0       	ldi	r25, 0x00	; 0
    2954:	08 95       	ret
    2956:	ef 77       	andi	r30, 0x7F	; 127
    2958:	8e 2f       	mov	r24, r30
    295a:	90 e0       	ldi	r25, 0x00	; 0
    295c:	96 95       	lsr	r25
    295e:	98 2f       	mov	r25, r24
    2960:	88 27       	eor	r24, r24
    2962:	97 95       	ror	r25
    2964:	87 95       	ror	r24
    2966:	2f 5f       	subi	r18, 0xFF	; 255
    2968:	3f 4f       	sbci	r19, 0xFF	; 255
    296a:	f9 01       	movw	r30, r18
    296c:	31 97       	sbiw	r30, 0x01	; 1
    296e:	e4 91       	lpm	r30, Z
    2970:	4e 2f       	mov	r20, r30
    2972:	4f 77       	andi	r20, 0x7F	; 127
    2974:	84 0f       	add	r24, r20
    2976:	91 1d       	adc	r25, r1
    2978:	e7 fd       	sbrc	r30, 7
    297a:	f0 cf       	rjmp	.-32     	; 0x295c <ReadVarLen+0x26>
    297c:	2d 93       	st	X+, r18
    297e:	3c 93       	st	X, r19
    2980:	08 95       	ret

00002982 <TriggerCommon>:
    2982:	0f 93       	push	r16
    2984:	1f 93       	push	r17
    2986:	cf 93       	push	r28
    2988:	df 93       	push	r29
    298a:	ec 01       	movw	r28, r24
    298c:	16 2f       	mov	r17, r22
    298e:	88 81       	ld	r24, Y
    2990:	08 2f       	mov	r16, r24
    2992:	00 78       	andi	r16, 0x80	; 128
    2994:	1f 86       	std	Y+15, r1	; 0x0f
    2996:	9f ef       	ldi	r25, 0xFF	; 255
    2998:	9e 87       	std	Y+14, r25	; 0x0e
    299a:	4d 87       	std	Y+13, r20	; 0x0d
    299c:	1c 8a       	std	Y+20, r1	; 0x14
    299e:	87 7b       	andi	r24, 0xB7	; 183
    29a0:	88 83       	st	Y, r24
    29a2:	1a 86       	std	Y+10, r1	; 0x0a
    29a4:	19 86       	std	Y+9, r1	; 0x09
    29a6:	29 83       	std	Y+1, r18	; 0x01
    29a8:	1c 82       	std	Y+4, r1	; 0x04
    29aa:	9b 83       	std	Y+3, r25	; 0x03
    29ac:	8a 81       	ldd	r24, Y+2	; 0x02
    29ae:	83 30       	cpi	r24, 0x03	; 3
    29b0:	69 f4       	brne	.+26     	; 0x29cc <TriggerCommon+0x4a>
    29b2:	01 11       	cpse	r16, r1
    29b4:	01 c0       	rjmp	.+2      	; 0x29b8 <TriggerCommon+0x36>
    29b6:	12 2f       	mov	r17, r18
    29b8:	81 e0       	ldi	r24, 0x01	; 1
    29ba:	91 e0       	ldi	r25, 0x01	; 1
    29bc:	90 93 2b 09 	sts	0x092B, r25	; 0x80092b <tr4_barrel_hi>
    29c0:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <tr4_barrel_lo>
    29c4:	81 e0       	ldi	r24, 0x01	; 1
    29c6:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <tr4_params>
    29ca:	07 c0       	rjmp	.+14     	; 0x29da <TriggerCommon+0x58>
    29cc:	62 2f       	mov	r22, r18
    29ce:	0e 94 4f 15 	call	0x2a9e	; 0x2a9e <SetMixerNote>
    29d2:	60 e0       	ldi	r22, 0x00	; 0
    29d4:	8a 81       	ldd	r24, Y+2	; 0x02
    29d6:	0e 94 66 15 	call	0x2acc	; 0x2acc <SetMixerWave>
    29da:	00 23       	and	r16, r16
    29dc:	11 f0       	breq	.+4      	; 0x29e2 <TriggerCommon+0x60>
    29de:	19 8b       	std	Y+17, r17	; 0x11
    29e0:	01 c0       	rjmp	.+2      	; 0x29e4 <TriggerCommon+0x62>
    29e2:	18 8b       	std	Y+16, r17	; 0x10
    29e4:	e0 91 b0 09 	lds	r30, 0x09B0	; 0x8009b0 <patchPointers>
    29e8:	f0 91 b1 09 	lds	r31, 0x09B1	; 0x8009b1 <patchPointers+0x1>
    29ec:	89 e0       	ldi	r24, 0x09	; 9
    29ee:	18 9f       	mul	r17, r24
    29f0:	e0 0d       	add	r30, r0
    29f2:	f1 1d       	adc	r31, r1
    29f4:	11 24       	eor	r1, r1
    29f6:	33 96       	adiw	r30, 0x03	; 3
    29f8:	85 91       	lpm	r24, Z+
    29fa:	94 91       	lpm	r25, Z
    29fc:	00 97       	sbiw	r24, 0x00	; 0
    29fe:	19 f4       	brne	.+6      	; 0x2a06 <TriggerCommon+0x84>
    2a00:	1e 8a       	std	Y+22, r1	; 0x16
    2a02:	1d 8a       	std	Y+21, r1	; 0x15
    2a04:	07 c0       	rjmp	.+14     	; 0x2a14 <TriggerCommon+0x92>
    2a06:	1b 8a       	std	Y+19, r1	; 0x13
    2a08:	fc 01       	movw	r30, r24
    2a0a:	24 91       	lpm	r18, Z
    2a0c:	2a 8b       	std	Y+18, r18	; 0x12
    2a0e:	01 96       	adiw	r24, 0x01	; 1
    2a10:	9e 8b       	std	Y+22, r25	; 0x16
    2a12:	8d 8b       	std	Y+21, r24	; 0x15
    2a14:	df 91       	pop	r29
    2a16:	cf 91       	pop	r28
    2a18:	1f 91       	pop	r17
    2a1a:	0f 91       	pop	r16
    2a1c:	08 95       	ret

00002a1e <TriggerNote>:


void TriggerNote(unsigned char channel,unsigned char patch,unsigned char note,unsigned char volume){
    2a1e:	cf 93       	push	r28
    2a20:	df 93       	push	r29
	Track* track=&tracks[channel];

	//allow only other music notes 
	if((track->flags&TRACK_FLAGS_PLAYING)==0 || (track->flags&TRACK_FLAGS_PRIORITY)==0){
    2a22:	a8 2f       	mov	r26, r24
    2a24:	b0 e0       	ldi	r27, 0x00	; 0
    2a26:	97 e1       	ldi	r25, 0x17	; 23
    2a28:	89 9f       	mul	r24, r25
    2a2a:	f0 01       	movw	r30, r0
    2a2c:	11 24       	eor	r1, r1
    2a2e:	ee 5a       	subi	r30, 0xAE	; 174
    2a30:	f6 4f       	sbci	r31, 0xF6	; 246
    2a32:	80 81       	ld	r24, Z
    2a34:	85 ff       	sbrs	r24, 5
    2a36:	02 c0       	rjmp	.+4      	; 0x2a3c <TriggerNote+0x1e>
    2a38:	87 fd       	sbrc	r24, 7
    2a3a:	2e c0       	rjmp	.+92     	; 0x2a98 <TriggerNote+0x7a>
			
		if(volume==0){ //note-off received
    2a3c:	21 11       	cpse	r18, r1
    2a3e:	18 c0       	rjmp	.+48     	; 0x2a70 <TriggerNote+0x52>

			
			//cut note if there's no envelope & no note hold
			if(track->envelopeStep==0 && !(track->flags&TRACK_FLAGS_HOLD_ENV)){
    2a40:	97 e1       	ldi	r25, 0x17	; 23
    2a42:	9a 9f       	mul	r25, r26
    2a44:	f0 01       	movw	r30, r0
    2a46:	9b 9f       	mul	r25, r27
    2a48:	f0 0d       	add	r31, r0
    2a4a:	11 24       	eor	r1, r1
    2a4c:	ee 5a       	subi	r30, 0xAE	; 174
    2a4e:	f6 4f       	sbci	r31, 0xF6	; 246
    2a50:	97 85       	ldd	r25, Z+15	; 0x0f
    2a52:	91 11       	cpse	r25, r1
    2a54:	02 c0       	rjmp	.+4      	; 0x2a5a <TriggerNote+0x3c>
    2a56:	86 ff       	sbrs	r24, 6
				track->noteVol=0;
    2a58:	15 86       	std	Z+13, r1	; 0x0d
			}

			track->flags&=(~TRACK_FLAGS_HOLD_ENV);//patchEnvelopeHold=false;
    2a5a:	97 e1       	ldi	r25, 0x17	; 23
    2a5c:	9a 9f       	mul	r25, r26
    2a5e:	f0 01       	movw	r30, r0
    2a60:	9b 9f       	mul	r25, r27
    2a62:	f0 0d       	add	r31, r0
    2a64:	11 24       	eor	r1, r1
    2a66:	ee 5a       	subi	r30, 0xAE	; 174
    2a68:	f6 4f       	sbci	r31, 0xF6	; 246
    2a6a:	8f 7b       	andi	r24, 0xBF	; 191
    2a6c:	80 83       	st	Z, r24
    2a6e:	14 c0       	rjmp	.+40     	; 0x2a98 <TriggerNote+0x7a>
    2a70:	82 2f       	mov	r24, r18
    2a72:	24 2f       	mov	r18, r20
		}else{
		
			track->flags=0;//&=(~TRACK_FLAGS_PRIORITY);// priority=0;
    2a74:	97 e1       	ldi	r25, 0x17	; 23
    2a76:	9a 9f       	mul	r25, r26
    2a78:	e0 01       	movw	r28, r0
    2a7a:	9b 9f       	mul	r25, r27
    2a7c:	d0 0d       	add	r29, r0
    2a7e:	11 24       	eor	r1, r1
    2a80:	ce 5a       	subi	r28, 0xAE	; 174
    2a82:	d6 4f       	sbci	r29, 0xF6	; 246
    2a84:	18 82       	st	Y, r1
			track->patchCommandStreamPos = NULL;
    2a86:	1e 8a       	std	Y+22, r1	; 0x16
    2a88:	1d 8a       	std	Y+21, r1	; 0x15
			TriggerCommon(track,patch,volume,note);
    2a8a:	48 2f       	mov	r20, r24
    2a8c:	ce 01       	movw	r24, r28
    2a8e:	0e 94 c1 14 	call	0x2982	; 0x2982 <TriggerCommon>
			track->flags|=TRACK_FLAGS_PLAYING;
    2a92:	88 81       	ld	r24, Y
    2a94:	80 62       	ori	r24, 0x20	; 32
    2a96:	88 83       	st	Y, r24
		}

	}
}
    2a98:	df 91       	pop	r29
    2a9a:	cf 91       	pop	r28
    2a9c:	08 95       	ret

00002a9e <SetMixerNote>:
    2a9e:	99 27       	eor	r25, r25
    2aa0:	77 27       	eor	r23, r23
    2aa2:	83 30       	cpi	r24, 0x03	; 3
    2aa4:	08 f0       	brcs	.+2      	; 0x2aa8 <set_note_waves>
    2aa6:	08 95       	ret

00002aa8 <set_note_waves>:
    2aa8:	e6 e0       	ldi	r30, 0x06	; 6
    2aaa:	fb e2       	ldi	r31, 0x2B	; 43
    2aac:	66 0f       	add	r22, r22
    2aae:	77 1f       	adc	r23, r23
    2ab0:	e6 0f       	add	r30, r22
    2ab2:	f7 1f       	adc	r31, r23
    2ab4:	a5 91       	lpm	r26, Z+
    2ab6:	b4 91       	lpm	r27, Z
    2ab8:	e6 e1       	ldi	r30, 0x16	; 22
    2aba:	f9 e0       	ldi	r31, 0x09	; 9
    2abc:	26 e0       	ldi	r18, 0x06	; 6
    2abe:	28 9f       	mul	r18, r24
    2ac0:	e0 0d       	add	r30, r0
    2ac2:	f1 1d       	adc	r31, r1
    2ac4:	a1 83       	std	Z+1, r26	; 0x01
    2ac6:	b2 83       	std	Z+2, r27	; 0x02
    2ac8:	11 24       	eor	r1, r1
    2aca:	08 95       	ret

00002acc <SetMixerWave>:
;         Noise channel: 0xfe=7 bit lfsr, 0xff=15 bit lfsr
;                 
;***********************
.section .text.SetMixerWave
SetMixerWave:
	clr r25
    2acc:	99 27       	eor	r25, r25
	clr r23
    2ace:	77 27       	eor	r23, r23

#if (INCLUDE_DEFAULT_WAVES != 0)
	ldi ZL,lo8(mixerStruct)
    2ad0:	e6 e1       	ldi	r30, 0x16	; 22
	ldi ZH,hi8(mixerStruct)
    2ad2:	f9 e0       	ldi	r31, 0x09	; 9
	ldi r18,CHANNEL_STRUCT_SIZE
    2ad4:	26 e0       	ldi	r18, 0x06	; 6
	mul r18,r24	
    2ad6:	28 9f       	mul	r18, r24
	add ZL,r0
    2ad8:	e0 0d       	add	r30, r0
	adc ZH,r1
    2ada:	f1 1d       	adc	r31, r1
#endif

#if MIXER_CHAN4_TYPE == 0
	cpi r22,0xfe	;7bit lfsr
    2adc:	6e 3f       	cpi	r22, 0xFE	; 254
	brne smw1
    2ade:	31 f4       	brne	.+12     	; 0x2aec <smw1>
	lds r22,tr4_params
    2ae0:	60 91 29 09 	lds	r22, 0x0929	; 0x800929 <tr4_params>
	andi r22,0xfe;
    2ae4:	6e 7f       	andi	r22, 0xFE	; 254
	sts tr4_params,r22
    2ae6:	60 93 29 09 	sts	0x0929, r22	; 0x800929 <tr4_params>
	rjmp esmw	
    2aea:	0b c0       	rjmp	.+22     	; 0x2b02 <esmw>

00002aec <smw1>:
smw1:
	cpi r22,0xff	;15bit lfsr
    2aec:	6f 3f       	cpi	r22, 0xFF	; 255
	brne smw2
    2aee:	31 f4       	brne	.+12     	; 0x2afc <smw2>
	lds r22,tr4_params
    2af0:	60 91 29 09 	lds	r22, 0x0929	; 0x800929 <tr4_params>
	ori r22,0xfe;
    2af4:	6e 6f       	ori	r22, 0xFE	; 254
	sts tr4_params,r22	
    2af6:	60 93 29 09 	sts	0x0929, r22	; 0x800929 <tr4_params>
	rjmp esmw
    2afa:	03 c0       	rjmp	.+6      	; 0x2b02 <esmw>

00002afc <smw2>:
smw2:
#endif

#if (INCLUDE_DEFAULT_WAVES != 0)
	ldi r23,hi8(waves)
    2afc:	7d e2       	ldi	r23, 0x2D	; 45
	add r23,r22
    2afe:	76 0f       	add	r23, r22
	std Z+samplepos_hi,r23 ;store path No
    2b00:	75 83       	std	Z+5, r23	; 0x05

00002b02 <esmw>:
#endif

esmw:
	clr r1	
    2b02:	11 24       	eor	r1, r1
	ret
    2b04:	08 95       	ret

00002b06 <steptable>:
    2b06:	22 00       	.word	0x0022	; ????
    2b08:	24 00       	.word	0x0024	; ????
    2b0a:	26 00       	.word	0x0026	; ????
    2b0c:	28 00       	.word	0x0028	; ????
    2b0e:	2b 00       	.word	0x002b	; ????
    2b10:	2d 00       	.word	0x002d	; ????
    2b12:	30 00       	.word	0x0030	; ????
    2b14:	33 00       	.word	0x0033	; ????
    2b16:	36 00       	.word	0x0036	; ????
    2b18:	39 00       	.word	0x0039	; ????
    2b1a:	3d 00       	.word	0x003d	; ????
    2b1c:	40 00       	.word	0x0040	; ????
    2b1e:	44 00       	.word	0x0044	; ????
    2b20:	48 00       	.word	0x0048	; ????
    2b22:	4c 00       	.word	0x004c	; ????
    2b24:	51 00       	.word	0x0051	; ????
    2b26:	56 00       	.word	0x0056	; ????
    2b28:	5b 00       	.word	0x005b	; ????
    2b2a:	60 00       	.word	0x0060	; ????
    2b2c:	66 00       	.word	0x0066	; ????
    2b2e:	6c 00       	.word	0x006c	; ????
    2b30:	73 00       	.word	0x0073	; ????
    2b32:	79 00       	.word	0x0079	; ????
    2b34:	81 00       	.word	0x0081	; ????
    2b36:	88 00       	.word	0x0088	; ????
    2b38:	90 00       	.word	0x0090	; ????
    2b3a:	99 00       	.word	0x0099	; ????
    2b3c:	a2 00       	.word	0x00a2	; ????
    2b3e:	ac 00       	.word	0x00ac	; ????
    2b40:	b6 00       	.word	0x00b6	; ????
    2b42:	c1 00       	.word	0x00c1	; ????
    2b44:	cc 00       	.word	0x00cc	; ????
    2b46:	d8 00       	.word	0x00d8	; ????
    2b48:	e5 00       	.word	0x00e5	; ????
    2b4a:	f3 00       	.word	0x00f3	; ????
    2b4c:	01 01       	movw	r0, r2
    2b4e:	10 01       	movw	r2, r0
    2b50:	21 01       	movw	r4, r2
    2b52:	32 01       	movw	r6, r4
    2b54:	44 01       	movw	r8, r8
    2b56:	57 01       	movw	r10, r14
    2b58:	6c 01       	movw	r12, r24
    2b5a:	81 01       	movw	r16, r2
    2b5c:	98 01       	movw	r18, r16
    2b5e:	b0 01       	movw	r22, r0
    2b60:	ca 01       	movw	r24, r20
    2b62:	e5 01       	movw	r28, r10
    2b64:	02 02       	muls	r16, r18
    2b66:	21 02       	muls	r18, r17
    2b68:	41 02       	muls	r20, r17
    2b6a:	64 02       	muls	r22, r20
    2b6c:	88 02       	muls	r24, r24
    2b6e:	ae 02       	muls	r26, r30
    2b70:	d7 02       	muls	r29, r23
    2b72:	03 03       	mulsu	r16, r19
    2b74:	30 03       	mulsu	r19, r16
    2b76:	61 03       	mulsu	r22, r17
    2b78:	94 03       	fmuls	r17, r20
    2b7a:	cb 03       	fmulsu	r20, r19
    2b7c:	05 04       	cpc	r0, r5
    2b7e:	42 04       	cpc	r4, r2
    2b80:	83 04       	cpc	r8, r3
    2b82:	c7 04       	cpc	r12, r7
    2b84:	10 05       	cpc	r17, r0
    2b86:	5d 05       	cpc	r21, r13
    2b88:	af 05       	cpc	r26, r15
    2b8a:	05 06       	cpc	r0, r21
    2b8c:	61 06       	cpc	r6, r17
    2b8e:	c2 06       	cpc	r12, r18
    2b90:	29 07       	cpc	r18, r25
    2b92:	96 07       	cpc	r25, r22
    2b94:	09 08       	sbc	r0, r9
    2b96:	83 08       	sbc	r8, r3
    2b98:	05 09       	sbc	r16, r5
    2b9a:	8e 09       	sbc	r24, r14
    2b9c:	20 0a       	sbc	r2, r16
    2b9e:	ba 0a       	sbc	r11, r26
    2ba0:	5d 0b       	sbc	r21, r29
    2ba2:	0a 0c       	add	r0, r10
    2ba4:	c1 0c       	add	r12, r1
    2ba6:	84 0d       	add	r24, r4
    2ba8:	51 0e       	add	r5, r17
    2baa:	2b 0f       	add	r18, r27
    2bac:	12 10       	cpse	r1, r2
    2bae:	07 11       	cpse	r16, r7
    2bb0:	0a 12       	cpse	r0, r26
    2bb2:	1d 13       	cpse	r17, r29
    2bb4:	40 14       	cp	r4, r0
    2bb6:	74 15       	cp	r23, r4
    2bb8:	ba 16       	cp	r11, r26
    2bba:	14 18       	sub	r1, r4
    2bbc:	83 19       	sub	r24, r3
    2bbe:	07 1b       	sub	r16, r23
    2bc0:	a3 1c       	adc	r10, r3
    2bc2:	57 1e       	adc	r5, r23
    2bc4:	24 20       	and	r2, r4
    2bc6:	0e 22       	and	r0, r30
    2bc8:	14 24       	eor	r1, r4
    2bca:	39 26       	eor	r3, r25
    2bcc:	7f 28       	or	r7, r15
    2bce:	e8 2a       	or	r14, r24
    2bd0:	75 2d       	mov	r23, r5
    2bd2:	29 30       	cpi	r18, 0x09	; 9
    2bd4:	06 33       	cpi	r16, 0x36	; 54
    2bd6:	0f 36       	cpi	r16, 0x6F	; 111
    2bd8:	45 39       	cpi	r20, 0x95	; 149
    2bda:	ad 3c       	cpi	r26, 0xCD	; 205
    2bdc:	49 40       	sbci	r20, 0x09	; 9
    2bde:	1b 44       	sbci	r17, 0x4B	; 75
    2be0:	28 48       	sbci	r18, 0x88	; 136
    2be2:	73 4c       	sbci	r23, 0xC3	; 195
    2be4:	fe 50       	subi	r31, 0x0E	; 14
    2be6:	cf 55       	subi	r28, 0x5F	; 95
    2be8:	ea 5a       	subi	r30, 0xAA	; 170
    2bea:	51 60       	ori	r21, 0x01	; 1
    2bec:	0c 66       	ori	r16, 0x6C	; 108
    2bee:	1d 6c       	ori	r17, 0xCD	; 205
    2bf0:	8b 72       	andi	r24, 0x2B	; 43
    2bf2:	5a 79       	andi	r21, 0x9A	; 154
    2bf4:	92 80       	ldd	r9, Z+2	; 0x02
    2bf6:	37 88       	ldd	r3, Z+23	; 0x17
    2bf8:	50 90 e5 98 	lds	r5, 0x98E5	; 0x8098e5 <__bss_end+0x8f24>
    2bfc:	fd a1       	ldd	r31, Y+37	; 0x25
    2bfe:	9f ab       	std	Y+55, r25	; 0x37
    2c00:	d3 b5       	in	r29, 0x23	; 35
    2c02:	a3 c0       	rjmp	.+326    	; 0x2d4a <waves+0x4a>
	...

00002d00 <waves>:
    2d00:	00 03       	mulsu	r16, r16
    2d02:	06 09       	sbc	r16, r6
    2d04:	0c 10       	cpse	r0, r12
    2d06:	13 16       	cp	r1, r19
    2d08:	19 1c       	adc	r1, r9
    2d0a:	1f 22       	and	r1, r31
    2d0c:	25 28       	or	r2, r5
    2d0e:	2b 2e       	mov	r2, r27
    2d10:	31 33       	cpi	r19, 0x31	; 49
    2d12:	36 39       	cpi	r19, 0x96	; 150
    2d14:	3c 3f       	cpi	r19, 0xFC	; 252
    2d16:	41 44       	sbci	r20, 0x41	; 65
    2d18:	47 49       	sbci	r20, 0x97	; 151
    2d1a:	4c 4e       	sbci	r20, 0xEC	; 236
    2d1c:	51 53       	subi	r21, 0x31	; 49
    2d1e:	55 58       	subi	r21, 0x85	; 133
    2d20:	5a 5c       	subi	r21, 0xCA	; 202
    2d22:	5e 60       	ori	r21, 0x0E	; 14
    2d24:	62 64       	ori	r22, 0x42	; 66
    2d26:	66 68       	ori	r22, 0x86	; 134
    2d28:	6a 6b       	ori	r22, 0xBA	; 186
    2d2a:	6d 6f       	ori	r22, 0xFD	; 253
    2d2c:	70 71       	andi	r23, 0x10	; 16
    2d2e:	73 74       	andi	r23, 0x43	; 67
    2d30:	75 76       	andi	r23, 0x65	; 101
    2d32:	78 79       	andi	r23, 0x98	; 152
    2d34:	7a 7a       	andi	r23, 0xAA	; 170
    2d36:	7b 7c       	andi	r23, 0xCB	; 203
    2d38:	7d 7d       	andi	r23, 0xDD	; 221
    2d3a:	7e 7e       	andi	r23, 0xEE	; 238
    2d3c:	7e 7f       	andi	r23, 0xFE	; 254
    2d3e:	7f 7f       	andi	r23, 0xFF	; 255
    2d40:	7f 7f       	andi	r23, 0xFF	; 255
    2d42:	7f 7f       	andi	r23, 0xFF	; 255
    2d44:	7e 7e       	andi	r23, 0xEE	; 238
    2d46:	7e 7d       	andi	r23, 0xDE	; 222
    2d48:	7d 7c       	andi	r23, 0xCD	; 205
    2d4a:	7b 7a       	andi	r23, 0xAB	; 171
    2d4c:	7a 79       	andi	r23, 0x9A	; 154
    2d4e:	78 76       	andi	r23, 0x68	; 104
    2d50:	75 74       	andi	r23, 0x45	; 69
    2d52:	73 71       	andi	r23, 0x13	; 19
    2d54:	70 6f       	ori	r23, 0xF0	; 240
    2d56:	6d 6b       	ori	r22, 0xBD	; 189
    2d58:	6a 68       	ori	r22, 0x8A	; 138
    2d5a:	66 64       	ori	r22, 0x46	; 70
    2d5c:	62 60       	ori	r22, 0x02	; 2
    2d5e:	5e 5c       	subi	r21, 0xCE	; 206
    2d60:	5a 58       	subi	r21, 0x8A	; 138
    2d62:	55 53       	subi	r21, 0x35	; 53
    2d64:	51 4e       	sbci	r21, 0xE1	; 225
    2d66:	4c 49       	sbci	r20, 0x9C	; 156
    2d68:	47 44       	sbci	r20, 0x47	; 71
    2d6a:	41 3f       	cpi	r20, 0xF1	; 241
    2d6c:	3c 39       	cpi	r19, 0x9C	; 156
    2d6e:	36 33       	cpi	r19, 0x36	; 54
    2d70:	31 2e       	mov	r3, r17
    2d72:	2b 28       	or	r2, r11
    2d74:	25 22       	and	r2, r21
    2d76:	1f 1c       	adc	r1, r15
    2d78:	19 16       	cp	r1, r25
    2d7a:	13 10       	cpse	r1, r3
    2d7c:	0c 09       	sbc	r16, r12
    2d7e:	06 03       	mulsu	r16, r22
    2d80:	00 fd       	sbrc	r16, 0
    2d82:	fa f7       	brpl	.-2      	; 0x2d82 <waves+0x82>
    2d84:	f4 f0       	brlt	.+60     	; 0x2dc2 <waves+0xc2>
    2d86:	ed ea       	ldi	r30, 0xAD	; 173
    2d88:	e7 e4       	ldi	r30, 0x47	; 71
    2d8a:	e1 de       	rcall	.-574    	; 0x2b4e <steptable+0x48>
    2d8c:	db d8       	rcall	.-3658   	; 0x1f44 <sync_post_eq+0xe>
    2d8e:	d5 d2       	rcall	.+1450   	; 0x333a <waves+0x63a>
    2d90:	cf cd       	rjmp	.-1122   	; 0x2930 <ProcessMusic+0x3ac>
    2d92:	ca c7       	rjmp	.+3988   	; 0x3d28 <update+0x400>
    2d94:	c4 c1       	rjmp	.+904    	; 0x311e <waves+0x41e>
    2d96:	bf bc       	out	0x2f, r11	; 47
    2d98:	b9 b7       	in	r27, 0x39	; 57
    2d9a:	b4 b2       	in	r11, 0x14	; 20
    2d9c:	af ad       	ldd	r26, Y+63	; 0x3f
    2d9e:	ab a8       	ldd	r10, Y+51	; 0x33
    2da0:	a6 a4       	ldd	r10, Z+46	; 0x2e
    2da2:	a2 a0       	ldd	r10, Z+34	; 0x22
    2da4:	9e 9c       	mul	r9, r14
    2da6:	9a 98       	cbi	0x13, 2	; 19
    2da8:	96 95       	lsr	r25
    2daa:	93 91       	.word	0x9193	; ????
    2dac:	90 8f       	std	Z+24, r25	; 0x18
    2dae:	8d 8c       	ldd	r8, Y+29	; 0x1d
    2db0:	8b 8a       	std	Y+19, r8	; 0x13
    2db2:	88 87       	std	Y+8, r24	; 0x08
    2db4:	86 86       	std	Z+14, r8	; 0x0e
    2db6:	85 84       	ldd	r8, Z+13	; 0x0d
    2db8:	83 83       	std	Z+3, r24	; 0x03
    2dba:	82 82       	std	Z+2, r8	; 0x02
    2dbc:	82 81       	ldd	r24, Z+2	; 0x02
    2dbe:	81 81       	ldd	r24, Z+1	; 0x01
    2dc0:	81 81       	ldd	r24, Z+1	; 0x01
    2dc2:	81 81       	ldd	r24, Z+1	; 0x01
    2dc4:	82 82       	std	Z+2, r8	; 0x02
    2dc6:	82 83       	std	Z+2, r24	; 0x02
    2dc8:	83 84       	ldd	r8, Z+11	; 0x0b
    2dca:	85 86       	std	Z+13, r8	; 0x0d
    2dcc:	86 87       	std	Z+14, r24	; 0x0e
    2dce:	88 8a       	std	Y+16, r8	; 0x10
    2dd0:	8b 8c       	ldd	r8, Y+27	; 0x1b
    2dd2:	8d 8f       	std	Y+29, r24	; 0x1d
    2dd4:	90 91 93 95 	lds	r25, 0x9593	; 0x809593 <__bss_end+0x8bd2>
    2dd8:	96 98       	cbi	0x12, 6	; 18
    2dda:	9a 9c       	mul	r9, r10
    2ddc:	9e a0       	ldd	r9, Y+38	; 0x26
    2dde:	a2 a4       	ldd	r10, Z+42	; 0x2a
    2de0:	a6 a8       	ldd	r10, Z+54	; 0x36
    2de2:	ab ad       	ldd	r26, Y+59	; 0x3b
    2de4:	af b2       	in	r10, 0x1f	; 31
    2de6:	b4 b7       	in	r27, 0x34	; 52
    2de8:	b9 bc       	out	0x29, r11	; 41
    2dea:	bf c1       	rjmp	.+894    	; 0x316a <waves+0x46a>
    2dec:	c4 c7       	rjmp	.+3976   	; 0x3d76 <update+0x44e>
    2dee:	ca cd       	rjmp	.-1132   	; 0x2984 <TriggerCommon+0x2>
    2df0:	cf d2       	rcall	.+1438   	; 0x3390 <waves+0x690>
    2df2:	d5 d8       	rcall	.-3670   	; 0x1f9e <sync_hsync+0x36>
    2df4:	db de       	rcall	.-586    	; 0x2bac <steptable+0xa6>
    2df6:	e1 e4       	ldi	r30, 0x41	; 65
    2df8:	e7 ea       	ldi	r30, 0xA7	; 167
    2dfa:	ed f0       	brhs	.+58     	; 0x2e36 <waves+0x136>
    2dfc:	f4 f7       	brge	.-4      	; 0x2dfa <waves+0xfa>
    2dfe:	fa fd       	.word	0xfdfa	; ????
    2e00:	80 81       	ld	r24, Z
    2e02:	82 83       	std	Z+2, r24	; 0x02
    2e04:	84 85       	ldd	r24, Z+12	; 0x0c
    2e06:	86 87       	std	Z+14, r24	; 0x0e
    2e08:	88 89       	ldd	r24, Y+16	; 0x10
    2e0a:	8a 8b       	std	Y+18, r24	; 0x12
    2e0c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2e0e:	8e 8f       	std	Y+30, r24	; 0x1e
    2e10:	90 91 92 93 	lds	r25, 0x9392	; 0x809392 <__bss_end+0x89d1>
    2e14:	94 95       	.word	0x9594	; ????
    2e16:	96 97       	sbiw	r26, 0x26	; 38
    2e18:	98 99       	sbic	0x13, 0	; 19
    2e1a:	9a 9b       	sbis	0x13, 2	; 19
    2e1c:	9c 9d       	mul	r25, r12
    2e1e:	9e 9f       	mul	r25, r30
    2e20:	a0 a1       	ldd	r26, Z+32	; 0x20
    2e22:	a2 a3       	std	Z+34, r26	; 0x22
    2e24:	a4 a5       	ldd	r26, Z+44	; 0x2c
    2e26:	a6 a7       	std	Z+46, r26	; 0x2e
    2e28:	a8 a9       	ldd	r26, Y+48	; 0x30
    2e2a:	aa ab       	std	Y+50, r26	; 0x32
    2e2c:	ac ad       	ldd	r26, Y+60	; 0x3c
    2e2e:	ae af       	std	Y+62, r26	; 0x3e
    2e30:	b0 b1       	in	r27, 0x00	; 0
    2e32:	b2 b3       	in	r27, 0x12	; 18
    2e34:	b4 b5       	in	r27, 0x24	; 36
    2e36:	b6 b7       	in	r27, 0x36	; 54
    2e38:	b8 b9       	out	0x08, r27	; 8
    2e3a:	ba bb       	out	0x1a, r27	; 26
    2e3c:	bc bd       	out	0x2c, r27	; 44
    2e3e:	be bf       	out	0x3e, r27	; 62
    2e40:	c0 c1       	rjmp	.+896    	; 0x31c2 <waves+0x4c2>
    2e42:	c2 c3       	rjmp	.+1924   	; 0x35c8 <waves+0x8c8>
    2e44:	c4 c5       	rjmp	.+2952   	; 0x39ce <update+0xa6>
    2e46:	c6 c7       	rjmp	.+3980   	; 0x3dd4 <draw+0x32>
    2e48:	c8 c9       	rjmp	.-3184   	; 0x21da <no_shift+0x70>
    2e4a:	ca cb       	rjmp	.-2156   	; 0x25e0 <ProcessMusic+0x5c>
    2e4c:	cc cd       	rjmp	.-1128   	; 0x29e6 <TriggerCommon+0x64>
    2e4e:	ce cf       	rjmp	.-100    	; 0x2dec <waves+0xec>
    2e50:	d0 d1       	rcall	.+928    	; 0x31f2 <waves+0x4f2>
    2e52:	d2 d3       	rcall	.+1956   	; 0x35f8 <waves+0x8f8>
    2e54:	d4 d5       	rcall	.+2984   	; 0x39fe <update+0xd6>
    2e56:	d6 d7       	rcall	.+4012   	; 0x3e04 <draw+0x62>
    2e58:	d8 d9       	rcall	.-3152   	; 0x220a <update_sound_buffer_fast+0x1a>
    2e5a:	da db       	rcall	.-2124   	; 0x2610 <ProcessMusic+0x8c>
    2e5c:	dc dd       	rcall	.-1096   	; 0x2a16 <TriggerCommon+0x94>
    2e5e:	de df       	rcall	.-68     	; 0x2e1c <waves+0x11c>
    2e60:	e0 e1       	ldi	r30, 0x10	; 16
    2e62:	e2 e3       	ldi	r30, 0x32	; 50
    2e64:	e4 e5       	ldi	r30, 0x54	; 84
    2e66:	e6 e7       	ldi	r30, 0x76	; 118
    2e68:	e8 e9       	ldi	r30, 0x98	; 152
    2e6a:	ea eb       	ldi	r30, 0xBA	; 186
    2e6c:	ec ed       	ldi	r30, 0xDC	; 220
    2e6e:	ee ef       	ldi	r30, 0xFE	; 254
    2e70:	f0 f1       	brcs	.+124    	; 0x2eee <waves+0x1ee>
    2e72:	f2 f3       	brmi	.-4      	; 0x2e70 <waves+0x170>
    2e74:	f4 f5       	brge	.+124    	; 0x2ef2 <waves+0x1f2>
    2e76:	f6 f7       	brtc	.-4      	; 0x2e74 <waves+0x174>
    2e78:	f8 f9       	.word	0xf9f8	; ????
    2e7a:	fa fb       	.word	0xfbfa	; ????
    2e7c:	fc fd       	.word	0xfdfc	; ????
    2e7e:	fe ff       	.word	0xfffe	; ????
    2e80:	00 01       	movw	r0, r0
    2e82:	02 03       	mulsu	r16, r18
    2e84:	04 05       	cpc	r16, r4
    2e86:	06 07       	cpc	r16, r22
    2e88:	08 09       	sbc	r16, r8
    2e8a:	0a 0b       	sbc	r16, r26
    2e8c:	0c 0d       	add	r16, r12
    2e8e:	0e 0f       	add	r16, r30
    2e90:	10 11       	cpse	r17, r0
    2e92:	12 13       	cpse	r17, r18
    2e94:	14 15       	cp	r17, r4
    2e96:	16 17       	cp	r17, r22
    2e98:	18 19       	sub	r17, r8
    2e9a:	1a 1b       	sub	r17, r26
    2e9c:	1c 1d       	adc	r17, r12
    2e9e:	1e 1f       	adc	r17, r30
    2ea0:	20 21       	and	r18, r0
    2ea2:	22 23       	and	r18, r18
    2ea4:	24 25       	eor	r18, r4
    2ea6:	26 27       	eor	r18, r22
    2ea8:	28 29       	or	r18, r8
    2eaa:	2a 2b       	or	r18, r26
    2eac:	2c 2d       	mov	r18, r12
    2eae:	2e 2f       	mov	r18, r30
    2eb0:	30 31       	cpi	r19, 0x10	; 16
    2eb2:	32 33       	cpi	r19, 0x32	; 50
    2eb4:	34 35       	cpi	r19, 0x54	; 84
    2eb6:	36 37       	cpi	r19, 0x76	; 118
    2eb8:	38 39       	cpi	r19, 0x98	; 152
    2eba:	3a 3b       	cpi	r19, 0xBA	; 186
    2ebc:	3c 3d       	cpi	r19, 0xDC	; 220
    2ebe:	3e 3f       	cpi	r19, 0xFE	; 254
    2ec0:	40 41       	sbci	r20, 0x10	; 16
    2ec2:	42 43       	sbci	r20, 0x32	; 50
    2ec4:	44 45       	sbci	r20, 0x54	; 84
    2ec6:	46 47       	sbci	r20, 0x76	; 118
    2ec8:	48 49       	sbci	r20, 0x98	; 152
    2eca:	4a 4b       	sbci	r20, 0xBA	; 186
    2ecc:	4c 4d       	sbci	r20, 0xDC	; 220
    2ece:	4e 4f       	sbci	r20, 0xFE	; 254
    2ed0:	50 51       	subi	r21, 0x10	; 16
    2ed2:	52 53       	subi	r21, 0x32	; 50
    2ed4:	54 55       	subi	r21, 0x54	; 84
    2ed6:	56 57       	subi	r21, 0x76	; 118
    2ed8:	58 59       	subi	r21, 0x98	; 152
    2eda:	5a 5b       	subi	r21, 0xBA	; 186
    2edc:	5c 5d       	subi	r21, 0xDC	; 220
    2ede:	5e 5f       	subi	r21, 0xFE	; 254
    2ee0:	60 61       	ori	r22, 0x10	; 16
    2ee2:	62 63       	ori	r22, 0x32	; 50
    2ee4:	64 65       	ori	r22, 0x54	; 84
    2ee6:	66 67       	ori	r22, 0x76	; 118
    2ee8:	68 69       	ori	r22, 0x98	; 152
    2eea:	6a 6b       	ori	r22, 0xBA	; 186
    2eec:	6c 6d       	ori	r22, 0xDC	; 220
    2eee:	6e 6f       	ori	r22, 0xFE	; 254
    2ef0:	70 71       	andi	r23, 0x10	; 16
    2ef2:	72 73       	andi	r23, 0x32	; 50
    2ef4:	74 75       	andi	r23, 0x54	; 84
    2ef6:	76 77       	andi	r23, 0x76	; 118
    2ef8:	78 79       	andi	r23, 0x98	; 152
    2efa:	7a 7b       	andi	r23, 0xBA	; 186
    2efc:	7c 7d       	andi	r23, 0xDC	; 220
    2efe:	7e 7f       	andi	r23, 0xFE	; 254
    2f00:	00 02       	muls	r16, r16
    2f02:	04 06       	cpc	r0, r20
    2f04:	08 0a       	sbc	r0, r24
    2f06:	0c 0e       	add	r0, r28
    2f08:	10 12       	cpse	r1, r16
    2f0a:	14 16       	cp	r1, r20
    2f0c:	18 1a       	sub	r1, r24
    2f0e:	1c 1e       	adc	r1, r28
    2f10:	20 22       	and	r2, r16
    2f12:	24 26       	eor	r2, r20
    2f14:	28 2a       	or	r2, r24
    2f16:	2c 2e       	mov	r2, r28
    2f18:	30 32       	cpi	r19, 0x20	; 32
    2f1a:	34 36       	cpi	r19, 0x64	; 100
    2f1c:	38 3a       	cpi	r19, 0xA8	; 168
    2f1e:	3c 3e       	cpi	r19, 0xEC	; 236
    2f20:	40 42       	sbci	r20, 0x20	; 32
    2f22:	44 46       	sbci	r20, 0x64	; 100
    2f24:	48 4a       	sbci	r20, 0xA8	; 168
    2f26:	4c 4e       	sbci	r20, 0xEC	; 236
    2f28:	50 52       	subi	r21, 0x20	; 32
    2f2a:	54 56       	subi	r21, 0x64	; 100
    2f2c:	58 5a       	subi	r21, 0xA8	; 168
    2f2e:	5c 5e       	subi	r21, 0xEC	; 236
    2f30:	60 62       	ori	r22, 0x20	; 32
    2f32:	64 66       	ori	r22, 0x64	; 100
    2f34:	68 6a       	ori	r22, 0xA8	; 168
    2f36:	6c 6e       	ori	r22, 0xEC	; 236
    2f38:	70 72       	andi	r23, 0x20	; 32
    2f3a:	74 76       	andi	r23, 0x64	; 100
    2f3c:	78 7a       	andi	r23, 0xA8	; 168
    2f3e:	7c 7e       	andi	r23, 0xEC	; 236
    2f40:	7f 7d       	andi	r23, 0xDF	; 223
    2f42:	7b 79       	andi	r23, 0x9B	; 155
    2f44:	77 75       	andi	r23, 0x57	; 87
    2f46:	73 71       	andi	r23, 0x13	; 19
    2f48:	6f 6d       	ori	r22, 0xDF	; 223
    2f4a:	6b 69       	ori	r22, 0x9B	; 155
    2f4c:	67 65       	ori	r22, 0x57	; 87
    2f4e:	63 61       	ori	r22, 0x13	; 19
    2f50:	5f 5d       	subi	r21, 0xDF	; 223
    2f52:	5b 59       	subi	r21, 0x9B	; 155
    2f54:	57 55       	subi	r21, 0x57	; 87
    2f56:	53 51       	subi	r21, 0x13	; 19
    2f58:	4f 4d       	sbci	r20, 0xDF	; 223
    2f5a:	4b 49       	sbci	r20, 0x9B	; 155
    2f5c:	47 45       	sbci	r20, 0x57	; 87
    2f5e:	43 41       	sbci	r20, 0x13	; 19
    2f60:	3f 3d       	cpi	r19, 0xDF	; 223
    2f62:	3b 39       	cpi	r19, 0x9B	; 155
    2f64:	37 35       	cpi	r19, 0x57	; 87
    2f66:	33 31       	cpi	r19, 0x13	; 19
    2f68:	2f 2d       	mov	r18, r15
    2f6a:	2b 29       	or	r18, r11
    2f6c:	27 25       	eor	r18, r7
    2f6e:	23 21       	and	r18, r3
    2f70:	1f 1d       	adc	r17, r15
    2f72:	1b 19       	sub	r17, r11
    2f74:	17 15       	cp	r17, r7
    2f76:	13 11       	cpse	r17, r3
    2f78:	0f 0d       	add	r16, r15
    2f7a:	0b 09       	sbc	r16, r11
    2f7c:	07 05       	cpc	r16, r7
    2f7e:	03 01       	movw	r0, r6
    2f80:	ff fd       	.word	0xfdff	; ????
    2f82:	fb f9       	.word	0xf9fb	; ????
    2f84:	f7 f5       	brid	.+124    	; 0x3002 <waves+0x302>
    2f86:	f3 f1       	brvs	.+124    	; 0x3004 <waves+0x304>
    2f88:	ef ed       	ldi	r30, 0xDF	; 223
    2f8a:	eb e9       	ldi	r30, 0x9B	; 155
    2f8c:	e7 e5       	ldi	r30, 0x57	; 87
    2f8e:	e3 e1       	ldi	r30, 0x13	; 19
    2f90:	df dd       	rcall	.-1090   	; 0x2b50 <steptable+0x4a>
    2f92:	db d9       	rcall	.-3146   	; 0x234a <ReadButtons+0x1c>
    2f94:	d7 d5       	rcall	.+2990   	; 0x3b44 <update+0x21c>
    2f96:	d3 d1       	rcall	.+934    	; 0x333e <waves+0x63e>
    2f98:	cf cd       	rjmp	.-1122   	; 0x2b38 <steptable+0x32>
    2f9a:	cb c9       	rjmp	.-3178   	; 0x2332 <ReadButtons+0x4>
    2f9c:	c7 c5       	rjmp	.+2958   	; 0x3b2c <update+0x204>
    2f9e:	c3 c1       	rjmp	.+902    	; 0x3326 <waves+0x626>
    2fa0:	bf bd       	out	0x2f, r27	; 47
    2fa2:	bb b9       	out	0x0b, r27	; 11
    2fa4:	b7 b5       	in	r27, 0x27	; 39
    2fa6:	b3 b1       	in	r27, 0x03	; 3
    2fa8:	af ad       	ldd	r26, Y+63	; 0x3f
    2faa:	ab a9       	ldd	r26, Y+51	; 0x33
    2fac:	a7 a5       	ldd	r26, Z+47	; 0x2f
    2fae:	a3 a1       	ldd	r26, Z+35	; 0x23
    2fb0:	9f 9d       	mul	r25, r15
    2fb2:	9b 99       	sbic	0x13, 3	; 19
    2fb4:	97 95       	ror	r25
    2fb6:	93 91       	.word	0x9193	; ????
    2fb8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2fba:	8b 89       	ldd	r24, Y+19	; 0x13
    2fbc:	87 85       	ldd	r24, Z+15	; 0x0f
    2fbe:	83 81       	ldd	r24, Z+3	; 0x03
    2fc0:	80 82       	st	Z, r8
    2fc2:	84 86       	std	Z+12, r8	; 0x0c
    2fc4:	88 8a       	std	Y+16, r8	; 0x10
    2fc6:	8c 8e       	std	Y+28, r8	; 0x1c
    2fc8:	90 92 94 96 	sts	0x9694, r9	; 0x809694 <__bss_end+0x8cd3>
    2fcc:	98 9a       	sbi	0x13, 0	; 19
    2fce:	9c 9e       	mul	r9, r28
    2fd0:	a0 a2       	std	Z+32, r10	; 0x20
    2fd2:	a4 a6       	std	Z+44, r10	; 0x2c
    2fd4:	a8 aa       	std	Y+48, r10	; 0x30
    2fd6:	ac ae       	std	Y+60, r10	; 0x3c
    2fd8:	b0 b2       	in	r11, 0x10	; 16
    2fda:	b4 b6       	in	r11, 0x34	; 52
    2fdc:	b8 ba       	out	0x18, r11	; 24
    2fde:	bc be       	out	0x3c, r11	; 60
    2fe0:	c0 c2       	rjmp	.+1408   	; 0x3562 <waves+0x862>
    2fe2:	c4 c6       	rjmp	.+3464   	; 0x3d6c <update+0x444>
    2fe4:	c8 ca       	rjmp	.-2672   	; 0x2576 <PatchCommand14+0x46>
    2fe6:	cc ce       	rjmp	.-616    	; 0x2d80 <waves+0x80>
    2fe8:	d0 d2       	rcall	.+1440   	; 0x358a <waves+0x88a>
    2fea:	d4 d6       	rcall	.+3496   	; 0x3d94 <update+0x46c>
    2fec:	d8 da       	rcall	.-2640   	; 0x259e <ProcessMusic+0x1a>
    2fee:	dc de       	rcall	.-584    	; 0x2da8 <waves+0xa8>
    2ff0:	e0 e2       	ldi	r30, 0x20	; 32
    2ff2:	e4 e6       	ldi	r30, 0x64	; 100
    2ff4:	e8 ea       	ldi	r30, 0xA8	; 168
    2ff6:	ec ee       	ldi	r30, 0xEC	; 236
    2ff8:	f0 f2       	brcs	.-68     	; 0x2fb6 <waves+0x2b6>
    2ffa:	f4 f6       	brge	.-68     	; 0x2fb8 <waves+0x2b8>
    2ffc:	f8 fa       	.word	0xfaf8	; ????
    2ffe:	fc fe       	.word	0xfefc	; ????
    3000:	7f 7f       	andi	r23, 0xFF	; 255
    3002:	7f 7f       	andi	r23, 0xFF	; 255
    3004:	7f 7f       	andi	r23, 0xFF	; 255
    3006:	7f 7f       	andi	r23, 0xFF	; 255
    3008:	7f 7f       	andi	r23, 0xFF	; 255
    300a:	7f 7f       	andi	r23, 0xFF	; 255
    300c:	7f 7f       	andi	r23, 0xFF	; 255
    300e:	7f 7f       	andi	r23, 0xFF	; 255
    3010:	7f 7f       	andi	r23, 0xFF	; 255
    3012:	7f 7f       	andi	r23, 0xFF	; 255
    3014:	7f 7f       	andi	r23, 0xFF	; 255
    3016:	7f 7f       	andi	r23, 0xFF	; 255
    3018:	7f 7f       	andi	r23, 0xFF	; 255
    301a:	7f 7f       	andi	r23, 0xFF	; 255
    301c:	7f 7f       	andi	r23, 0xFF	; 255
    301e:	7f 7f       	andi	r23, 0xFF	; 255
    3020:	7f 7f       	andi	r23, 0xFF	; 255
    3022:	7f 7f       	andi	r23, 0xFF	; 255
    3024:	7f 7f       	andi	r23, 0xFF	; 255
    3026:	7f 7f       	andi	r23, 0xFF	; 255
    3028:	7f 7f       	andi	r23, 0xFF	; 255
    302a:	7f 7f       	andi	r23, 0xFF	; 255
    302c:	7f 7f       	andi	r23, 0xFF	; 255
    302e:	7f 7f       	andi	r23, 0xFF	; 255
    3030:	7f 7f       	andi	r23, 0xFF	; 255
    3032:	7f 7f       	andi	r23, 0xFF	; 255
    3034:	7f 7f       	andi	r23, 0xFF	; 255
    3036:	7f 7f       	andi	r23, 0xFF	; 255
    3038:	7f 7f       	andi	r23, 0xFF	; 255
    303a:	7f 7f       	andi	r23, 0xFF	; 255
    303c:	7f 7f       	andi	r23, 0xFF	; 255
    303e:	7f 7f       	andi	r23, 0xFF	; 255
    3040:	80 80       	ld	r8, Z
    3042:	80 80       	ld	r8, Z
    3044:	80 80       	ld	r8, Z
    3046:	80 80       	ld	r8, Z
    3048:	80 80       	ld	r8, Z
    304a:	80 80       	ld	r8, Z
    304c:	80 80       	ld	r8, Z
    304e:	80 80       	ld	r8, Z
    3050:	80 80       	ld	r8, Z
    3052:	80 80       	ld	r8, Z
    3054:	80 80       	ld	r8, Z
    3056:	80 80       	ld	r8, Z
    3058:	80 80       	ld	r8, Z
    305a:	80 80       	ld	r8, Z
    305c:	80 80       	ld	r8, Z
    305e:	80 80       	ld	r8, Z
    3060:	80 80       	ld	r8, Z
    3062:	80 80       	ld	r8, Z
    3064:	80 80       	ld	r8, Z
    3066:	80 80       	ld	r8, Z
    3068:	80 80       	ld	r8, Z
    306a:	80 80       	ld	r8, Z
    306c:	80 80       	ld	r8, Z
    306e:	80 80       	ld	r8, Z
    3070:	80 80       	ld	r8, Z
    3072:	80 80       	ld	r8, Z
    3074:	80 80       	ld	r8, Z
    3076:	80 80       	ld	r8, Z
    3078:	80 80       	ld	r8, Z
    307a:	80 80       	ld	r8, Z
    307c:	80 80       	ld	r8, Z
    307e:	80 80       	ld	r8, Z
    3080:	80 80       	ld	r8, Z
    3082:	80 80       	ld	r8, Z
    3084:	80 80       	ld	r8, Z
    3086:	80 80       	ld	r8, Z
    3088:	80 80       	ld	r8, Z
    308a:	80 80       	ld	r8, Z
    308c:	80 80       	ld	r8, Z
    308e:	80 80       	ld	r8, Z
    3090:	80 80       	ld	r8, Z
    3092:	80 80       	ld	r8, Z
    3094:	80 80       	ld	r8, Z
    3096:	80 80       	ld	r8, Z
    3098:	80 80       	ld	r8, Z
    309a:	80 80       	ld	r8, Z
    309c:	80 80       	ld	r8, Z
    309e:	80 80       	ld	r8, Z
    30a0:	80 80       	ld	r8, Z
    30a2:	80 80       	ld	r8, Z
    30a4:	80 80       	ld	r8, Z
    30a6:	80 80       	ld	r8, Z
    30a8:	80 80       	ld	r8, Z
    30aa:	80 80       	ld	r8, Z
    30ac:	80 80       	ld	r8, Z
    30ae:	80 80       	ld	r8, Z
    30b0:	80 80       	ld	r8, Z
    30b2:	80 80       	ld	r8, Z
    30b4:	80 80       	ld	r8, Z
    30b6:	80 80       	ld	r8, Z
    30b8:	80 80       	ld	r8, Z
    30ba:	80 80       	ld	r8, Z
    30bc:	80 80       	ld	r8, Z
    30be:	80 80       	ld	r8, Z
    30c0:	80 80       	ld	r8, Z
    30c2:	80 80       	ld	r8, Z
    30c4:	80 80       	ld	r8, Z
    30c6:	80 80       	ld	r8, Z
    30c8:	80 80       	ld	r8, Z
    30ca:	80 80       	ld	r8, Z
    30cc:	80 80       	ld	r8, Z
    30ce:	80 80       	ld	r8, Z
    30d0:	80 80       	ld	r8, Z
    30d2:	80 80       	ld	r8, Z
    30d4:	80 80       	ld	r8, Z
    30d6:	80 80       	ld	r8, Z
    30d8:	80 80       	ld	r8, Z
    30da:	80 80       	ld	r8, Z
    30dc:	80 80       	ld	r8, Z
    30de:	80 80       	ld	r8, Z
    30e0:	80 80       	ld	r8, Z
    30e2:	80 80       	ld	r8, Z
    30e4:	80 80       	ld	r8, Z
    30e6:	80 80       	ld	r8, Z
    30e8:	80 80       	ld	r8, Z
    30ea:	80 80       	ld	r8, Z
    30ec:	80 80       	ld	r8, Z
    30ee:	80 80       	ld	r8, Z
    30f0:	80 80       	ld	r8, Z
    30f2:	80 80       	ld	r8, Z
    30f4:	80 80       	ld	r8, Z
    30f6:	80 80       	ld	r8, Z
    30f8:	80 80       	ld	r8, Z
    30fa:	80 80       	ld	r8, Z
    30fc:	80 80       	ld	r8, Z
    30fe:	80 80       	ld	r8, Z
    3100:	7f 7f       	andi	r23, 0xFF	; 255
    3102:	7f 7f       	andi	r23, 0xFF	; 255
    3104:	7f 7f       	andi	r23, 0xFF	; 255
    3106:	7f 7f       	andi	r23, 0xFF	; 255
    3108:	7f 7f       	andi	r23, 0xFF	; 255
    310a:	7f 7f       	andi	r23, 0xFF	; 255
    310c:	7f 7f       	andi	r23, 0xFF	; 255
    310e:	7f 7f       	andi	r23, 0xFF	; 255
    3110:	7f 7f       	andi	r23, 0xFF	; 255
    3112:	7f 7f       	andi	r23, 0xFF	; 255
    3114:	7f 7f       	andi	r23, 0xFF	; 255
    3116:	7f 7f       	andi	r23, 0xFF	; 255
    3118:	7f 7f       	andi	r23, 0xFF	; 255
    311a:	7f 7f       	andi	r23, 0xFF	; 255
    311c:	7f 7f       	andi	r23, 0xFF	; 255
    311e:	7f 7f       	andi	r23, 0xFF	; 255
    3120:	7f 7f       	andi	r23, 0xFF	; 255
    3122:	7f 7f       	andi	r23, 0xFF	; 255
    3124:	7f 7f       	andi	r23, 0xFF	; 255
    3126:	7f 7f       	andi	r23, 0xFF	; 255
    3128:	7f 7f       	andi	r23, 0xFF	; 255
    312a:	7f 7f       	andi	r23, 0xFF	; 255
    312c:	7f 7f       	andi	r23, 0xFF	; 255
    312e:	7f 7f       	andi	r23, 0xFF	; 255
    3130:	7f 7f       	andi	r23, 0xFF	; 255
    3132:	7f 7f       	andi	r23, 0xFF	; 255
    3134:	7f 7f       	andi	r23, 0xFF	; 255
    3136:	7f 7f       	andi	r23, 0xFF	; 255
    3138:	7f 7f       	andi	r23, 0xFF	; 255
    313a:	7f 7f       	andi	r23, 0xFF	; 255
    313c:	7f 7f       	andi	r23, 0xFF	; 255
    313e:	7f 7f       	andi	r23, 0xFF	; 255
    3140:	7f 7f       	andi	r23, 0xFF	; 255
    3142:	7f 7f       	andi	r23, 0xFF	; 255
    3144:	7f 7f       	andi	r23, 0xFF	; 255
    3146:	7f 7f       	andi	r23, 0xFF	; 255
    3148:	7f 7f       	andi	r23, 0xFF	; 255
    314a:	7f 7f       	andi	r23, 0xFF	; 255
    314c:	7f 7f       	andi	r23, 0xFF	; 255
    314e:	7f 7f       	andi	r23, 0xFF	; 255
    3150:	7f 7f       	andi	r23, 0xFF	; 255
    3152:	7f 7f       	andi	r23, 0xFF	; 255
    3154:	7f 7f       	andi	r23, 0xFF	; 255
    3156:	7f 7f       	andi	r23, 0xFF	; 255
    3158:	7f 7f       	andi	r23, 0xFF	; 255
    315a:	7f 7f       	andi	r23, 0xFF	; 255
    315c:	7f 7f       	andi	r23, 0xFF	; 255
    315e:	7f 7f       	andi	r23, 0xFF	; 255
    3160:	7f 7f       	andi	r23, 0xFF	; 255
    3162:	7f 7f       	andi	r23, 0xFF	; 255
    3164:	7f 7f       	andi	r23, 0xFF	; 255
    3166:	7f 7f       	andi	r23, 0xFF	; 255
    3168:	7f 7f       	andi	r23, 0xFF	; 255
    316a:	7f 7f       	andi	r23, 0xFF	; 255
    316c:	7f 7f       	andi	r23, 0xFF	; 255
    316e:	7f 7f       	andi	r23, 0xFF	; 255
    3170:	7f 7f       	andi	r23, 0xFF	; 255
    3172:	7f 7f       	andi	r23, 0xFF	; 255
    3174:	7f 7f       	andi	r23, 0xFF	; 255
    3176:	7f 7f       	andi	r23, 0xFF	; 255
    3178:	7f 7f       	andi	r23, 0xFF	; 255
    317a:	7f 7f       	andi	r23, 0xFF	; 255
    317c:	7f 7f       	andi	r23, 0xFF	; 255
    317e:	7f 7f       	andi	r23, 0xFF	; 255
    3180:	80 80       	ld	r8, Z
    3182:	80 80       	ld	r8, Z
    3184:	80 80       	ld	r8, Z
    3186:	80 80       	ld	r8, Z
    3188:	80 80       	ld	r8, Z
    318a:	80 80       	ld	r8, Z
    318c:	80 80       	ld	r8, Z
    318e:	80 80       	ld	r8, Z
    3190:	80 80       	ld	r8, Z
    3192:	80 80       	ld	r8, Z
    3194:	80 80       	ld	r8, Z
    3196:	80 80       	ld	r8, Z
    3198:	80 80       	ld	r8, Z
    319a:	80 80       	ld	r8, Z
    319c:	80 80       	ld	r8, Z
    319e:	80 80       	ld	r8, Z
    31a0:	80 80       	ld	r8, Z
    31a2:	80 80       	ld	r8, Z
    31a4:	80 80       	ld	r8, Z
    31a6:	80 80       	ld	r8, Z
    31a8:	80 80       	ld	r8, Z
    31aa:	80 80       	ld	r8, Z
    31ac:	80 80       	ld	r8, Z
    31ae:	80 80       	ld	r8, Z
    31b0:	80 80       	ld	r8, Z
    31b2:	80 80       	ld	r8, Z
    31b4:	80 80       	ld	r8, Z
    31b6:	80 80       	ld	r8, Z
    31b8:	80 80       	ld	r8, Z
    31ba:	80 80       	ld	r8, Z
    31bc:	80 80       	ld	r8, Z
    31be:	80 80       	ld	r8, Z
    31c0:	80 80       	ld	r8, Z
    31c2:	80 80       	ld	r8, Z
    31c4:	80 80       	ld	r8, Z
    31c6:	80 80       	ld	r8, Z
    31c8:	80 80       	ld	r8, Z
    31ca:	80 80       	ld	r8, Z
    31cc:	80 80       	ld	r8, Z
    31ce:	80 80       	ld	r8, Z
    31d0:	80 80       	ld	r8, Z
    31d2:	80 80       	ld	r8, Z
    31d4:	80 80       	ld	r8, Z
    31d6:	80 80       	ld	r8, Z
    31d8:	80 80       	ld	r8, Z
    31da:	80 80       	ld	r8, Z
    31dc:	80 80       	ld	r8, Z
    31de:	80 80       	ld	r8, Z
    31e0:	80 80       	ld	r8, Z
    31e2:	80 80       	ld	r8, Z
    31e4:	80 80       	ld	r8, Z
    31e6:	80 80       	ld	r8, Z
    31e8:	80 80       	ld	r8, Z
    31ea:	80 80       	ld	r8, Z
    31ec:	80 80       	ld	r8, Z
    31ee:	80 80       	ld	r8, Z
    31f0:	80 80       	ld	r8, Z
    31f2:	80 80       	ld	r8, Z
    31f4:	80 80       	ld	r8, Z
    31f6:	80 80       	ld	r8, Z
    31f8:	80 80       	ld	r8, Z
    31fa:	80 80       	ld	r8, Z
    31fc:	80 80       	ld	r8, Z
    31fe:	80 80       	ld	r8, Z
    3200:	7f 7f       	andi	r23, 0xFF	; 255
    3202:	7f 7f       	andi	r23, 0xFF	; 255
    3204:	7f 7f       	andi	r23, 0xFF	; 255
    3206:	7f 7f       	andi	r23, 0xFF	; 255
    3208:	7f 7f       	andi	r23, 0xFF	; 255
    320a:	7f 7f       	andi	r23, 0xFF	; 255
    320c:	7f 7f       	andi	r23, 0xFF	; 255
    320e:	7f 7f       	andi	r23, 0xFF	; 255
    3210:	7f 7f       	andi	r23, 0xFF	; 255
    3212:	7f 7f       	andi	r23, 0xFF	; 255
    3214:	7f 7f       	andi	r23, 0xFF	; 255
    3216:	7f 7f       	andi	r23, 0xFF	; 255
    3218:	7f 7f       	andi	r23, 0xFF	; 255
    321a:	7f 7f       	andi	r23, 0xFF	; 255
    321c:	7f 7f       	andi	r23, 0xFF	; 255
    321e:	7f 7f       	andi	r23, 0xFF	; 255
    3220:	7f 7f       	andi	r23, 0xFF	; 255
    3222:	7f 7f       	andi	r23, 0xFF	; 255
    3224:	7f 7f       	andi	r23, 0xFF	; 255
    3226:	7f 7f       	andi	r23, 0xFF	; 255
    3228:	7f 7f       	andi	r23, 0xFF	; 255
    322a:	7f 7f       	andi	r23, 0xFF	; 255
    322c:	7f 7f       	andi	r23, 0xFF	; 255
    322e:	7f 7f       	andi	r23, 0xFF	; 255
    3230:	7f 7f       	andi	r23, 0xFF	; 255
    3232:	7f 7f       	andi	r23, 0xFF	; 255
    3234:	7f 7f       	andi	r23, 0xFF	; 255
    3236:	7f 7f       	andi	r23, 0xFF	; 255
    3238:	7f 7f       	andi	r23, 0xFF	; 255
    323a:	7f 7f       	andi	r23, 0xFF	; 255
    323c:	7f 7f       	andi	r23, 0xFF	; 255
    323e:	7f 7f       	andi	r23, 0xFF	; 255
    3240:	7f 7f       	andi	r23, 0xFF	; 255
    3242:	7f 7f       	andi	r23, 0xFF	; 255
    3244:	7f 7f       	andi	r23, 0xFF	; 255
    3246:	7f 7f       	andi	r23, 0xFF	; 255
    3248:	7f 7f       	andi	r23, 0xFF	; 255
    324a:	7f 7f       	andi	r23, 0xFF	; 255
    324c:	7f 7f       	andi	r23, 0xFF	; 255
    324e:	7f 7f       	andi	r23, 0xFF	; 255
    3250:	7f 7f       	andi	r23, 0xFF	; 255
    3252:	7f 7f       	andi	r23, 0xFF	; 255
    3254:	7f 7f       	andi	r23, 0xFF	; 255
    3256:	7f 7f       	andi	r23, 0xFF	; 255
    3258:	7f 7f       	andi	r23, 0xFF	; 255
    325a:	7f 7f       	andi	r23, 0xFF	; 255
    325c:	7f 7f       	andi	r23, 0xFF	; 255
    325e:	7f 7f       	andi	r23, 0xFF	; 255
    3260:	7f 7f       	andi	r23, 0xFF	; 255
    3262:	7f 7f       	andi	r23, 0xFF	; 255
    3264:	7f 7f       	andi	r23, 0xFF	; 255
    3266:	7f 7f       	andi	r23, 0xFF	; 255
    3268:	7f 7f       	andi	r23, 0xFF	; 255
    326a:	7f 7f       	andi	r23, 0xFF	; 255
    326c:	7f 7f       	andi	r23, 0xFF	; 255
    326e:	7f 7f       	andi	r23, 0xFF	; 255
    3270:	7f 7f       	andi	r23, 0xFF	; 255
    3272:	7f 7f       	andi	r23, 0xFF	; 255
    3274:	7f 7f       	andi	r23, 0xFF	; 255
    3276:	7f 7f       	andi	r23, 0xFF	; 255
    3278:	7f 7f       	andi	r23, 0xFF	; 255
    327a:	7f 7f       	andi	r23, 0xFF	; 255
    327c:	7f 7f       	andi	r23, 0xFF	; 255
    327e:	7f 7f       	andi	r23, 0xFF	; 255
    3280:	7f 7f       	andi	r23, 0xFF	; 255
    3282:	7f 7f       	andi	r23, 0xFF	; 255
    3284:	7f 7f       	andi	r23, 0xFF	; 255
    3286:	7f 7f       	andi	r23, 0xFF	; 255
    3288:	7f 7f       	andi	r23, 0xFF	; 255
    328a:	7f 7f       	andi	r23, 0xFF	; 255
    328c:	7f 7f       	andi	r23, 0xFF	; 255
    328e:	7f 7f       	andi	r23, 0xFF	; 255
    3290:	7f 7f       	andi	r23, 0xFF	; 255
    3292:	7f 7f       	andi	r23, 0xFF	; 255
    3294:	7f 7f       	andi	r23, 0xFF	; 255
    3296:	7f 7f       	andi	r23, 0xFF	; 255
    3298:	7f 7f       	andi	r23, 0xFF	; 255
    329a:	7f 7f       	andi	r23, 0xFF	; 255
    329c:	7f 7f       	andi	r23, 0xFF	; 255
    329e:	7f 7f       	andi	r23, 0xFF	; 255
    32a0:	7f 7f       	andi	r23, 0xFF	; 255
    32a2:	7f 7f       	andi	r23, 0xFF	; 255
    32a4:	7f 7f       	andi	r23, 0xFF	; 255
    32a6:	7f 7f       	andi	r23, 0xFF	; 255
    32a8:	7f 7f       	andi	r23, 0xFF	; 255
    32aa:	7f 7f       	andi	r23, 0xFF	; 255
    32ac:	7f 7f       	andi	r23, 0xFF	; 255
    32ae:	7f 7f       	andi	r23, 0xFF	; 255
    32b0:	7f 7f       	andi	r23, 0xFF	; 255
    32b2:	7f 7f       	andi	r23, 0xFF	; 255
    32b4:	7f 7f       	andi	r23, 0xFF	; 255
    32b6:	7f 7f       	andi	r23, 0xFF	; 255
    32b8:	7f 7f       	andi	r23, 0xFF	; 255
    32ba:	7f 7f       	andi	r23, 0xFF	; 255
    32bc:	7f 7f       	andi	r23, 0xFF	; 255
    32be:	7f 7f       	andi	r23, 0xFF	; 255
    32c0:	80 80       	ld	r8, Z
    32c2:	80 80       	ld	r8, Z
    32c4:	80 80       	ld	r8, Z
    32c6:	80 80       	ld	r8, Z
    32c8:	80 80       	ld	r8, Z
    32ca:	80 80       	ld	r8, Z
    32cc:	80 80       	ld	r8, Z
    32ce:	80 80       	ld	r8, Z
    32d0:	80 80       	ld	r8, Z
    32d2:	80 80       	ld	r8, Z
    32d4:	80 80       	ld	r8, Z
    32d6:	80 80       	ld	r8, Z
    32d8:	80 80       	ld	r8, Z
    32da:	80 80       	ld	r8, Z
    32dc:	80 80       	ld	r8, Z
    32de:	80 80       	ld	r8, Z
    32e0:	80 80       	ld	r8, Z
    32e2:	80 80       	ld	r8, Z
    32e4:	80 80       	ld	r8, Z
    32e6:	80 80       	ld	r8, Z
    32e8:	80 80       	ld	r8, Z
    32ea:	80 80       	ld	r8, Z
    32ec:	80 80       	ld	r8, Z
    32ee:	80 80       	ld	r8, Z
    32f0:	80 80       	ld	r8, Z
    32f2:	80 80       	ld	r8, Z
    32f4:	80 80       	ld	r8, Z
    32f6:	80 80       	ld	r8, Z
    32f8:	80 80       	ld	r8, Z
    32fa:	80 80       	ld	r8, Z
    32fc:	80 80       	ld	r8, Z
    32fe:	80 80       	ld	r8, Z
    3300:	03 09       	sbc	r16, r3
    3302:	13 1e       	adc	r1, r19
    3304:	28 31       	cpi	r18, 0x18	; 24
    3306:	3a 40       	sbci	r19, 0x0A	; 10
    3308:	46 4c       	sbci	r20, 0xC6	; 198
    330a:	50 54       	subi	r21, 0x40	; 64
    330c:	58 5b       	subi	r21, 0xB8	; 184
    330e:	5e 61       	ori	r21, 0x1E	; 30
    3310:	63 65       	ori	r22, 0x53	; 83
    3312:	67 69       	ori	r22, 0x97	; 151
    3314:	6b 6c       	ori	r22, 0xCB	; 203
    3316:	6e 6f       	ori	r22, 0xFE	; 254
    3318:	70 71       	andi	r23, 0x10	; 16
    331a:	72 73       	andi	r23, 0x32	; 50
    331c:	74 75       	andi	r23, 0x54	; 84
    331e:	76 77       	andi	r23, 0x76	; 118
    3320:	77 78       	andi	r23, 0x87	; 135
    3322:	79 79       	andi	r23, 0x99	; 153
    3324:	7a 7a       	andi	r23, 0xAA	; 170
    3326:	7b 7b       	andi	r23, 0xBB	; 187
    3328:	7c 7c       	andi	r23, 0xCC	; 204
    332a:	7c 7d       	andi	r23, 0xDC	; 220
    332c:	7d 7d       	andi	r23, 0xDD	; 221
    332e:	7e 7e       	andi	r23, 0xEE	; 238
    3330:	7e 7e       	andi	r23, 0xEE	; 238
    3332:	7f 7f       	andi	r23, 0xFF	; 255
    3334:	7f 7f       	andi	r23, 0xFF	; 255
    3336:	7f 7f       	andi	r23, 0xFF	; 255
    3338:	7f 7f       	andi	r23, 0xFF	; 255
    333a:	7f 7f       	andi	r23, 0xFF	; 255
    333c:	7f 7f       	andi	r23, 0xFF	; 255
    333e:	7f 7f       	andi	r23, 0xFF	; 255
    3340:	7f 7f       	andi	r23, 0xFF	; 255
    3342:	7f 7f       	andi	r23, 0xFF	; 255
    3344:	7f 7f       	andi	r23, 0xFF	; 255
    3346:	7f 7f       	andi	r23, 0xFF	; 255
    3348:	7f 7f       	andi	r23, 0xFF	; 255
    334a:	7f 7f       	andi	r23, 0xFF	; 255
    334c:	7f 7e       	andi	r23, 0xEF	; 239
    334e:	7e 7e       	andi	r23, 0xEE	; 238
    3350:	7e 7d       	andi	r23, 0xDE	; 222
    3352:	7d 7d       	andi	r23, 0xDD	; 221
    3354:	7c 7c       	andi	r23, 0xCC	; 204
    3356:	7c 7b       	andi	r23, 0xBC	; 188
    3358:	7b 7a       	andi	r23, 0xAB	; 171
    335a:	7a 79       	andi	r23, 0x9A	; 154
    335c:	79 78       	andi	r23, 0x89	; 137
    335e:	77 77       	andi	r23, 0x77	; 119
    3360:	76 75       	andi	r23, 0x56	; 86
    3362:	74 73       	andi	r23, 0x34	; 52
    3364:	72 71       	andi	r23, 0x12	; 18
    3366:	70 6f       	ori	r23, 0xF0	; 240
    3368:	6e 6c       	ori	r22, 0xCE	; 206
    336a:	6b 69       	ori	r22, 0x9B	; 155
    336c:	67 65       	ori	r22, 0x57	; 87
    336e:	63 61       	ori	r22, 0x13	; 19
    3370:	5e 5b       	subi	r21, 0xBE	; 190
    3372:	58 54       	subi	r21, 0x48	; 72
    3374:	50 4c       	sbci	r21, 0xC0	; 192
    3376:	46 40       	sbci	r20, 0x06	; 6
    3378:	3a 31       	cpi	r19, 0x1A	; 26
    337a:	28 1e       	adc	r2, r24
    337c:	13 09       	sbc	r17, r3
    337e:	03 00       	.word	0x0003	; ????
    3380:	c6 cc       	rjmp	.-1652   	; 0x2d0e <waves+0xe>
    3382:	d5 db       	rcall	.-2134   	; 0x2b2e <steptable+0x28>
    3384:	df e3       	ldi	r29, 0x3F	; 63
    3386:	e5 e7       	ldi	r30, 0x75	; 117
    3388:	e9 ea       	ldi	r30, 0xA9	; 169
    338a:	eb ec       	ldi	r30, 0xCB	; 203
    338c:	ed ee       	ldi	r30, 0xED	; 237
    338e:	ef ef       	ldi	r30, 0xFF	; 255
    3390:	f0 f0       	brcs	.+60     	; 0x33ce <waves+0x6ce>
    3392:	f0 f1       	brcs	.+124    	; 0x3410 <waves+0x710>
    3394:	f1 f1       	breq	.+124    	; 0x3412 <waves+0x712>
    3396:	f1 f2       	breq	.-68     	; 0x3354 <waves+0x654>
    3398:	f2 f2       	brmi	.-68     	; 0x3356 <waves+0x656>
    339a:	f2 f2       	brmi	.-68     	; 0x3358 <waves+0x658>
    339c:	f2 f2       	brmi	.-68     	; 0x335a <waves+0x65a>
    339e:	f2 f3       	brmi	.-4      	; 0x339c <waves+0x69c>
    33a0:	f3 f3       	brvs	.-4      	; 0x339e <waves+0x69e>
    33a2:	f3 f3       	brvs	.-4      	; 0x33a0 <waves+0x6a0>
    33a4:	f3 f3       	brvs	.-4      	; 0x33a2 <waves+0x6a2>
    33a6:	f3 f3       	brvs	.-4      	; 0x33a4 <waves+0x6a4>
    33a8:	f3 f3       	brvs	.-4      	; 0x33a6 <waves+0x6a6>
    33aa:	f3 f3       	brvs	.-4      	; 0x33a8 <waves+0x6a8>
    33ac:	f3 f3       	brvs	.-4      	; 0x33aa <waves+0x6aa>
    33ae:	f3 f3       	brvs	.-4      	; 0x33ac <waves+0x6ac>
    33b0:	f3 f3       	brvs	.-4      	; 0x33ae <waves+0x6ae>
    33b2:	f3 f3       	brvs	.-4      	; 0x33b0 <waves+0x6b0>
    33b4:	f3 f3       	brvs	.-4      	; 0x33b2 <waves+0x6b2>
    33b6:	f3 f3       	brvs	.-4      	; 0x33b4 <waves+0x6b4>
    33b8:	f3 f3       	brvs	.-4      	; 0x33b6 <waves+0x6b6>
    33ba:	f3 f3       	brvs	.-4      	; 0x33b8 <waves+0x6b8>
    33bc:	f3 f3       	brvs	.-4      	; 0x33ba <waves+0x6ba>
    33be:	f3 f3       	brvs	.-4      	; 0x33bc <waves+0x6bc>
    33c0:	f3 f3       	brvs	.-4      	; 0x33be <waves+0x6be>
    33c2:	f3 f3       	brvs	.-4      	; 0x33c0 <waves+0x6c0>
    33c4:	f3 f3       	brvs	.-4      	; 0x33c2 <waves+0x6c2>
    33c6:	f3 f3       	brvs	.-4      	; 0x33c4 <waves+0x6c4>
    33c8:	f3 f3       	brvs	.-4      	; 0x33c6 <waves+0x6c6>
    33ca:	f3 f3       	brvs	.-4      	; 0x33c8 <waves+0x6c8>
    33cc:	f3 f3       	brvs	.-4      	; 0x33ca <waves+0x6ca>
    33ce:	f3 f3       	brvs	.-4      	; 0x33cc <waves+0x6cc>
    33d0:	f3 f3       	brvs	.-4      	; 0x33ce <waves+0x6ce>
    33d2:	f3 f3       	brvs	.-4      	; 0x33d0 <waves+0x6d0>
    33d4:	f3 f3       	brvs	.-4      	; 0x33d2 <waves+0x6d2>
    33d6:	f3 f3       	brvs	.-4      	; 0x33d4 <waves+0x6d4>
    33d8:	f3 f3       	brvs	.-4      	; 0x33d6 <waves+0x6d6>
    33da:	f3 f3       	brvs	.-4      	; 0x33d8 <waves+0x6d8>
    33dc:	f3 f3       	brvs	.-4      	; 0x33da <waves+0x6da>
    33de:	f3 f3       	brvs	.-4      	; 0x33dc <waves+0x6dc>
    33e0:	f2 f2       	brmi	.-68     	; 0x339e <waves+0x69e>
    33e2:	f2 f2       	brmi	.-68     	; 0x33a0 <waves+0x6a0>
    33e4:	f2 f2       	brmi	.-68     	; 0x33a2 <waves+0x6a2>
    33e6:	f2 f2       	brmi	.-68     	; 0x33a4 <waves+0x6a4>
    33e8:	f1 f1       	breq	.+124    	; 0x3466 <waves+0x766>
    33ea:	f1 f1       	breq	.+124    	; 0x3468 <waves+0x768>
    33ec:	f0 f0       	brcs	.+60     	; 0x342a <waves+0x72a>
    33ee:	f0 ef       	ldi	r31, 0xF0	; 240
    33f0:	ef ee       	ldi	r30, 0xEF	; 239
    33f2:	ed ec       	ldi	r30, 0xCD	; 205
    33f4:	eb ea       	ldi	r30, 0xAB	; 171
    33f6:	e9 e7       	ldi	r30, 0x79	; 121
    33f8:	e5 e3       	ldi	r30, 0x35	; 53
    33fa:	df db       	rcall	.-2114   	; 0x2bba <steptable+0xb4>
    33fc:	d5 cc       	rjmp	.-1622   	; 0x2da8 <waves+0xa8>
    33fe:	c6 00       	.word	0x00c6	; ????
    3400:	00 28       	or	r0, r0
    3402:	3d 42       	sbci	r19, 0x2D	; 45
    3404:	30 2d       	mov	r19, r0
    3406:	2c 2b       	or	r18, r28
    3408:	2c 2d       	mov	r18, r12
    340a:	2e 2f       	mov	r18, r30
    340c:	30 32       	cpi	r19, 0x20	; 32
    340e:	33 35       	cpi	r19, 0x53	; 83
    3410:	37 39       	cpi	r19, 0x97	; 151
    3412:	3b 3d       	cpi	r19, 0xDB	; 219
    3414:	3f 41       	sbci	r19, 0x1F	; 31
    3416:	43 45       	sbci	r20, 0x53	; 83
    3418:	48 4a       	sbci	r20, 0xA8	; 168
    341a:	4c 4e       	sbci	r20, 0xEC	; 236
    341c:	50 53       	subi	r21, 0x30	; 48
    341e:	55 57       	subi	r21, 0x75	; 117
    3420:	59 5b       	subi	r21, 0xB9	; 185
    3422:	5d 5f       	subi	r21, 0xFD	; 253
    3424:	61 63       	ori	r22, 0x31	; 49
    3426:	65 67       	ori	r22, 0x75	; 117
    3428:	69 6b       	ori	r22, 0xB9	; 185
    342a:	6c 6e       	ori	r22, 0xEC	; 236
    342c:	70 71       	andi	r23, 0x10	; 16
    342e:	73 74       	andi	r23, 0x43	; 67
    3430:	75 77       	andi	r23, 0x75	; 117
    3432:	78 79       	andi	r23, 0x98	; 152
    3434:	7a 7b       	andi	r23, 0xBA	; 186
    3436:	7c 7d       	andi	r23, 0xDC	; 220
    3438:	7d 7e       	andi	r23, 0xED	; 237
    343a:	7e 7f       	andi	r23, 0xFE	; 254
    343c:	7f 7f       	andi	r23, 0xFF	; 255
    343e:	7f 7f       	andi	r23, 0xFF	; 255
    3440:	7f 7f       	andi	r23, 0xFF	; 255
    3442:	7f 7f       	andi	r23, 0xFF	; 255
    3444:	7f 7f       	andi	r23, 0xFF	; 255
    3446:	7e 7e       	andi	r23, 0xEE	; 238
    3448:	7d 7d       	andi	r23, 0xDD	; 221
    344a:	7c 7b       	andi	r23, 0xBC	; 188
    344c:	7a 79       	andi	r23, 0x9A	; 154
    344e:	78 77       	andi	r23, 0x78	; 120
    3450:	75 74       	andi	r23, 0x45	; 69
    3452:	73 71       	andi	r23, 0x13	; 19
    3454:	70 6e       	ori	r23, 0xE0	; 224
    3456:	6c 6b       	ori	r22, 0xBC	; 188
    3458:	69 67       	ori	r22, 0x79	; 121
    345a:	65 63       	ori	r22, 0x35	; 53
    345c:	61 5f       	subi	r22, 0xF1	; 241
    345e:	5d 5b       	subi	r21, 0xBD	; 189
    3460:	59 57       	subi	r21, 0x79	; 121
    3462:	55 53       	subi	r21, 0x35	; 53
    3464:	50 4e       	sbci	r21, 0xE0	; 224
    3466:	4c 4a       	sbci	r20, 0xAC	; 172
    3468:	48 45       	sbci	r20, 0x58	; 88
    346a:	43 41       	sbci	r20, 0x13	; 19
    346c:	3f 3d       	cpi	r19, 0xDF	; 223
    346e:	3b 39       	cpi	r19, 0x9B	; 155
    3470:	37 35       	cpi	r19, 0x57	; 87
    3472:	33 32       	cpi	r19, 0x23	; 35
    3474:	30 2f       	mov	r19, r16
    3476:	2e 2d       	mov	r18, r14
    3478:	2c 2b       	or	r18, r28
    347a:	2c 2d       	mov	r18, r12
    347c:	30 42       	sbci	r19, 0x20	; 32
    347e:	3d 28       	or	r3, r13
    3480:	00 e9       	ldi	r16, 0x90	; 144
    3482:	e5 fe       	sbrs	r14, 5
    3484:	d4 d7       	rcall	.+4008   	; 0x442e <__data_load_end+0x8c>
    3486:	d7 d7       	rcall	.+4014   	; 0x4436 <__data_load_end+0x94>
    3488:	d6 d4       	rcall	.+2476   	; 0x3e36 <draw+0x94>
    348a:	d2 d0       	rcall	.+420    	; 0x3630 <waves+0x930>
    348c:	ce cc       	rjmp	.-1636   	; 0x2e2a <waves+0x12a>
    348e:	ca c8       	rjmp	.-3692   	; 0x2624 <ProcessMusic+0xa0>
    3490:	c6 c3       	rjmp	.+1932   	; 0x3c1e <update+0x2f6>
    3492:	c1 bf       	out	0x31, r28	; 49
    3494:	bd ba       	out	0x1d, r11	; 29
    3496:	b8 b6       	in	r11, 0x38	; 56
    3498:	b4 b1       	in	r27, 0x04	; 4
    349a:	af ad       	ldd	r26, Y+63	; 0x3f
    349c:	ab a9       	ldd	r26, Y+51	; 0x33
    349e:	a7 a5       	ldd	r26, Z+47	; 0x2f
    34a0:	a3 a1       	ldd	r26, Z+35	; 0x23
    34a2:	9f 9e       	mul	r9, r31
    34a4:	9c 9a       	sbi	0x13, 4	; 19
    34a6:	99 97       	sbiw	r26, 0x29	; 41
    34a8:	95 94       	asr	r9
    34aa:	93 91       	.word	0x9193	; ????
    34ac:	90 8f       	std	Z+24, r25	; 0x18
    34ae:	8d 8c       	ldd	r8, Y+29	; 0x1d
    34b0:	8b 8a       	std	Y+19, r8	; 0x13
    34b2:	89 88       	ldd	r8, Y+17	; 0x11
    34b4:	88 87       	std	Y+8, r24	; 0x08
    34b6:	86 85       	ldd	r24, Z+14	; 0x0e
    34b8:	85 84       	ldd	r8, Z+13	; 0x0d
    34ba:	84 84       	ldd	r8, Z+12	; 0x0c
    34bc:	83 83       	std	Z+3, r24	; 0x03
    34be:	83 83       	std	Z+3, r24	; 0x03
    34c0:	83 83       	std	Z+3, r24	; 0x03
    34c2:	83 83       	std	Z+3, r24	; 0x03
    34c4:	83 84       	ldd	r8, Z+11	; 0x0b
    34c6:	84 84       	ldd	r8, Z+12	; 0x0c
    34c8:	85 85       	ldd	r24, Z+13	; 0x0d
    34ca:	86 87       	std	Z+14, r24	; 0x0e
    34cc:	88 88       	ldd	r8, Y+16	; 0x10
    34ce:	89 8a       	std	Y+17, r8	; 0x11
    34d0:	8b 8c       	ldd	r8, Y+27	; 0x1b
    34d2:	8d 8f       	std	Y+29, r24	; 0x1d
    34d4:	90 91 93 94 	lds	r25, 0x9493	; 0x809493 <__bss_end+0x8ad2>
    34d8:	95 97       	sbiw	r26, 0x25	; 37
    34da:	99 9a       	sbi	0x13, 1	; 19
    34dc:	9c 9e       	mul	r9, r28
    34de:	9f a1       	ldd	r25, Y+39	; 0x27
    34e0:	a3 a5       	ldd	r26, Z+43	; 0x2b
    34e2:	a7 a9       	ldd	r26, Z+55	; 0x37
    34e4:	ab ad       	ldd	r26, Y+59	; 0x3b
    34e6:	af b1       	in	r26, 0x0f	; 15
    34e8:	b4 b6       	in	r11, 0x34	; 52
    34ea:	b8 ba       	out	0x18, r11	; 24
    34ec:	bd bf       	out	0x3d, r27	; 61
    34ee:	c1 c3       	rjmp	.+1922   	; 0x3c72 <update+0x34a>
    34f0:	c6 c8       	rjmp	.-3700   	; 0x267e <ProcessMusic+0xfa>
    34f2:	ca cc       	rjmp	.-1644   	; 0x2e88 <waves+0x188>
    34f4:	ce d0       	rcall	.+412    	; 0x3692 <waves+0x992>
    34f6:	d2 d4       	rcall	.+2468   	; 0x3e9c <draw+0xfa>
    34f8:	d6 d7       	rcall	.+4012   	; 0x44a6 <__data_load_end+0x104>
    34fa:	d7 d7       	rcall	.+4014   	; 0x44aa <__data_load_end+0x108>
    34fc:	d4 fe       	sbrs	r13, 4
    34fe:	e5 e9       	ldi	r30, 0x95	; 149
    3500:	f9 f8       	.word	0xf8f9	; ????
    3502:	f9 f5       	brne	.+126    	; 0x3582 <waves+0x882>
    3504:	eb e1       	ldi	r30, 0x1B	; 27
    3506:	dd de       	rcall	.-582    	; 0x32c2 <waves+0x5c2>
    3508:	e0 e2       	ldi	r30, 0x20	; 32
    350a:	e4 e5       	ldi	r30, 0x54	; 84
    350c:	e6 e5       	ldi	r30, 0x56	; 86
    350e:	e4 e2       	ldi	r30, 0x24	; 36
    3510:	de d9       	rcall	.-3140   	; 0x28ce <ProcessMusic+0x34a>
    3512:	d2 ca       	rjmp	.-2652   	; 0x2ab8 <set_note_waves+0x10>
    3514:	c1 b7       	in	r28, 0x31	; 49
    3516:	ac a2       	std	Y+36, r10	; 0x24
    3518:	99 91       	ld	r25, Y+
    351a:	8a 86       	std	Y+10, r8	; 0x0a
    351c:	83 81       	ldd	r24, Z+3	; 0x03
    351e:	80 80       	ld	r8, Z
    3520:	81 82       	std	Z+1, r8	; 0x01
    3522:	83 85       	ldd	r24, Z+11	; 0x0b
    3524:	86 88       	ldd	r8, Z+22	; 0x16
    3526:	8a 8c       	ldd	r8, Y+26	; 0x1a
    3528:	8d 8f       	std	Y+29, r24	; 0x1d
    352a:	90 92 93 95 	sts	0x9593, r9	; 0x809593 <__bss_end+0x8bd2>
    352e:	96 97       	sbiw	r26, 0x26	; 38
    3530:	98 99       	sbic	0x13, 0	; 19
    3532:	9a 9b       	sbis	0x13, 2	; 19
    3534:	9b 9c       	mul	r9, r11
    3536:	9d 9d       	mul	r25, r13
    3538:	9d 9e       	mul	r9, r29
    353a:	9e 9e       	mul	r9, r30
    353c:	9f 9f       	mul	r25, r31
    353e:	9f 9f       	mul	r25, r31
    3540:	9f 9f       	mul	r25, r31
    3542:	9f 9e       	mul	r9, r31
    3544:	9e 9e       	mul	r9, r30
    3546:	9d 9d       	mul	r25, r13
    3548:	9d 9c       	mul	r9, r13
    354a:	9b 9b       	sbis	0x13, 3	; 19
    354c:	9a 99       	sbic	0x13, 2	; 19
    354e:	98 97       	sbiw	r26, 0x28	; 40
    3550:	96 95       	lsr	r25
    3552:	93 92       	.word	0x9293	; ????
    3554:	90 8f       	std	Z+24, r25	; 0x18
    3556:	8d 8c       	ldd	r8, Y+29	; 0x1d
    3558:	8a 88       	ldd	r8, Y+18	; 0x12
    355a:	86 85       	ldd	r24, Z+14	; 0x0e
    355c:	83 82       	std	Z+3, r8	; 0x03
    355e:	81 80       	ldd	r8, Z+1	; 0x01
    3560:	80 81       	ld	r24, Z
    3562:	83 86       	std	Z+11, r8	; 0x0b
    3564:	8a 91       	ld	r24, -Y
    3566:	99 a2       	std	Y+33, r9	; 0x21
    3568:	ac b7       	in	r26, 0x3c	; 60
    356a:	c1 ca       	rjmp	.-2686   	; 0x2aee <smw1+0x2>
    356c:	d2 d9       	rcall	.-3164   	; 0x2912 <ProcessMusic+0x38e>
    356e:	de e2       	ldi	r29, 0x2E	; 46
    3570:	e4 e5       	ldi	r30, 0x54	; 84
    3572:	e6 e5       	ldi	r30, 0x56	; 86
    3574:	e4 e2       	ldi	r30, 0x24	; 36
    3576:	e0 de       	rcall	.-576    	; 0x3338 <waves+0x638>
    3578:	dd e1       	ldi	r29, 0x1D	; 29
    357a:	eb f5       	brvc	.+122    	; 0x35f6 <waves+0x8f6>
    357c:	f9 f8       	.word	0xf8f9	; ????
    357e:	f9 00       	.word	0x00f9	; ????
    3580:	07 08       	sbc	r0, r7
    3582:	07 0b       	sbc	r16, r23
    3584:	15 1f       	adc	r17, r21
    3586:	23 22       	and	r2, r19
    3588:	20 1e       	adc	r2, r16
    358a:	1c 1b       	sub	r17, r28
    358c:	1a 1b       	sub	r17, r26
    358e:	1c 1e       	adc	r1, r28
    3590:	22 27       	eor	r18, r18
    3592:	2e 36       	cpi	r18, 0x6E	; 110
    3594:	3f 49       	sbci	r19, 0x9F	; 159
    3596:	54 5e       	subi	r21, 0xE4	; 228
    3598:	67 6f       	ori	r22, 0xF7	; 247
    359a:	76 7a       	andi	r23, 0xA6	; 166
    359c:	7e 7f       	andi	r23, 0xFE	; 254
    359e:	7f 7f       	andi	r23, 0xFF	; 255
    35a0:	7f 7e       	andi	r23, 0xEF	; 239
    35a2:	7d 7b       	andi	r23, 0xBD	; 189
    35a4:	7a 78       	andi	r23, 0x8A	; 138
    35a6:	76 74       	andi	r23, 0x46	; 70
    35a8:	73 71       	andi	r23, 0x13	; 19
    35aa:	70 6e       	ori	r23, 0xE0	; 224
    35ac:	6d 6b       	ori	r22, 0xBD	; 189
    35ae:	6a 69       	ori	r22, 0x9A	; 154
    35b0:	68 67       	ori	r22, 0x78	; 120
    35b2:	66 65       	ori	r22, 0x56	; 86
    35b4:	65 64       	ori	r22, 0x45	; 69
    35b6:	64 63       	ori	r22, 0x34	; 52
    35b8:	63 62       	ori	r22, 0x23	; 35
    35ba:	62 62       	ori	r22, 0x22	; 34
    35bc:	61 61       	ori	r22, 0x11	; 17
    35be:	61 61       	ori	r22, 0x11	; 17
    35c0:	61 61       	ori	r22, 0x11	; 17
    35c2:	61 62       	ori	r22, 0x21	; 33
    35c4:	62 62       	ori	r22, 0x22	; 34
    35c6:	63 63       	ori	r22, 0x33	; 51
    35c8:	63 64       	ori	r22, 0x43	; 67
    35ca:	65 65       	ori	r22, 0x55	; 85
    35cc:	66 67       	ori	r22, 0x76	; 118
    35ce:	68 69       	ori	r22, 0x98	; 152
    35d0:	6a 6b       	ori	r22, 0xBA	; 186
    35d2:	6d 6e       	ori	r22, 0xED	; 237
    35d4:	70 71       	andi	r23, 0x10	; 16
    35d6:	73 74       	andi	r23, 0x43	; 67
    35d8:	76 78       	andi	r23, 0x86	; 134
    35da:	7a 7b       	andi	r23, 0xBA	; 186
    35dc:	7d 7e       	andi	r23, 0xED	; 237
    35de:	7f 7f       	andi	r23, 0xFF	; 255
    35e0:	7f 7f       	andi	r23, 0xFF	; 255
    35e2:	7e 7a       	andi	r23, 0xAE	; 174
    35e4:	76 6f       	ori	r23, 0xF6	; 246
    35e6:	67 5e       	subi	r22, 0xE7	; 231
    35e8:	54 49       	sbci	r21, 0x94	; 148
    35ea:	3f 36       	cpi	r19, 0x6F	; 111
    35ec:	2e 27       	eor	r18, r30
    35ee:	22 1e       	adc	r2, r18
    35f0:	1c 1b       	sub	r17, r28
    35f2:	1a 1b       	sub	r17, r26
    35f4:	1c 1e       	adc	r1, r28
    35f6:	20 22       	and	r2, r16
    35f8:	23 1f       	adc	r18, r19
    35fa:	15 0b       	sbc	r17, r21
    35fc:	07 08       	sbc	r0, r7
    35fe:	07 00       	.word	0x0007	; ????
    3600:	1f 31       	cpi	r17, 0x1F	; 31
    3602:	3d 44       	sbci	r19, 0x4D	; 77
    3604:	4e 53       	subi	r20, 0x3E	; 62
    3606:	54 56       	subi	r21, 0x64	; 100
    3608:	5a 5f       	subi	r21, 0xFA	; 250
    360a:	64 69       	ori	r22, 0x94	; 148
    360c:	6e 74       	andi	r22, 0x4E	; 78
    360e:	76 79       	andi	r23, 0x96	; 150
    3610:	7c 7f       	andi	r23, 0xFC	; 252
    3612:	7f 7f       	andi	r23, 0xFF	; 255
    3614:	7f 7f       	andi	r23, 0xFF	; 255
    3616:	7f 7f       	andi	r23, 0xFF	; 255
    3618:	7f 7f       	andi	r23, 0xFF	; 255
    361a:	7f 7f       	andi	r23, 0xFF	; 255
    361c:	7f 7f       	andi	r23, 0xFF	; 255
    361e:	7f 7f       	andi	r23, 0xFF	; 255
    3620:	7f 7f       	andi	r23, 0xFF	; 255
    3622:	7f 7f       	andi	r23, 0xFF	; 255
    3624:	7f 7f       	andi	r23, 0xFF	; 255
    3626:	7f 7f       	andi	r23, 0xFF	; 255
    3628:	7f 7f       	andi	r23, 0xFF	; 255
    362a:	7f 7f       	andi	r23, 0xFF	; 255
    362c:	7f 7f       	andi	r23, 0xFF	; 255
    362e:	7f 7f       	andi	r23, 0xFF	; 255
    3630:	7f 7f       	andi	r23, 0xFF	; 255
    3632:	7f 7f       	andi	r23, 0xFF	; 255
    3634:	7f 7f       	andi	r23, 0xFF	; 255
    3636:	7f 7f       	andi	r23, 0xFF	; 255
    3638:	7f 7f       	andi	r23, 0xFF	; 255
    363a:	7f 7f       	andi	r23, 0xFF	; 255
    363c:	7f 7f       	andi	r23, 0xFF	; 255
    363e:	7f 7f       	andi	r23, 0xFF	; 255
    3640:	7f 7f       	andi	r23, 0xFF	; 255
    3642:	7f 7f       	andi	r23, 0xFF	; 255
    3644:	7f 7f       	andi	r23, 0xFF	; 255
    3646:	7f 7f       	andi	r23, 0xFF	; 255
    3648:	7f 7f       	andi	r23, 0xFF	; 255
    364a:	7f 7f       	andi	r23, 0xFF	; 255
    364c:	7f 7f       	andi	r23, 0xFF	; 255
    364e:	7f 7f       	andi	r23, 0xFF	; 255
    3650:	7f 7f       	andi	r23, 0xFF	; 255
    3652:	7f 7f       	andi	r23, 0xFF	; 255
    3654:	7f 7f       	andi	r23, 0xFF	; 255
    3656:	7f 7f       	andi	r23, 0xFF	; 255
    3658:	7f 7f       	andi	r23, 0xFF	; 255
    365a:	7f 7f       	andi	r23, 0xFF	; 255
    365c:	7f 7f       	andi	r23, 0xFF	; 255
    365e:	7f 7f       	andi	r23, 0xFF	; 255
    3660:	7f 7f       	andi	r23, 0xFF	; 255
    3662:	7f 7f       	andi	r23, 0xFF	; 255
    3664:	7f 7f       	andi	r23, 0xFF	; 255
    3666:	7f 7f       	andi	r23, 0xFF	; 255
    3668:	7f 7f       	andi	r23, 0xFF	; 255
    366a:	7f 7f       	andi	r23, 0xFF	; 255
    366c:	7f 7f       	andi	r23, 0xFF	; 255
    366e:	7f 7f       	andi	r23, 0xFF	; 255
    3670:	7f 7f       	andi	r23, 0xFF	; 255
    3672:	7f 7f       	andi	r23, 0xFF	; 255
    3674:	7f 7f       	andi	r23, 0xFF	; 255
    3676:	7f 7f       	andi	r23, 0xFF	; 255
    3678:	7f 7f       	andi	r23, 0xFF	; 255
    367a:	7f 7c       	andi	r23, 0xCF	; 207
    367c:	78 71       	andi	r23, 0x18	; 24
    367e:	68 4c       	sbci	r22, 0xC8	; 200
    3680:	2c 1c       	adc	r2, r12
    3682:	12 0c       	add	r1, r2
    3684:	0a 0b       	sbc	r16, r26
    3686:	0a 05       	cpc	r16, r10
    3688:	fd f3       	brhs	.-2      	; 0x3688 <waves+0x988>
    368a:	e9 df       	rcall	.-46     	; 0x365e <waves+0x95e>
    368c:	d4 ca       	rjmp	.-2648   	; 0x2c36 <steptable+0x130>
    368e:	c0 b7       	in	r28, 0x30	; 48
    3690:	ae a6       	std	Y+46, r10	; 0x2e
    3692:	9e 97       	sbiw	r26, 0x2e	; 46
    3694:	91 8b       	std	Z+17, r25	; 0x11
    3696:	86 85       	ldd	r24, Z+14	; 0x0e
    3698:	82 80       	ldd	r8, Z+2	; 0x02
    369a:	80 80       	ld	r8, Z
    369c:	80 80       	ld	r8, Z
    369e:	80 80       	ld	r8, Z
    36a0:	80 80       	ld	r8, Z
    36a2:	80 80       	ld	r8, Z
    36a4:	80 80       	ld	r8, Z
    36a6:	80 80       	ld	r8, Z
    36a8:	80 80       	ld	r8, Z
    36aa:	80 80       	ld	r8, Z
    36ac:	80 80       	ld	r8, Z
    36ae:	80 80       	ld	r8, Z
    36b0:	80 80       	ld	r8, Z
    36b2:	80 80       	ld	r8, Z
    36b4:	80 80       	ld	r8, Z
    36b6:	80 80       	ld	r8, Z
    36b8:	80 80       	ld	r8, Z
    36ba:	80 80       	ld	r8, Z
    36bc:	80 80       	ld	r8, Z
    36be:	80 80       	ld	r8, Z
    36c0:	80 80       	ld	r8, Z
    36c2:	80 80       	ld	r8, Z
    36c4:	80 80       	ld	r8, Z
    36c6:	80 80       	ld	r8, Z
    36c8:	80 80       	ld	r8, Z
    36ca:	80 80       	ld	r8, Z
    36cc:	80 80       	ld	r8, Z
    36ce:	80 80       	ld	r8, Z
    36d0:	80 80       	ld	r8, Z
    36d2:	80 80       	ld	r8, Z
    36d4:	80 80       	ld	r8, Z
    36d6:	80 80       	ld	r8, Z
    36d8:	80 80       	ld	r8, Z
    36da:	80 80       	ld	r8, Z
    36dc:	80 80       	ld	r8, Z
    36de:	80 80       	ld	r8, Z
    36e0:	80 80       	ld	r8, Z
    36e2:	80 80       	ld	r8, Z
    36e4:	80 80       	ld	r8, Z
    36e6:	80 80       	ld	r8, Z
    36e8:	80 80       	ld	r8, Z
    36ea:	80 80       	ld	r8, Z
    36ec:	80 80       	ld	r8, Z
    36ee:	80 80       	ld	r8, Z
    36f0:	80 80       	ld	r8, Z
    36f2:	80 80       	ld	r8, Z
    36f4:	80 87       	std	Z+8, r24	; 0x08
    36f6:	91 9d       	mul	r25, r1
    36f8:	ac c4       	rjmp	.+2392   	; 0x4052 <checkCollision+0x48>
    36fa:	cb d4       	rcall	.+2454   	; 0x4092 <MoveHero+0x3a>
    36fc:	dd f2       	brhs	.-74     	; 0x36b4 <waves+0x9b4>
    36fe:	fa fa       	.word	0xfafa	; ????

00003700 <DisplayLogo>:
    3700:	08 95       	ret

00003702 <InitializeVideoMode>:
		return;
	}
	
	fadeStep=FADER_STEPS;
	fadeDir=-1;
	doFade(speed,blocking);
    3702:	08 95       	ret

00003704 <VideoModeVsync>:
    3704:	0c 94 fa 1b 	jmp	0x37f4	; 0x37f4 <ProcessFading>

00003708 <PrintInt>:
    3708:	cf 92       	push	r12
    370a:	df 92       	push	r13
    370c:	ef 92       	push	r14
    370e:	ff 92       	push	r15
    3710:	0f 93       	push	r16
    3712:	1f 93       	push	r17
    3714:	cf 93       	push	r28
    3716:	df 93       	push	r29
    3718:	c8 2e       	mov	r12, r24
    371a:	d6 2f       	mov	r29, r22
    371c:	8a 01       	movw	r16, r20
    371e:	d2 2e       	mov	r13, r18
    3720:	c0 e0       	ldi	r28, 0x00	; 0
    3722:	8a e0       	ldi	r24, 0x0A	; 10
    3724:	e8 2e       	mov	r14, r24
    3726:	f1 2c       	mov	r15, r1
    3728:	2c 2d       	mov	r18, r12
    372a:	2c 1b       	sub	r18, r28
    372c:	01 15       	cp	r16, r1
    372e:	11 05       	cpc	r17, r1
    3730:	11 f4       	brne	.+4      	; 0x3736 <PrintInt+0x2e>
    3732:	c1 11       	cpse	r28, r1
    3734:	07 c0       	rjmp	.+14     	; 0x3744 <PrintInt+0x3c>
    3736:	c8 01       	movw	r24, r16
    3738:	b7 01       	movw	r22, r14
    373a:	0e 94 dc 20 	call	0x41b8	; 0x41b8 <__udivmodhi4>
    373e:	40 e1       	ldi	r20, 0x10	; 16
    3740:	48 0f       	add	r20, r24
    3742:	05 c0       	rjmp	.+10     	; 0x374e <PrintInt+0x46>
    3744:	dd 20       	and	r13, r13
    3746:	11 f0       	breq	.+4      	; 0x374c <PrintInt+0x44>
    3748:	40 e1       	ldi	r20, 0x10	; 16
    374a:	01 c0       	rjmp	.+2      	; 0x374e <PrintInt+0x46>
    374c:	40 e0       	ldi	r20, 0x00	; 0
    374e:	6d 2f       	mov	r22, r29
    3750:	82 2f       	mov	r24, r18
    3752:	0e 94 45 11 	call	0x228a	; 0x228a <SetFont>
    3756:	c8 01       	movw	r24, r16
    3758:	b7 01       	movw	r22, r14
    375a:	0e 94 dc 20 	call	0x41b8	; 0x41b8 <__udivmodhi4>
    375e:	8b 01       	movw	r16, r22
    3760:	cf 5f       	subi	r28, 0xFF	; 255
    3762:	c5 30       	cpi	r28, 0x05	; 5
    3764:	09 f7       	brne	.-62     	; 0x3728 <PrintInt+0x20>
    3766:	df 91       	pop	r29
    3768:	cf 91       	pop	r28
    376a:	1f 91       	pop	r17
    376c:	0f 91       	pop	r16
    376e:	ff 90       	pop	r15
    3770:	ef 90       	pop	r14
    3772:	df 90       	pop	r13
    3774:	cf 90       	pop	r12
    3776:	08 95       	ret

00003778 <Print>:
    3778:	df 92       	push	r13
    377a:	ef 92       	push	r14
    377c:	ff 92       	push	r15
    377e:	0f 93       	push	r16
    3780:	1f 93       	push	r17
    3782:	cf 93       	push	r28
    3784:	df 93       	push	r29
    3786:	7c 01       	movw	r14, r24
    3788:	d6 2e       	mov	r13, r22
    378a:	8a 01       	movw	r16, r20
    378c:	ec 01       	movw	r28, r24
    378e:	fe 01       	movw	r30, r28
    3790:	ee 19       	sub	r30, r14
    3792:	ff 09       	sbc	r31, r15
    3794:	e0 0f       	add	r30, r16
    3796:	f1 1f       	adc	r31, r17
    3798:	e4 91       	lpm	r30, Z
    379a:	ee 23       	and	r30, r30
    379c:	49 f0       	breq	.+18     	; 0x37b0 <Print+0x38>
    379e:	ef 77       	andi	r30, 0x7F	; 127
    37a0:	40 ee       	ldi	r20, 0xE0	; 224
    37a2:	4e 0f       	add	r20, r30
    37a4:	6d 2d       	mov	r22, r13
    37a6:	8c 2f       	mov	r24, r28
    37a8:	0e 94 45 11 	call	0x228a	; 0x228a <SetFont>
    37ac:	21 96       	adiw	r28, 0x01	; 1
    37ae:	ef cf       	rjmp	.-34     	; 0x378e <Print+0x16>
    37b0:	df 91       	pop	r29
    37b2:	cf 91       	pop	r28
    37b4:	1f 91       	pop	r17
    37b6:	0f 91       	pop	r16
    37b8:	ff 90       	pop	r15
    37ba:	ef 90       	pop	r14
    37bc:	df 90       	pop	r13
    37be:	08 95       	ret

000037c0 <PrintChar>:
    37c0:	40 52       	subi	r20, 0x20	; 32
    37c2:	0c 94 45 11 	jmp	0x228a	; 0x228a <SetFont>

000037c6 <WaitVsync>:
    37c6:	0f 93       	push	r16
    37c8:	1f 93       	push	r17
    37ca:	cf 93       	push	r28
    37cc:	df 93       	push	r29
    37ce:	8c 01       	movw	r16, r24
    37d0:	c0 e0       	ldi	r28, 0x00	; 0
    37d2:	d0 e0       	ldi	r29, 0x00	; 0
    37d4:	c0 17       	cp	r28, r16
    37d6:	d1 07       	cpc	r29, r17
    37d8:	44 f4       	brge	.+16     	; 0x37ea <WaitVsync+0x24>
    37da:	0e 94 62 11 	call	0x22c4	; 0x22c4 <GetVsyncFlag>
    37de:	88 23       	and	r24, r24
    37e0:	e1 f3       	breq	.-8      	; 0x37da <WaitVsync+0x14>
    37e2:	0e 94 66 11 	call	0x22cc	; 0x22cc <ClearVsyncFlag>
    37e6:	21 96       	adiw	r28, 0x01	; 1
    37e8:	f5 cf       	rjmp	.-22     	; 0x37d4 <WaitVsync+0xe>
    37ea:	df 91       	pop	r29
    37ec:	cf 91       	pop	r28
    37ee:	1f 91       	pop	r17
    37f0:	0f 91       	pop	r16
    37f2:	08 95       	ret

000037f4 <ProcessFading>:
}


//called by the kernel at each field end
void ProcessFading(){
	if(fadeActive==true){
    37f4:	80 91 be 09 	lds	r24, 0x09BE	; 0x8009be <fadeActive>
    37f8:	88 23       	and	r24, r24
    37fa:	01 f1       	breq	.+64     	; 0x383c <ProcessFading+0x48>
		if(currFadeFrame==0){
    37fc:	80 91 bf 09 	lds	r24, 0x09BF	; 0x8009bf <currFadeFrame>
    3800:	81 11       	cpse	r24, r1
    3802:	19 c0       	rjmp	.+50     	; 0x3836 <ProcessFading+0x42>
			currFadeFrame=fadeSpeed;
    3804:	80 91 bc 09 	lds	r24, 0x09BC	; 0x8009bc <fadeSpeed>
    3808:	80 93 bf 09 	sts	0x09BF, r24	; 0x8009bf <currFadeFrame>
			DDRC = pgm_read_byte(&(fader[fadeStep-1]));
    380c:	e0 91 c0 09 	lds	r30, 0x09C0	; 0x8009c0 <fadeStep>
    3810:	f0 e0       	ldi	r31, 0x00	; 0
    3812:	e1 52       	subi	r30, 0x21	; 33
    3814:	ff 4f       	sbci	r31, 0xFF	; 255
    3816:	e4 91       	lpm	r30, Z
    3818:	e7 b9       	out	0x07, r30	; 7
			fadeStep+=fadeDir;
    381a:	90 91 c0 09 	lds	r25, 0x09C0	; 0x8009c0 <fadeStep>
    381e:	80 91 bd 09 	lds	r24, 0x09BD	; 0x8009bd <fadeDir>
    3822:	89 0f       	add	r24, r25
    3824:	80 93 c0 09 	sts	0x09C0, r24	; 0x8009c0 <fadeStep>
			if(fadeStep==0 || fadeStep==(FADER_STEPS+1)){
    3828:	88 23       	and	r24, r24
    382a:	11 f0       	breq	.+4      	; 0x3830 <ProcessFading+0x3c>
    382c:	8d 30       	cpi	r24, 0x0D	; 13
    382e:	31 f4       	brne	.+12     	; 0x383c <ProcessFading+0x48>
				fadeActive=false;
    3830:	10 92 be 09 	sts	0x09BE, r1	; 0x8009be <fadeActive>
    3834:	08 95       	ret
			}
		}else{
			currFadeFrame--;
    3836:	81 50       	subi	r24, 0x01	; 1
    3838:	80 93 bf 09 	sts	0x09BF, r24	; 0x8009bf <currFadeFrame>
    383c:	08 95       	ret

0000383e <getHealth>:
; Get Health
;****************************
.global getHealth
.section .text.gethealth
getHealth:
	ADD R24,R22
    383e:	86 0f       	add	r24, r22
	CLR	R25
    3840:	99 27       	eor	r25, r25
	RET
    3842:	08 95       	ret

00003844 <getScore>:
; Update the Score
;****************************
.global getScore
.section .text.getScore
getScore:
	ADD R24,R22
    3844:	86 0f       	add	r24, r22
	CLR	R25
    3846:	99 27       	eor	r25, r25
	RET
    3848:	08 95       	ret

0000384a <getMoney>:
; Update the Money
;****************************
.global getMoney
.section .text.getMoney
getMoney:
	ADD R24, R22
    384a:	86 0f       	add	r24, r22
	CLR R25
    384c:	99 27       	eor	r25, r25
	RET
    384e:	08 95       	ret

00003850 <setTrue>:
; Updates bool to true
;****************************
.global setTrue
.section .text.setTrue
setTrue:
	MOV R24, R22
    3850:	86 2f       	mov	r24, r22
	CLR R25
    3852:	99 27       	eor	r25, r25
    3854:	08 95       	ret

00003856 <main>:
}

int rnd(int max) {
	int result = rand() % max;
	return result;
}
    3856:	8c ee       	ldi	r24, 0xEC	; 236
    3858:	90 e0       	ldi	r25, 0x00	; 0
    385a:	0e 94 5d 11 	call	0x22ba	; 0x22ba <SetFontTable>
    385e:	0e 94 56 1c 	call	0x38ac	; 0x38ac <init>
    3862:	81 e0       	ldi	r24, 0x01	; 1
    3864:	90 e0       	ldi	r25, 0x00	; 0
    3866:	0e 94 e3 1b 	call	0x37c6	; 0x37c6 <WaitVsync>
    386a:	80 e0       	ldi	r24, 0x00	; 0
    386c:	0e 94 6c 11 	call	0x22d8	; 0x22d8 <ReadJoypad>
    3870:	90 93 48 09 	sts	0x0948, r25	; 0x800948 <buttonHeld+0x1>
    3874:	80 93 47 09 	sts	0x0947, r24	; 0x800947 <buttonHeld>
    3878:	20 91 4d 09 	lds	r18, 0x094D	; 0x80094d <buttonPrevious>
    387c:	30 91 4e 09 	lds	r19, 0x094E	; 0x80094e <buttonPrevious+0x1>
    3880:	a9 01       	movw	r20, r18
    3882:	40 95       	com	r20
    3884:	50 95       	com	r21
    3886:	48 23       	and	r20, r24
    3888:	59 23       	and	r21, r25
    388a:	50 93 4a 09 	sts	0x094A, r21	; 0x80094a <buttonPressed+0x1>
    388e:	40 93 49 09 	sts	0x0949, r20	; 0x800949 <buttonPressed>
    3892:	80 95       	com	r24
    3894:	90 95       	com	r25
    3896:	82 23       	and	r24, r18
    3898:	93 23       	and	r25, r19
    389a:	90 93 4c 09 	sts	0x094C, r25	; 0x80094c <buttonReleased+0x1>
    389e:	80 93 4b 09 	sts	0x094B, r24	; 0x80094b <buttonReleased>
    38a2:	0e 94 94 1c 	call	0x3928	; 0x3928 <update>
    38a6:	0e 94 d1 1e 	call	0x3da2	; 0x3da2 <draw>
    38aa:	db cf       	rjmp	.-74     	; 0x3862 <main+0xc>

000038ac <init>:

void init() {
    38ac:	0f 93       	push	r16
    38ae:	1f 93       	push	r17
    38b0:	cf 93       	push	r28
    38b2:	df 93       	push	r29
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    38b4:	0e 94 72 21 	call	0x42e4	; 0x42e4 <rand>
	return result;
}

void init() {
	heroX = rnd(SCREEN_TILES_H);
    38b8:	08 e2       	ldi	r16, 0x28	; 40
    38ba:	10 e0       	ldi	r17, 0x00	; 0
    38bc:	b8 01       	movw	r22, r16
    38be:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <__divmodhi4>
    38c2:	90 93 2f 09 	sts	0x092F, r25	; 0x80092f <heroX+0x1>
    38c6:	80 93 2e 09 	sts	0x092E, r24	; 0x80092e <heroX>
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    38ca:	0e 94 72 21 	call	0x42e4	; 0x42e4 <rand>
	return result;
}

void init() {
	heroX = rnd(SCREEN_TILES_H);
	heroY = rnd(SCREEN_TILES_V);
    38ce:	c2 e1       	ldi	r28, 0x12	; 18
    38d0:	d0 e0       	ldi	r29, 0x00	; 0
    38d2:	be 01       	movw	r22, r28
    38d4:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <__divmodhi4>
    38d8:	90 93 31 09 	sts	0x0931, r25	; 0x800931 <heroY+0x1>
    38dc:	80 93 30 09 	sts	0x0930, r24	; 0x800930 <heroY>
	enemyY = 0;
    38e0:	10 92 35 09 	sts	0x0935, r1	; 0x800935 <enemyY+0x1>
    38e4:	10 92 34 09 	sts	0x0934, r1	; 0x800934 <enemyY>
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    38e8:	0e 94 72 21 	call	0x42e4	; 0x42e4 <rand>
void init() {
	heroX = rnd(SCREEN_TILES_H);
	heroY = rnd(SCREEN_TILES_V);
	enemyY = 0;

	enemyX = rnd(SCREEN_TILES_V);
    38ec:	be 01       	movw	r22, r28
    38ee:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <__divmodhi4>
    38f2:	90 93 33 09 	sts	0x0933, r25	; 0x800933 <enemyX+0x1>
    38f6:	80 93 32 09 	sts	0x0932, r24	; 0x800932 <enemyX>
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    38fa:	0e 94 72 21 	call	0x42e4	; 0x42e4 <rand>
	heroX = rnd(SCREEN_TILES_H);
	heroY = rnd(SCREEN_TILES_V);
	enemyY = 0;

	enemyX = rnd(SCREEN_TILES_V);
	followerY = rnd(SCREEN_TILES_V);
    38fe:	be 01       	movw	r22, r28
    3900:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <__divmodhi4>
    3904:	90 93 39 09 	sts	0x0939, r25	; 0x800939 <followerY+0x1>
    3908:	80 93 38 09 	sts	0x0938, r24	; 0x800938 <followerY>
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    390c:	0e 94 72 21 	call	0x42e4	; 0x42e4 <rand>
	heroY = rnd(SCREEN_TILES_V);
	enemyY = 0;

	enemyX = rnd(SCREEN_TILES_V);
	followerY = rnd(SCREEN_TILES_V);
	followerX = rnd(SCREEN_TILES_H);
    3910:	b8 01       	movw	r22, r16
    3912:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <__divmodhi4>
    3916:	90 93 37 09 	sts	0x0937, r25	; 0x800937 <followerX+0x1>
    391a:	80 93 36 09 	sts	0x0936, r24	; 0x800936 <followerX>
}
    391e:	df 91       	pop	r29
    3920:	cf 91       	pop	r28
    3922:	1f 91       	pop	r17
    3924:	0f 91       	pop	r16
    3926:	08 95       	ret

00003928 <update>:

void update() {
    3928:	af 92       	push	r10
    392a:	bf 92       	push	r11
    392c:	cf 92       	push	r12
    392e:	df 92       	push	r13
    3930:	ef 92       	push	r14
    3932:	ff 92       	push	r15
    3934:	0f 93       	push	r16
    3936:	1f 93       	push	r17
    3938:	cf 93       	push	r28
    393a:	df 93       	push	r29

	switch(buttonPressed){
    393c:	80 91 49 09 	lds	r24, 0x0949	; 0x800949 <buttonPressed>
    3940:	90 91 4a 09 	lds	r25, 0x094A	; 0x80094a <buttonPressed+0x1>
    3944:	80 32       	cpi	r24, 0x20	; 32
    3946:	91 05       	cpc	r25, r1
    3948:	c9 f1       	breq	.+114    	; 0x39bc <update+0x94>
    394a:	5c f4       	brge	.+22     	; 0x3962 <update+0x3a>
    394c:	82 30       	cpi	r24, 0x02	; 2
    394e:	91 05       	cpc	r25, r1
    3950:	09 f4       	brne	.+2      	; 0x3954 <update+0x2c>
    3952:	6d c0       	rjmp	.+218    	; 0x3a2e <update+0x106>
    3954:	80 31       	cpi	r24, 0x10	; 16
    3956:	91 05       	cpc	r25, r1
    3958:	d1 f0       	breq	.+52     	; 0x398e <update+0x66>
    395a:	01 97       	sbiw	r24, 0x01	; 1
    395c:	09 f0       	breq	.+2      	; 0x3960 <update+0x38>
    395e:	6d c0       	rjmp	.+218    	; 0x3a3a <update+0x112>
    3960:	38 c0       	rjmp	.+112    	; 0x39d2 <update+0xaa>
    3962:	80 38       	cpi	r24, 0x80	; 128
    3964:	91 05       	cpc	r25, r1
    3966:	09 f4       	brne	.+2      	; 0x396a <update+0x42>
    3968:	62 c0       	rjmp	.+196    	; 0x3a2e <update+0x106>
    396a:	4c f4       	brge	.+18     	; 0x397e <update+0x56>
    396c:	80 34       	cpi	r24, 0x40	; 64
    396e:	91 05       	cpc	r25, r1
    3970:	09 f0       	breq	.+2      	; 0x3974 <update+0x4c>
    3972:	63 c0       	rjmp	.+198    	; 0x3a3a <update+0x112>
				instruc = setTrue(instruc,beTrue);
				}
			break;
		}
		case BTN_LEFT:{
			MoveHero(-1, 0);
    3974:	60 e0       	ldi	r22, 0x00	; 0
    3976:	70 e0       	ldi	r23, 0x00	; 0
    3978:	8f ef       	ldi	r24, 0xFF	; 255
    397a:	9f ef       	ldi	r25, 0xFF	; 255
    397c:	5c c0       	rjmp	.+184    	; 0x3a36 <update+0x10e>
	followerX = rnd(SCREEN_TILES_H);
}

void update() {

	switch(buttonPressed){
    397e:	81 15       	cp	r24, r1
    3980:	21 e0       	ldi	r18, 0x01	; 1
    3982:	92 07       	cpc	r25, r18
    3984:	09 f1       	breq	.+66     	; 0x39c8 <update+0xa0>
    3986:	81 15       	cp	r24, r1
    3988:	92 40       	sbci	r25, 0x02	; 2
    398a:	31 f1       	breq	.+76     	; 0x39d8 <update+0xb0>
    398c:	56 c0       	rjmp	.+172    	; 0x3a3a <update+0x112>
		case BTN_UP:{
			if(game)
    398e:	c0 91 41 09 	lds	r28, 0x0941	; 0x800941 <game>
    3992:	c1 11       	cpse	r28, r1
    3994:	08 c0       	rjmp	.+16     	; 0x39a6 <update+0x7e>
			{MoveHero(0, -1);}
			if(!game || instruc)
			{
				game = setTrue(game,beTrue);
    3996:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <beTrue>
    399a:	8c 2f       	mov	r24, r28
    399c:	0e 94 28 1c 	call	0x3850	; 0x3850 <setTrue>
    39a0:	80 93 41 09 	sts	0x0941, r24	; 0x800941 <game>
    39a4:	4a c0       	rjmp	.+148    	; 0x3a3a <update+0x112>
void update() {

	switch(buttonPressed){
		case BTN_UP:{
			if(game)
			{MoveHero(0, -1);}
    39a6:	6f ef       	ldi	r22, 0xFF	; 255
    39a8:	7f ef       	ldi	r23, 0xFF	; 255
    39aa:	80 e0       	ldi	r24, 0x00	; 0
    39ac:	90 e0       	ldi	r25, 0x00	; 0
    39ae:	0e 94 2c 20 	call	0x4058	; 0x4058 <MoveHero>
			if(!game || instruc)
    39b2:	80 91 42 09 	lds	r24, 0x0942	; 0x800942 <instruc>
    39b6:	81 11       	cpse	r24, r1
    39b8:	ee cf       	rjmp	.-36     	; 0x3996 <update+0x6e>
    39ba:	3f c0       	rjmp	.+126    	; 0x3a3a <update+0x112>
				game = setTrue(game,beTrue);
			}
			break;
		}
		case BTN_DOWN:{
			if(game)
    39bc:	80 91 41 09 	lds	r24, 0x0941	; 0x800941 <game>
    39c0:	88 23       	and	r24, r24
    39c2:	09 f4       	brne	.+2      	; 0x39c6 <update+0x9e>
    39c4:	d7 c1       	rjmp	.+942    	; 0x3d74 <update+0x44c>
    39c6:	05 c0       	rjmp	.+10     	; 0x39d2 <update+0xaa>
		case BTN_RIGHT:{
			MoveHero(1, 0);
			break;
		}
		case BTN_A:{
			MoveHero(0, -1);
    39c8:	6f ef       	ldi	r22, 0xFF	; 255
    39ca:	7f ef       	ldi	r23, 0xFF	; 255
    39cc:	80 e0       	ldi	r24, 0x00	; 0
    39ce:	90 e0       	ldi	r25, 0x00	; 0
    39d0:	32 c0       	rjmp	.+100    	; 0x3a36 <update+0x10e>
			break;
		}
		case BTN_B:{
			MoveHero(0, 1);
    39d2:	61 e0       	ldi	r22, 0x01	; 1
    39d4:	70 e0       	ldi	r23, 0x00	; 0
    39d6:	fa cf       	rjmp	.-12     	; 0x39cc <update+0xa4>
			break;
		}
		case BTN_X:{
			MoveHero(-1, 0);
    39d8:	60 e0       	ldi	r22, 0x00	; 0
    39da:	70 e0       	ldi	r23, 0x00	; 0
    39dc:	8f ef       	ldi	r24, 0xFF	; 255
    39de:	9f ef       	ldi	r25, 0xFF	; 255
    39e0:	0e 94 2c 20 	call	0x4058	; 0x4058 <MoveHero>
			if(shop && !haveArmour)
    39e4:	80 91 40 09 	lds	r24, 0x0940	; 0x800940 <shop>
    39e8:	88 23       	and	r24, r24
    39ea:	39 f1       	breq	.+78     	; 0x3a3a <update+0x112>
    39ec:	80 91 43 09 	lds	r24, 0x0943	; 0x800943 <haveArmour>
    39f0:	81 11       	cpse	r24, r1
    39f2:	23 c0       	rjmp	.+70     	; 0x3a3a <update+0x112>
			{
				hideText = setTrue(hideText,beTrue);
    39f4:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <beTrue>
    39f8:	80 91 46 09 	lds	r24, 0x0946	; 0x800946 <hideText>
    39fc:	0e 94 28 1c 	call	0x3850	; 0x3850 <setTrue>
    3a00:	80 93 46 09 	sts	0x0946, r24	; 0x800946 <hideText>
				money = getMoney(money,-10);
    3a04:	66 ef       	ldi	r22, 0xF6	; 246
    3a06:	7f ef       	ldi	r23, 0xFF	; 255
    3a08:	80 91 3e 09 	lds	r24, 0x093E	; 0x80093e <money>
    3a0c:	90 91 3f 09 	lds	r25, 0x093F	; 0x80093f <money+0x1>
    3a10:	0e 94 25 1c 	call	0x384a	; 0x384a <getMoney>
    3a14:	90 93 3f 09 	sts	0x093F, r25	; 0x80093f <money+0x1>
    3a18:	80 93 3e 09 	sts	0x093E, r24	; 0x80093e <money>
				haveArmour = setTrue(haveArmour,beTrue);
    3a1c:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <beTrue>
    3a20:	80 91 43 09 	lds	r24, 0x0943	; 0x800943 <haveArmour>
    3a24:	0e 94 28 1c 	call	0x3850	; 0x3850 <setTrue>
    3a28:	80 93 43 09 	sts	0x0943, r24	; 0x800943 <haveArmour>
    3a2c:	06 c0       	rjmp	.+12     	; 0x3a3a <update+0x112>
			}
			break;
		}
		case BTN_Y:{
			MoveHero(1, 0);
    3a2e:	60 e0       	ldi	r22, 0x00	; 0
    3a30:	70 e0       	ldi	r23, 0x00	; 0
    3a32:	81 e0       	ldi	r24, 0x01	; 1
    3a34:	90 e0       	ldi	r25, 0x00	; 0
    3a36:	0e 94 2c 20 	call	0x4058	; 0x4058 <MoveHero>
		default:
			break;
	}


	buttonPrevious = buttonHeld;
    3a3a:	80 91 47 09 	lds	r24, 0x0947	; 0x800947 <buttonHeld>
    3a3e:	90 91 48 09 	lds	r25, 0x0948	; 0x800948 <buttonHeld+0x1>
    3a42:	90 93 4e 09 	sts	0x094E, r25	; 0x80094e <buttonPrevious+0x1>
    3a46:	80 93 4d 09 	sts	0x094D, r24	; 0x80094d <buttonPrevious>
	buttonPrevious = buttonHeld;
if(game){
    3a4a:	80 91 41 09 	lds	r24, 0x0941	; 0x800941 <game>
    3a4e:	88 23       	and	r24, r24
    3a50:	09 f4       	brne	.+2      	; 0x3a54 <update+0x12c>
    3a52:	9c c1       	rjmp	.+824    	; 0x3d8c <update+0x464>
	followerThinkTime++;
    3a54:	20 91 3a 09 	lds	r18, 0x093A	; 0x80093a <followerThinkTime>
    3a58:	30 91 3b 09 	lds	r19, 0x093B	; 0x80093b <followerThinkTime+0x1>
    3a5c:	2f 5f       	subi	r18, 0xFF	; 255
    3a5e:	3f 4f       	sbci	r19, 0xFF	; 255
    3a60:	30 93 3b 09 	sts	0x093B, r19	; 0x80093b <followerThinkTime+0x1>
    3a64:	20 93 3a 09 	sts	0x093A, r18	; 0x80093a <followerThinkTime>
	if (followerThinkTime > followerThinkInterval) {
    3a68:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <followerThinkInterval>
    3a6c:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <followerThinkInterval+0x1>
    3a70:	82 17       	cp	r24, r18
    3a72:	93 07       	cpc	r25, r19
    3a74:	0c f0       	brlt	.+2      	; 0x3a78 <update+0x150>
    3a76:	40 c0       	rjmp	.+128    	; 0x3af8 <update+0x1d0>
		if (followerX < heroX)
    3a78:	20 91 36 09 	lds	r18, 0x0936	; 0x800936 <followerX>
    3a7c:	30 91 37 09 	lds	r19, 0x0937	; 0x800937 <followerX+0x1>
    3a80:	40 91 2e 09 	lds	r20, 0x092E	; 0x80092e <heroX>
    3a84:	50 91 2f 09 	lds	r21, 0x092F	; 0x80092f <heroX+0x1>
    3a88:	24 17       	cp	r18, r20
    3a8a:	35 07       	cpc	r19, r21
    3a8c:	34 f4       	brge	.+12     	; 0x3a9a <update+0x172>
			followerX++;
    3a8e:	2f 5f       	subi	r18, 0xFF	; 255
    3a90:	3f 4f       	sbci	r19, 0xFF	; 255
    3a92:	30 93 37 09 	sts	0x0937, r19	; 0x800937 <followerX+0x1>
    3a96:	20 93 36 09 	sts	0x0936, r18	; 0x800936 <followerX>
		if (followerX > heroX)
    3a9a:	20 91 36 09 	lds	r18, 0x0936	; 0x800936 <followerX>
    3a9e:	30 91 37 09 	lds	r19, 0x0937	; 0x800937 <followerX+0x1>
    3aa2:	42 17       	cp	r20, r18
    3aa4:	53 07       	cpc	r21, r19
    3aa6:	34 f4       	brge	.+12     	; 0x3ab4 <update+0x18c>
			followerX--;
    3aa8:	21 50       	subi	r18, 0x01	; 1
    3aaa:	31 09       	sbc	r19, r1
    3aac:	30 93 37 09 	sts	0x0937, r19	; 0x800937 <followerX+0x1>
    3ab0:	20 93 36 09 	sts	0x0936, r18	; 0x800936 <followerX>
		if (followerY < heroY)
    3ab4:	20 91 38 09 	lds	r18, 0x0938	; 0x800938 <followerY>
    3ab8:	30 91 39 09 	lds	r19, 0x0939	; 0x800939 <followerY+0x1>
    3abc:	40 91 30 09 	lds	r20, 0x0930	; 0x800930 <heroY>
    3ac0:	50 91 31 09 	lds	r21, 0x0931	; 0x800931 <heroY+0x1>
    3ac4:	24 17       	cp	r18, r20
    3ac6:	35 07       	cpc	r19, r21
    3ac8:	34 f4       	brge	.+12     	; 0x3ad6 <update+0x1ae>
			followerY++;
    3aca:	2f 5f       	subi	r18, 0xFF	; 255
    3acc:	3f 4f       	sbci	r19, 0xFF	; 255
    3ace:	30 93 39 09 	sts	0x0939, r19	; 0x800939 <followerY+0x1>
    3ad2:	20 93 38 09 	sts	0x0938, r18	; 0x800938 <followerY>
		if (followerY > heroY)
    3ad6:	20 91 38 09 	lds	r18, 0x0938	; 0x800938 <followerY>
    3ada:	30 91 39 09 	lds	r19, 0x0939	; 0x800939 <followerY+0x1>
    3ade:	42 17       	cp	r20, r18
    3ae0:	53 07       	cpc	r21, r19
    3ae2:	34 f4       	brge	.+12     	; 0x3af0 <update+0x1c8>
			followerY--;
    3ae4:	21 50       	subi	r18, 0x01	; 1
    3ae6:	31 09       	sbc	r19, r1
    3ae8:	30 93 39 09 	sts	0x0939, r19	; 0x800939 <followerY+0x1>
    3aec:	20 93 38 09 	sts	0x0938, r18	; 0x800938 <followerY>
		followerThinkTime = 0;
    3af0:	10 92 3b 09 	sts	0x093B, r1	; 0x80093b <followerThinkTime+0x1>
    3af4:	10 92 3a 09 	sts	0x093A, r1	; 0x80093a <followerThinkTime>
	}
	if (score > 3 && followerThinkInterval > 0) {
    3af8:	20 91 3c 09 	lds	r18, 0x093C	; 0x80093c <score>
    3afc:	30 91 3d 09 	lds	r19, 0x093D	; 0x80093d <score+0x1>
    3b00:	24 30       	cpi	r18, 0x04	; 4
    3b02:	31 05       	cpc	r19, r1
    3b04:	2c f0       	brlt	.+10     	; 0x3b10 <update+0x1e8>
    3b06:	18 16       	cp	r1, r24
    3b08:	19 06       	cpc	r1, r25
    3b0a:	6c f4       	brge	.+26     	; 0x3b26 <update+0x1fe>
		followerThinkInterval--;
    3b0c:	01 97       	sbiw	r24, 0x01	; 1
    3b0e:	07 c0       	rjmp	.+14     	; 0x3b1e <update+0x1f6>
	}

	if (score == 0 && followerThinkInterval <= 0){
    3b10:	23 2b       	or	r18, r19
    3b12:	49 f4       	brne	.+18     	; 0x3b26 <update+0x1fe>
    3b14:	18 16       	cp	r1, r24
    3b16:	19 06       	cpc	r1, r25
    3b18:	34 f0       	brlt	.+12     	; 0x3b26 <update+0x1fe>
		followerThinkInterval = FOLLOWER_TIME_INTERVAL;
    3b1a:	8c e2       	ldi	r24, 0x2C	; 44
    3b1c:	91 e0       	ldi	r25, 0x01	; 1
    3b1e:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <followerThinkInterval+0x1>
    3b22:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <followerThinkInterval>
	}

	//write code to move the enemy down screen
	enemyY++;
    3b26:	80 91 34 09 	lds	r24, 0x0934	; 0x800934 <enemyY>
    3b2a:	90 91 35 09 	lds	r25, 0x0935	; 0x800935 <enemyY+0x1>
    3b2e:	01 96       	adiw	r24, 0x01	; 1
    3b30:	90 93 35 09 	sts	0x0935, r25	; 0x800935 <enemyY+0x1>
    3b34:	80 93 34 09 	sts	0x0934, r24	; 0x800934 <enemyY>

	// check if the enemy has reached the bottom of the screen
	if (enemyY >= SCREEN_TILES_V - enemyHeight) {
    3b38:	40 91 06 01 	lds	r20, 0x0106	; 0x800106 <enemyHeight>
    3b3c:	50 91 07 01 	lds	r21, 0x0107	; 0x800107 <enemyHeight+0x1>
    3b40:	22 e1       	ldi	r18, 0x12	; 18
    3b42:	30 e0       	ldi	r19, 0x00	; 0
    3b44:	24 1b       	sub	r18, r20
    3b46:	35 0b       	sbc	r19, r21
    3b48:	82 17       	cp	r24, r18
    3b4a:	93 07       	cpc	r25, r19
    3b4c:	ac f0       	brlt	.+42     	; 0x3b78 <update+0x250>
		// reset enemy here..
		// to top of screen and a random y
		enemyX = rnd(SCREEN_TILES_H - enemyWidth);
    3b4e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <enemyWidth>
    3b52:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <enemyWidth+0x1>
    3b56:	c8 e2       	ldi	r28, 0x28	; 40
    3b58:	d0 e0       	ldi	r29, 0x00	; 0
    3b5a:	c8 1b       	sub	r28, r24
    3b5c:	d9 0b       	sbc	r29, r25
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    3b5e:	0e 94 72 21 	call	0x42e4	; 0x42e4 <rand>

	// check if the enemy has reached the bottom of the screen
	if (enemyY >= SCREEN_TILES_V - enemyHeight) {
		// reset enemy here..
		// to top of screen and a random y
		enemyX = rnd(SCREEN_TILES_H - enemyWidth);
    3b62:	be 01       	movw	r22, r28
    3b64:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <__divmodhi4>
    3b68:	90 93 33 09 	sts	0x0933, r25	; 0x800933 <enemyX+0x1>
    3b6c:	80 93 32 09 	sts	0x0932, r24	; 0x800932 <enemyX>
		enemyY = 0;
    3b70:	10 92 35 09 	sts	0x0935, r1	; 0x800935 <enemyY+0x1>
    3b74:	10 92 34 09 	sts	0x0934, r1	; 0x800934 <enemyY>
	}
	if (checkCollision(heroX, heroY, heroWidth, heroHeight, enemyX, enemyY,
    3b78:	a0 90 06 01 	lds	r10, 0x0106	; 0x800106 <enemyHeight>
    3b7c:	b0 90 07 01 	lds	r11, 0x0107	; 0x800107 <enemyHeight+0x1>
    3b80:	c0 90 04 01 	lds	r12, 0x0104	; 0x800104 <enemyWidth>
    3b84:	d0 90 05 01 	lds	r13, 0x0105	; 0x800105 <enemyWidth+0x1>
    3b88:	e0 90 34 09 	lds	r14, 0x0934	; 0x800934 <enemyY>
    3b8c:	f0 90 35 09 	lds	r15, 0x0935	; 0x800935 <enemyY+0x1>
    3b90:	00 91 32 09 	lds	r16, 0x0932	; 0x800932 <enemyX>
    3b94:	10 91 33 09 	lds	r17, 0x0933	; 0x800933 <enemyX+0x1>
    3b98:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <heroHeight>
    3b9c:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <heroHeight+0x1>
    3ba0:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
    3ba4:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
    3ba8:	60 91 30 09 	lds	r22, 0x0930	; 0x800930 <heroY>
    3bac:	70 91 31 09 	lds	r23, 0x0931	; 0x800931 <heroY+0x1>
    3bb0:	80 91 2e 09 	lds	r24, 0x092E	; 0x80092e <heroX>
    3bb4:	90 91 2f 09 	lds	r25, 0x092F	; 0x80092f <heroX+0x1>
    3bb8:	0e 94 05 20 	call	0x400a	; 0x400a <checkCollision>
    3bbc:	88 23       	and	r24, r24
    3bbe:	c1 f1       	breq	.+112    	; 0x3c30 <update+0x308>
			enemyWidth, enemyHeight) == true) {
		// write code to add score and reset enemy
		score = getScore(score, 1);
    3bc0:	61 e0       	ldi	r22, 0x01	; 1
    3bc2:	70 e0       	ldi	r23, 0x00	; 0
    3bc4:	80 91 3c 09 	lds	r24, 0x093C	; 0x80093c <score>
    3bc8:	90 91 3d 09 	lds	r25, 0x093D	; 0x80093d <score+0x1>
    3bcc:	0e 94 22 1c 	call	0x3844	; 0x3844 <getScore>
    3bd0:	90 93 3d 09 	sts	0x093D, r25	; 0x80093d <score+0x1>
    3bd4:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <score>
		if(score >= 7)
    3bd8:	87 30       	cpi	r24, 0x07	; 7
    3bda:	91 05       	cpc	r25, r1
    3bdc:	a4 f0       	brlt	.+40     	; 0x3c06 <update+0x2de>
		{
			score = getScore(score,-7);
    3bde:	69 ef       	ldi	r22, 0xF9	; 249
    3be0:	7f ef       	ldi	r23, 0xFF	; 255
    3be2:	0e 94 22 1c 	call	0x3844	; 0x3844 <getScore>
    3be6:	90 93 3d 09 	sts	0x093D, r25	; 0x80093d <score+0x1>
    3bea:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <score>
			money = getMoney(money,1);
    3bee:	61 e0       	ldi	r22, 0x01	; 1
    3bf0:	70 e0       	ldi	r23, 0x00	; 0
    3bf2:	80 91 3e 09 	lds	r24, 0x093E	; 0x80093e <money>
    3bf6:	90 91 3f 09 	lds	r25, 0x093F	; 0x80093f <money+0x1>
    3bfa:	0e 94 25 1c 	call	0x384a	; 0x384a <getMoney>
    3bfe:	90 93 3f 09 	sts	0x093F, r25	; 0x80093f <money+0x1>
    3c02:	80 93 3e 09 	sts	0x093E, r24	; 0x80093e <money>
		}
		enemyX = rnd(SCREEN_TILES_H - enemyWidth);
    3c06:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <enemyWidth>
    3c0a:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <enemyWidth+0x1>
    3c0e:	c8 e2       	ldi	r28, 0x28	; 40
    3c10:	d0 e0       	ldi	r29, 0x00	; 0
    3c12:	c8 1b       	sub	r28, r24
    3c14:	d9 0b       	sbc	r29, r25
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    3c16:	0e 94 72 21 	call	0x42e4	; 0x42e4 <rand>
		if(score >= 7)
		{
			score = getScore(score,-7);
			money = getMoney(money,1);
		}
		enemyX = rnd(SCREEN_TILES_H - enemyWidth);
    3c1a:	be 01       	movw	r22, r28
    3c1c:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <__divmodhi4>
    3c20:	90 93 33 09 	sts	0x0933, r25	; 0x800933 <enemyX+0x1>
    3c24:	80 93 32 09 	sts	0x0932, r24	; 0x800932 <enemyX>
		enemyY = 0;
    3c28:	10 92 35 09 	sts	0x0935, r1	; 0x800935 <enemyY+0x1>
    3c2c:	10 92 34 09 	sts	0x0934, r1	; 0x800934 <enemyY>
	}

	if (checkCollision(heroX, heroY, heroWidth, heroHeight, followerX,
    3c30:	a0 90 0a 01 	lds	r10, 0x010A	; 0x80010a <followerHeight>
    3c34:	b0 90 0b 01 	lds	r11, 0x010B	; 0x80010b <followerHeight+0x1>
    3c38:	c0 90 08 01 	lds	r12, 0x0108	; 0x800108 <followerWidth>
    3c3c:	d0 90 09 01 	lds	r13, 0x0109	; 0x800109 <followerWidth+0x1>
    3c40:	e0 90 38 09 	lds	r14, 0x0938	; 0x800938 <followerY>
    3c44:	f0 90 39 09 	lds	r15, 0x0939	; 0x800939 <followerY+0x1>
    3c48:	00 91 36 09 	lds	r16, 0x0936	; 0x800936 <followerX>
    3c4c:	10 91 37 09 	lds	r17, 0x0937	; 0x800937 <followerX+0x1>
    3c50:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <heroHeight>
    3c54:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <heroHeight+0x1>
    3c58:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
    3c5c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
    3c60:	60 91 30 09 	lds	r22, 0x0930	; 0x800930 <heroY>
    3c64:	70 91 31 09 	lds	r23, 0x0931	; 0x800931 <heroY+0x1>
    3c68:	80 91 2e 09 	lds	r24, 0x092E	; 0x80092e <heroX>
    3c6c:	90 91 2f 09 	lds	r25, 0x092F	; 0x80092f <heroX+0x1>
    3c70:	0e 94 05 20 	call	0x400a	; 0x400a <checkCollision>
    3c74:	88 23       	and	r24, r24
    3c76:	09 f4       	brne	.+2      	; 0x3c7a <update+0x352>
    3c78:	49 c0       	rjmp	.+146    	; 0x3d0c <update+0x3e4>
			followerY, followerWidth, followerHeight) == true) {
		// write code to add score and reset enemy
		if(!haveArmour)
    3c7a:	80 91 43 09 	lds	r24, 0x0943	; 0x800943 <haveArmour>
    3c7e:	81 11       	cpse	r24, r1
    3c80:	19 c0       	rjmp	.+50     	; 0x3cb4 <update+0x38c>
		{score = getScore(score, -1);
    3c82:	6f ef       	ldi	r22, 0xFF	; 255
    3c84:	7f ef       	ldi	r23, 0xFF	; 255
    3c86:	80 91 3c 09 	lds	r24, 0x093C	; 0x80093c <score>
    3c8a:	90 91 3d 09 	lds	r25, 0x093D	; 0x80093d <score+0x1>
    3c8e:	0e 94 22 1c 	call	0x3844	; 0x3844 <getScore>
    3c92:	90 93 3d 09 	sts	0x093D, r25	; 0x80093d <score+0x1>
    3c96:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <score>
		health = getHealth(health, -1);}
    3c9a:	6f ef       	ldi	r22, 0xFF	; 255
    3c9c:	7f ef       	ldi	r23, 0xFF	; 255
    3c9e:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <health>
    3ca2:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <health+0x1>
    3ca6:	0e 94 1f 1c 	call	0x383e	; 0x383e <getHealth>
    3caa:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <health+0x1>
    3cae:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <health>
    3cb2:	0c c0       	rjmp	.+24     	; 0x3ccc <update+0x3a4>
		else{
			enemyHealth = getHealth(enemyHealth,-5);
    3cb4:	6b ef       	ldi	r22, 0xFB	; 251
    3cb6:	7f ef       	ldi	r23, 0xFF	; 255
    3cb8:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <enemyHealth>
    3cbc:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <enemyHealth+0x1>
    3cc0:	0e 94 1f 1c 	call	0x383e	; 0x383e <getHealth>
    3cc4:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <enemyHealth+0x1>
    3cc8:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <enemyHealth>
		}
		if(score <= 0 )
    3ccc:	80 91 3c 09 	lds	r24, 0x093C	; 0x80093c <score>
    3cd0:	90 91 3d 09 	lds	r25, 0x093D	; 0x80093d <score+0x1>
    3cd4:	18 16       	cp	r1, r24
    3cd6:	19 06       	cpc	r1, r25
    3cd8:	24 f0       	brlt	.+8      	; 0x3ce2 <update+0x3ba>
		{
			score = 0;
    3cda:	10 92 3d 09 	sts	0x093D, r1	; 0x80093d <score+0x1>
    3cde:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <score>
		}
		followerX = rnd(SCREEN_TILES_H - followerWidth);
    3ce2:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <followerWidth>
    3ce6:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <followerWidth+0x1>
    3cea:	c8 e2       	ldi	r28, 0x28	; 40
    3cec:	d0 e0       	ldi	r29, 0x00	; 0
    3cee:	c8 1b       	sub	r28, r24
    3cf0:	d9 0b       	sbc	r29, r25
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    3cf2:	0e 94 72 21 	call	0x42e4	; 0x42e4 <rand>
		}
		if(score <= 0 )
		{
			score = 0;
		}
		followerX = rnd(SCREEN_TILES_H - followerWidth);
    3cf6:	be 01       	movw	r22, r28
    3cf8:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <__divmodhi4>
    3cfc:	90 93 37 09 	sts	0x0937, r25	; 0x800937 <followerX+0x1>
    3d00:	80 93 36 09 	sts	0x0936, r24	; 0x800936 <followerX>
		followerY = 0;
    3d04:	10 92 39 09 	sts	0x0939, r1	; 0x800939 <followerY+0x1>
    3d08:	10 92 38 09 	sts	0x0938, r1	; 0x800938 <followerY>
	}
	if(money == 10)
    3d0c:	80 91 3e 09 	lds	r24, 0x093E	; 0x80093e <money>
    3d10:	90 91 3f 09 	lds	r25, 0x093F	; 0x80093f <money+0x1>
    3d14:	0a 97       	sbiw	r24, 0x0a	; 10
    3d16:	41 f4       	brne	.+16     	; 0x3d28 <update+0x400>
	{
		shop = setTrue(shop,beTrue);
    3d18:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <beTrue>
    3d1c:	80 91 40 09 	lds	r24, 0x0940	; 0x800940 <shop>
    3d20:	0e 94 28 1c 	call	0x3850	; 0x3850 <setTrue>
    3d24:	80 93 40 09 	sts	0x0940, r24	; 0x800940 <shop>
	}

	if(enemyHealth <= 0 || health <= 0)
    3d28:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <enemyHealth>
    3d2c:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <enemyHealth+0x1>
    3d30:	18 16       	cp	r1, r24
    3d32:	19 06       	cpc	r1, r25
    3d34:	3c f4       	brge	.+14     	; 0x3d44 <update+0x41c>
    3d36:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <health>
    3d3a:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <health+0x1>
    3d3e:	18 16       	cp	r1, r24
    3d40:	19 06       	cpc	r1, r25
    3d42:	24 f1       	brlt	.+72     	; 0x3d8c <update+0x464>
	{
		gameEnd = setTrue(gameEnd,beTrue);
    3d44:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <beTrue>
    3d48:	80 91 44 09 	lds	r24, 0x0944	; 0x800944 <gameEnd>
    3d4c:	0e 94 28 1c 	call	0x3850	; 0x3850 <setTrue>
    3d50:	80 93 44 09 	sts	0x0944, r24	; 0x800944 <gameEnd>
		if(enemyHealth <= 0){
    3d54:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <enemyHealth>
    3d58:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <enemyHealth+0x1>
    3d5c:	18 16       	cp	r1, r24
    3d5e:	19 06       	cpc	r1, r25
    3d60:	ac f0       	brlt	.+42     	; 0x3d8c <update+0x464>
			playerWin = setTrue(playerWin,beTrue);
    3d62:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <beTrue>
    3d66:	80 91 45 09 	lds	r24, 0x0945	; 0x800945 <playerWin>
    3d6a:	0e 94 28 1c 	call	0x3850	; 0x3850 <setTrue>
    3d6e:	80 93 45 09 	sts	0x0945, r24	; 0x800945 <playerWin>
		}
	}
}
}
    3d72:	0c c0       	rjmp	.+24     	; 0x3d8c <update+0x464>
			break;
		}
		case BTN_DOWN:{
			if(game)
			{MoveHero(0, 1);}
			if(!game && !instruc)
    3d74:	80 91 42 09 	lds	r24, 0x0942	; 0x800942 <instruc>
    3d78:	81 11       	cpse	r24, r1
    3d7a:	5f ce       	rjmp	.-834    	; 0x3a3a <update+0x112>
			{
				instruc = setTrue(instruc,beTrue);
    3d7c:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <beTrue>
    3d80:	80 e0       	ldi	r24, 0x00	; 0
    3d82:	0e 94 28 1c 	call	0x3850	; 0x3850 <setTrue>
    3d86:	80 93 42 09 	sts	0x0942, r24	; 0x800942 <instruc>
    3d8a:	57 ce       	rjmp	.-850    	; 0x3a3a <update+0x112>
		if(enemyHealth <= 0){
			playerWin = setTrue(playerWin,beTrue);
		}
	}
}
}
    3d8c:	df 91       	pop	r29
    3d8e:	cf 91       	pop	r28
    3d90:	1f 91       	pop	r17
    3d92:	0f 91       	pop	r16
    3d94:	ff 90       	pop	r15
    3d96:	ef 90       	pop	r14
    3d98:	df 90       	pop	r13
    3d9a:	cf 90       	pop	r12
    3d9c:	bf 90       	pop	r11
    3d9e:	af 90       	pop	r10
    3da0:	08 95       	ret

00003da2 <draw>:

void draw() {
    3da2:	0f 93       	push	r16
	//Clear the screen (fills Vram with tile zero)
	ClearVram();
    3da4:	0e 94 37 11 	call	0x226e	; 0x226e <ClearVram>
	if(!game)
    3da8:	80 91 41 09 	lds	r24, 0x0941	; 0x800941 <game>
    3dac:	81 11       	cpse	r24, r1
    3dae:	5b c0       	rjmp	.+182    	; 0x3e66 <draw+0xc4>
	{
		if(!instruc)
    3db0:	80 91 42 09 	lds	r24, 0x0942	; 0x800942 <instruc>
    3db4:	81 11       	cpse	r24, r1
    3db6:	27 c0       	rjmp	.+78     	; 0x3e06 <draw+0x64>
		{Print(13, 3, PSTR("Welcome to Game"));
    3db8:	44 ea       	ldi	r20, 0xA4	; 164
    3dba:	5b e1       	ldi	r21, 0x1B	; 27
    3dbc:	63 e0       	ldi	r22, 0x03	; 3
    3dbe:	70 e0       	ldi	r23, 0x00	; 0
    3dc0:	8d e0       	ldi	r24, 0x0D	; 13
    3dc2:	90 e0       	ldi	r25, 0x00	; 0
    3dc4:	0e 94 bc 1b 	call	0x3778	; 0x3778 <Print>
		Print(12, 5, PSTR("Please enjoy Game"));
    3dc8:	44 eb       	ldi	r20, 0xB4	; 180
    3dca:	5b e1       	ldi	r21, 0x1B	; 27
    3dcc:	65 e0       	ldi	r22, 0x05	; 5
    3dce:	70 e0       	ldi	r23, 0x00	; 0
    3dd0:	8c e0       	ldi	r24, 0x0C	; 12
    3dd2:	90 e0       	ldi	r25, 0x00	; 0
    3dd4:	0e 94 bc 1b 	call	0x3778	; 0x3778 <Print>
		Print(13, 9, PSTR("UP - Start Game"));
    3dd8:	46 ec       	ldi	r20, 0xC6	; 198
    3dda:	5b e1       	ldi	r21, 0x1B	; 27
    3ddc:	69 e0       	ldi	r22, 0x09	; 9
    3dde:	70 e0       	ldi	r23, 0x00	; 0
    3de0:	8d e0       	ldi	r24, 0x0D	; 13
    3de2:	90 e0       	ldi	r25, 0x00	; 0
    3de4:	0e 94 bc 1b 	call	0x3778	; 0x3778 <Print>
		Print(12, 11, PSTR("DOWN - Instructions"));
    3de8:	46 ed       	ldi	r20, 0xD6	; 214
    3dea:	5b e1       	ldi	r21, 0x1B	; 27
    3dec:	6b e0       	ldi	r22, 0x0B	; 11
    3dee:	70 e0       	ldi	r23, 0x00	; 0
    3df0:	8c e0       	ldi	r24, 0x0C	; 12
    3df2:	90 e0       	ldi	r25, 0x00	; 0
    3df4:	0e 94 bc 1b 	call	0x3778	; 0x3778 <Print>
		Print(17, 16, PSTR("Please"));}
    3df8:	4a ee       	ldi	r20, 0xEA	; 234
    3dfa:	5b e1       	ldi	r21, 0x1B	; 27
    3dfc:	60 e1       	ldi	r22, 0x10	; 16
    3dfe:	70 e0       	ldi	r23, 0x00	; 0
    3e00:	81 e1       	ldi	r24, 0x11	; 17
    3e02:	90 e0       	ldi	r25, 0x00	; 0
    3e04:	2e c0       	rjmp	.+92     	; 0x3e62 <draw+0xc0>
		else{
			Print(8, 3, PSTR("Collect falling artefacts"));
    3e06:	41 ef       	ldi	r20, 0xF1	; 241
    3e08:	5b e1       	ldi	r21, 0x1B	; 27
    3e0a:	63 e0       	ldi	r22, 0x03	; 3
    3e0c:	70 e0       	ldi	r23, 0x00	; 0
    3e0e:	88 e0       	ldi	r24, 0x08	; 8
    3e10:	90 e0       	ldi	r25, 0x00	; 0
    3e12:	0e 94 bc 1b 	call	0x3778	; 0x3778 <Print>
			Print(7, 5, PSTR("Avoid artefact loving Boss"));
    3e16:	4b e0       	ldi	r20, 0x0B	; 11
    3e18:	5c e1       	ldi	r21, 0x1C	; 28
    3e1a:	65 e0       	ldi	r22, 0x05	; 5
    3e1c:	70 e0       	ldi	r23, 0x00	; 0
    3e1e:	87 e0       	ldi	r24, 0x07	; 7
    3e20:	90 e0       	ldi	r25, 0x00	; 0
    3e22:	0e 94 bc 1b 	call	0x3778	; 0x3778 <Print>
			Print(6, 7, PSTR("7 artefacts give you 1 money"));
    3e26:	46 e2       	ldi	r20, 0x26	; 38
    3e28:	5c e1       	ldi	r21, 0x1C	; 28
    3e2a:	67 e0       	ldi	r22, 0x07	; 7
    3e2c:	70 e0       	ldi	r23, 0x00	; 0
    3e2e:	86 e0       	ldi	r24, 0x06	; 6
    3e30:	90 e0       	ldi	r25, 0x00	; 0
    3e32:	0e 94 bc 1b 	call	0x3778	; 0x3778 <Print>
			Print(2, 9, PSTR("Collect 20 money to get thorns armour"));
    3e36:	43 e4       	ldi	r20, 0x43	; 67
    3e38:	5c e1       	ldi	r21, 0x1C	; 28
    3e3a:	69 e0       	ldi	r22, 0x09	; 9
    3e3c:	70 e0       	ldi	r23, 0x00	; 0
    3e3e:	82 e0       	ldi	r24, 0x02	; 2
    3e40:	90 e0       	ldi	r25, 0x00	; 0
    3e42:	0e 94 bc 1b 	call	0x3778	; 0x3778 <Print>
			Print(2, 11, PSTR("Run into boss to kill him with thorns"));
    3e46:	49 e6       	ldi	r20, 0x69	; 105
    3e48:	5c e1       	ldi	r21, 0x1C	; 28
    3e4a:	6b e0       	ldi	r22, 0x0B	; 11
    3e4c:	70 e0       	ldi	r23, 0x00	; 0
    3e4e:	82 e0       	ldi	r24, 0x02	; 2
    3e50:	90 e0       	ldi	r25, 0x00	; 0
    3e52:	0e 94 bc 1b 	call	0x3778	; 0x3778 <Print>
			Print(13, 15, PSTR("UP - Start Game"));
    3e56:	4f e8       	ldi	r20, 0x8F	; 143
    3e58:	5c e1       	ldi	r21, 0x1C	; 28
    3e5a:	6f e0       	ldi	r22, 0x0F	; 15
    3e5c:	70 e0       	ldi	r23, 0x00	; 0
    3e5e:	8d e0       	ldi	r24, 0x0D	; 13
    3e60:	90 e0       	ldi	r25, 0x00	; 0
    3e62:	0e 94 bc 1b 	call	0x3778	; 0x3778 <Print>
		}
	}
	if(game)
    3e66:	80 91 41 09 	lds	r24, 0x0941	; 0x800941 <game>
    3e6a:	88 23       	and	r24, r24
    3e6c:	09 f4       	brne	.+2      	; 0x3e70 <draw+0xce>
    3e6e:	cb c0       	rjmp	.+406    	; 0x4006 <draw+0x264>
	{
		if(gameEnd){
    3e70:	80 91 44 09 	lds	r24, 0x0944	; 0x800944 <gameEnd>
    3e74:	88 23       	and	r24, r24
    3e76:	c1 f0       	breq	.+48     	; 0x3ea8 <draw+0x106>
			Print(15, 7, PSTR("Game Over"));
    3e78:	4f e9       	ldi	r20, 0x9F	; 159
    3e7a:	5c e1       	ldi	r21, 0x1C	; 28
    3e7c:	67 e0       	ldi	r22, 0x07	; 7
    3e7e:	70 e0       	ldi	r23, 0x00	; 0
    3e80:	8f e0       	ldi	r24, 0x0F	; 15
    3e82:	90 e0       	ldi	r25, 0x00	; 0
    3e84:	0e 94 bc 1b 	call	0x3778	; 0x3778 <Print>
			if(playerWin)
    3e88:	80 91 45 09 	lds	r24, 0x0945	; 0x800945 <playerWin>
    3e8c:	88 23       	and	r24, r24
    3e8e:	19 f0       	breq	.+6      	; 0x3e96 <draw+0xf4>
			{
				Print(15, 9, PSTR("You win"));
    3e90:	49 ea       	ldi	r20, 0xA9	; 169
    3e92:	5c e1       	ldi	r21, 0x1C	; 28
    3e94:	02 c0       	rjmp	.+4      	; 0x3e9a <draw+0xf8>
			}
			else{
				Print(15, 9, PSTR("You lose"));
    3e96:	41 eb       	ldi	r20, 0xB1	; 177
    3e98:	5c e1       	ldi	r21, 0x1C	; 28
    3e9a:	69 e0       	ldi	r22, 0x09	; 9
    3e9c:	70 e0       	ldi	r23, 0x00	; 0
    3e9e:	8f e0       	ldi	r24, 0x0F	; 15
    3ea0:	90 e0       	ldi	r25, 0x00	; 0
		drawRectangle(heroX, heroY, heroWidth, heroHeight, '0');
		drawRectangle(enemyX, enemyY, enemyWidth, enemyHeight, '$');
		drawRectangle(followerX, followerY, followerWidth, followerHeight, 'X');
	}	
	}
}
    3ea2:	0f 91       	pop	r16
			if(playerWin)
			{
				Print(15, 9, PSTR("You win"));
			}
			else{
				Print(15, 9, PSTR("You lose"));
    3ea4:	0c 94 bc 1b 	jmp	0x3778	; 0x3778 <Print>
			}
		}
		else{
		Print(1, 0, PSTR("Artefacts"));
    3ea8:	4a eb       	ldi	r20, 0xBA	; 186
    3eaa:	5c e1       	ldi	r21, 0x1C	; 28
    3eac:	60 e0       	ldi	r22, 0x00	; 0
    3eae:	70 e0       	ldi	r23, 0x00	; 0
    3eb0:	81 e0       	ldi	r24, 0x01	; 1
    3eb2:	90 e0       	ldi	r25, 0x00	; 0
    3eb4:	0e 94 bc 1b 	call	0x3778	; 0x3778 <Print>
		PrintInt(14, 0, score, false);
    3eb8:	40 91 3c 09 	lds	r20, 0x093C	; 0x80093c <score>
    3ebc:	50 91 3d 09 	lds	r21, 0x093D	; 0x80093d <score+0x1>
    3ec0:	20 e0       	ldi	r18, 0x00	; 0
    3ec2:	60 e0       	ldi	r22, 0x00	; 0
    3ec4:	70 e0       	ldi	r23, 0x00	; 0
    3ec6:	8e e0       	ldi	r24, 0x0E	; 14
    3ec8:	90 e0       	ldi	r25, 0x00	; 0
    3eca:	0e 94 84 1b 	call	0x3708	; 0x3708 <PrintInt>
		if(shop && !hideText)
    3ece:	80 91 40 09 	lds	r24, 0x0940	; 0x800940 <shop>
    3ed2:	88 23       	and	r24, r24
    3ed4:	61 f0       	breq	.+24     	; 0x3eee <draw+0x14c>
    3ed6:	80 91 46 09 	lds	r24, 0x0946	; 0x800946 <hideText>
    3eda:	81 11       	cpse	r24, r1
    3edc:	08 c0       	rjmp	.+16     	; 0x3eee <draw+0x14c>
		{
			Print(25, 15, PSTR("Buy Thorns - X"));
    3ede:	44 ec       	ldi	r20, 0xC4	; 196
    3ee0:	5c e1       	ldi	r21, 0x1C	; 28
    3ee2:	6f e0       	ldi	r22, 0x0F	; 15
    3ee4:	70 e0       	ldi	r23, 0x00	; 0
    3ee6:	89 e1       	ldi	r24, 0x19	; 25
    3ee8:	90 e0       	ldi	r25, 0x00	; 0
    3eea:	0e 94 bc 1b 	call	0x3778	; 0x3778 <Print>
		}
		PrintInt(19, 0, heroX, false);
    3eee:	40 91 2e 09 	lds	r20, 0x092E	; 0x80092e <heroX>
    3ef2:	50 91 2f 09 	lds	r21, 0x092F	; 0x80092f <heroX+0x1>
    3ef6:	20 e0       	ldi	r18, 0x00	; 0
    3ef8:	60 e0       	ldi	r22, 0x00	; 0
    3efa:	70 e0       	ldi	r23, 0x00	; 0
    3efc:	83 e1       	ldi	r24, 0x13	; 19
    3efe:	90 e0       	ldi	r25, 0x00	; 0
    3f00:	0e 94 84 1b 	call	0x3708	; 0x3708 <PrintInt>
		PrintInt(24, 0, heroY, false);
    3f04:	40 91 30 09 	lds	r20, 0x0930	; 0x800930 <heroY>
    3f08:	50 91 31 09 	lds	r21, 0x0931	; 0x800931 <heroY+0x1>
    3f0c:	20 e0       	ldi	r18, 0x00	; 0
    3f0e:	60 e0       	ldi	r22, 0x00	; 0
    3f10:	70 e0       	ldi	r23, 0x00	; 0
    3f12:	88 e1       	ldi	r24, 0x18	; 24
    3f14:	90 e0       	ldi	r25, 0x00	; 0
    3f16:	0e 94 84 1b 	call	0x3708	; 0x3708 <PrintInt>

	if(!haveArmour){
    3f1a:	80 91 43 09 	lds	r24, 0x0943	; 0x800943 <haveArmour>
    3f1e:	81 11       	cpse	r24, r1
    3f20:	13 c0       	rjmp	.+38     	; 0x3f48 <draw+0x1a6>
		Print(27, 0, PSTR("Health"));
    3f22:	43 ed       	ldi	r20, 0xD3	; 211
    3f24:	5c e1       	ldi	r21, 0x1C	; 28
    3f26:	60 e0       	ldi	r22, 0x00	; 0
    3f28:	70 e0       	ldi	r23, 0x00	; 0
    3f2a:	8b e1       	ldi	r24, 0x1B	; 27
    3f2c:	90 e0       	ldi	r25, 0x00	; 0
    3f2e:	0e 94 bc 1b 	call	0x3778	; 0x3778 <Print>
		PrintInt(37, 0, health, false);}
    3f32:	40 91 0e 01 	lds	r20, 0x010E	; 0x80010e <health>
    3f36:	50 91 0f 01 	lds	r21, 0x010F	; 0x80010f <health+0x1>
    3f3a:	20 e0       	ldi	r18, 0x00	; 0
    3f3c:	60 e0       	ldi	r22, 0x00	; 0
    3f3e:	70 e0       	ldi	r23, 0x00	; 0
    3f40:	85 e2       	ldi	r24, 0x25	; 37
    3f42:	90 e0       	ldi	r25, 0x00	; 0
    3f44:	0e 94 84 1b 	call	0x3708	; 0x3708 <PrintInt>
		Print(1, 17, PSTR("EnemyHealth"));
    3f48:	4a ed       	ldi	r20, 0xDA	; 218
    3f4a:	5c e1       	ldi	r21, 0x1C	; 28
    3f4c:	61 e1       	ldi	r22, 0x11	; 17
    3f4e:	70 e0       	ldi	r23, 0x00	; 0
    3f50:	81 e0       	ldi	r24, 0x01	; 1
    3f52:	90 e0       	ldi	r25, 0x00	; 0
    3f54:	0e 94 bc 1b 	call	0x3778	; 0x3778 <Print>
		PrintInt(16, 17, enemyHealth, false);
    3f58:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <enemyHealth>
    3f5c:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <enemyHealth+0x1>
    3f60:	20 e0       	ldi	r18, 0x00	; 0
    3f62:	61 e1       	ldi	r22, 0x11	; 17
    3f64:	70 e0       	ldi	r23, 0x00	; 0
    3f66:	80 e1       	ldi	r24, 0x10	; 16
    3f68:	90 e0       	ldi	r25, 0x00	; 0
    3f6a:	0e 94 84 1b 	call	0x3708	; 0x3708 <PrintInt>
		Print(27,17,PSTR("Money"));
    3f6e:	46 ee       	ldi	r20, 0xE6	; 230
    3f70:	5c e1       	ldi	r21, 0x1C	; 28
    3f72:	61 e1       	ldi	r22, 0x11	; 17
    3f74:	70 e0       	ldi	r23, 0x00	; 0
    3f76:	8b e1       	ldi	r24, 0x1B	; 27
    3f78:	90 e0       	ldi	r25, 0x00	; 0
    3f7a:	0e 94 bc 1b 	call	0x3778	; 0x3778 <Print>
		PrintInt (37,17,money,false);
    3f7e:	40 91 3e 09 	lds	r20, 0x093E	; 0x80093e <money>
    3f82:	50 91 3f 09 	lds	r21, 0x093F	; 0x80093f <money+0x1>
    3f86:	20 e0       	ldi	r18, 0x00	; 0
    3f88:	61 e1       	ldi	r22, 0x11	; 17
    3f8a:	70 e0       	ldi	r23, 0x00	; 0
    3f8c:	85 e2       	ldi	r24, 0x25	; 37
    3f8e:	90 e0       	ldi	r25, 0x00	; 0
    3f90:	0e 94 84 1b 	call	0x3708	; 0x3708 <PrintInt>
		drawRectangle(heroX, heroY, heroWidth, heroHeight, '0');
    3f94:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <heroHeight>
    3f98:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <heroHeight+0x1>
    3f9c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
    3fa0:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
    3fa4:	60 91 30 09 	lds	r22, 0x0930	; 0x800930 <heroY>
    3fa8:	70 91 31 09 	lds	r23, 0x0931	; 0x800931 <heroY+0x1>
    3fac:	00 e3       	ldi	r16, 0x30	; 48
    3fae:	80 91 2e 09 	lds	r24, 0x092E	; 0x80092e <heroX>
    3fb2:	90 91 2f 09 	lds	r25, 0x092F	; 0x80092f <heroX+0x1>
    3fb6:	0e 94 72 20 	call	0x40e4	; 0x40e4 <drawRectangle>
		drawRectangle(enemyX, enemyY, enemyWidth, enemyHeight, '$');
    3fba:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <enemyHeight>
    3fbe:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <enemyHeight+0x1>
    3fc2:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <enemyWidth>
    3fc6:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <enemyWidth+0x1>
    3fca:	60 91 34 09 	lds	r22, 0x0934	; 0x800934 <enemyY>
    3fce:	70 91 35 09 	lds	r23, 0x0935	; 0x800935 <enemyY+0x1>
    3fd2:	04 e2       	ldi	r16, 0x24	; 36
    3fd4:	80 91 32 09 	lds	r24, 0x0932	; 0x800932 <enemyX>
    3fd8:	90 91 33 09 	lds	r25, 0x0933	; 0x800933 <enemyX+0x1>
    3fdc:	0e 94 72 20 	call	0x40e4	; 0x40e4 <drawRectangle>
		drawRectangle(followerX, followerY, followerWidth, followerHeight, 'X');
    3fe0:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <followerHeight>
    3fe4:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <followerHeight+0x1>
    3fe8:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <followerWidth>
    3fec:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <followerWidth+0x1>
    3ff0:	60 91 38 09 	lds	r22, 0x0938	; 0x800938 <followerY>
    3ff4:	70 91 39 09 	lds	r23, 0x0939	; 0x800939 <followerY+0x1>
    3ff8:	08 e5       	ldi	r16, 0x58	; 88
    3ffa:	80 91 36 09 	lds	r24, 0x0936	; 0x800936 <followerX>
    3ffe:	90 91 37 09 	lds	r25, 0x0937	; 0x800937 <followerX+0x1>
    4002:	0e 94 72 20 	call	0x40e4	; 0x40e4 <drawRectangle>
	}	
	}
}
    4006:	0f 91       	pop	r16
    4008:	08 95       	ret

0000400a <checkCollision>:
bool checkCollision(int x1, int y1, int width1, int height1, int x2, int y2,
		int width2, int height2) {
    400a:	af 92       	push	r10
    400c:	bf 92       	push	r11
    400e:	cf 92       	push	r12
    4010:	df 92       	push	r13
    4012:	ef 92       	push	r14
    4014:	ff 92       	push	r15
    4016:	0f 93       	push	r16
    4018:	1f 93       	push	r17
	// write the code to return true if collided.
	if (x1 + width1 < x2 || y1 + height1 < y2 || x1 > x2 + width2
    401a:	48 0f       	add	r20, r24
    401c:	59 1f       	adc	r21, r25
    401e:	40 17       	cp	r20, r16
    4020:	51 07       	cpc	r21, r17
    4022:	84 f0       	brlt	.+32     	; 0x4044 <checkCollision+0x3a>
    4024:	26 0f       	add	r18, r22
    4026:	37 1f       	adc	r19, r23
    4028:	2e 15       	cp	r18, r14
    402a:	3f 05       	cpc	r19, r15
    402c:	5c f0       	brlt	.+22     	; 0x4044 <checkCollision+0x3a>
    402e:	c0 0e       	add	r12, r16
    4030:	d1 1e       	adc	r13, r17
    4032:	c8 16       	cp	r12, r24
    4034:	d9 06       	cpc	r13, r25
    4036:	34 f0       	brlt	.+12     	; 0x4044 <checkCollision+0x3a>
			|| y1 > y2 + height2) {
    4038:	ae 0c       	add	r10, r14
    403a:	bf 1c       	adc	r11, r15
    403c:	81 e0       	ldi	r24, 0x01	; 1
    403e:	a6 16       	cp	r10, r22
    4040:	b7 06       	cpc	r11, r23
    4042:	0c f4       	brge	.+2      	; 0x4046 <checkCollision+0x3c>
		return false;
    4044:	80 e0       	ldi	r24, 0x00	; 0
	} else {
		return true;
	}
}
    4046:	1f 91       	pop	r17
    4048:	0f 91       	pop	r16
    404a:	ff 90       	pop	r15
    404c:	ef 90       	pop	r14
    404e:	df 90       	pop	r13
    4050:	cf 90       	pop	r12
    4052:	bf 90       	pop	r11
    4054:	af 90       	pop	r10
    4056:	08 95       	ret

00004058 <MoveHero>:

void MoveHero(int x, int y) {
    4058:	ef 92       	push	r14
    405a:	ff 92       	push	r15
    405c:	0f 93       	push	r16
    405e:	1f 93       	push	r17
    4060:	cf 93       	push	r28
    4062:	df 93       	push	r29
	// write code to move hero
	heroX = heroX + x;
    4064:	00 91 2e 09 	lds	r16, 0x092E	; 0x80092e <heroX>
    4068:	10 91 2f 09 	lds	r17, 0x092F	; 0x80092f <heroX+0x1>
    406c:	f8 01       	movw	r30, r16
    406e:	e8 0f       	add	r30, r24
    4070:	f9 1f       	adc	r31, r25
    4072:	f0 93 2f 09 	sts	0x092F, r31	; 0x80092f <heroX+0x1>
    4076:	e0 93 2e 09 	sts	0x092E, r30	; 0x80092e <heroX>
	heroY = heroY + y;
    407a:	c0 91 30 09 	lds	r28, 0x0930	; 0x800930 <heroY>
    407e:	d0 91 31 09 	lds	r29, 0x0931	; 0x800931 <heroY+0x1>
    4082:	9e 01       	movw	r18, r28
    4084:	26 0f       	add	r18, r22
    4086:	37 1f       	adc	r19, r23
    4088:	30 93 31 09 	sts	0x0931, r19	; 0x800931 <heroY+0x1>
    408c:	20 93 30 09 	sts	0x0930, r18	; 0x800930 <heroY>

	// write code to check if the hero is inside the window
	if (heroX < 0 || heroX + (TILE_WIDTH / heroWidth) >= SCREEN_TILES_H || heroY < 0
    4090:	f7 fd       	sbrc	r31, 7
    4092:	19 c0       	rjmp	.+50     	; 0x40c6 <MoveHero+0x6e>
    4094:	e0 90 00 01 	lds	r14, 0x0100	; 0x800100 <__data_start>
    4098:	f0 90 01 01 	lds	r15, 0x0101	; 0x800101 <__data_start+0x1>
    409c:	86 e0       	ldi	r24, 0x06	; 6
    409e:	90 e0       	ldi	r25, 0x00	; 0
    40a0:	b7 01       	movw	r22, r14
    40a2:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <__divmodhi4>
    40a6:	e6 0f       	add	r30, r22
    40a8:	f7 1f       	adc	r31, r23
    40aa:	b8 97       	sbiw	r30, 0x28	; 40
    40ac:	64 f4       	brge	.+24     	; 0x40c6 <MoveHero+0x6e>
    40ae:	37 fd       	sbrc	r19, 7
    40b0:	0a c0       	rjmp	.+20     	; 0x40c6 <MoveHero+0x6e>
			|| heroY + (TILE_HEIGHT / heroWidth) >= SCREEN_TILES_V ) {
    40b2:	8c e0       	ldi	r24, 0x0C	; 12
    40b4:	90 e0       	ldi	r25, 0x00	; 0
    40b6:	b7 01       	movw	r22, r14
    40b8:	0e 94 f0 20 	call	0x41e0	; 0x41e0 <__divmodhi4>
    40bc:	26 0f       	add	r18, r22
    40be:	37 1f       	adc	r19, r23
    40c0:	22 31       	cpi	r18, 0x12	; 18
    40c2:	31 05       	cpc	r19, r1
    40c4:	44 f0       	brlt	.+16     	; 0x40d6 <MoveHero+0x7e>
		heroX = heroX - x;
    40c6:	10 93 2f 09 	sts	0x092F, r17	; 0x80092f <heroX+0x1>
    40ca:	00 93 2e 09 	sts	0x092E, r16	; 0x80092e <heroX>
		heroY = heroY - y;
    40ce:	d0 93 31 09 	sts	0x0931, r29	; 0x800931 <heroY+0x1>
    40d2:	c0 93 30 09 	sts	0x0930, r28	; 0x800930 <heroY>
	}
}
    40d6:	df 91       	pop	r29
    40d8:	cf 91       	pop	r28
    40da:	1f 91       	pop	r17
    40dc:	0f 91       	pop	r16
    40de:	ff 90       	pop	r15
    40e0:	ef 90       	pop	r14
    40e2:	08 95       	ret

000040e4 <drawRectangle>:

void drawRectangle(int x, int y, int width, int height, char c) {
    40e4:	5f 92       	push	r5
    40e6:	6f 92       	push	r6
    40e8:	7f 92       	push	r7
    40ea:	8f 92       	push	r8
    40ec:	9f 92       	push	r9
    40ee:	af 92       	push	r10
    40f0:	bf 92       	push	r11
    40f2:	cf 92       	push	r12
    40f4:	df 92       	push	r13
    40f6:	ef 92       	push	r14
    40f8:	ff 92       	push	r15
    40fa:	0f 93       	push	r16
    40fc:	1f 93       	push	r17
    40fe:	cf 93       	push	r28
    4100:	df 93       	push	r29
	if (x < SCREEN_TILES_H && y < SCREEN_TILES_V) {
    4102:	88 32       	cpi	r24, 0x28	; 40
    4104:	91 05       	cpc	r25, r1
    4106:	0c f0       	brlt	.+2      	; 0x410a <drawRectangle+0x26>
    4108:	47 c0       	rjmp	.+142    	; 0x4198 <drawRectangle+0xb4>
    410a:	62 31       	cpi	r22, 0x12	; 18
    410c:	71 05       	cpc	r23, r1
    410e:	0c f0       	brlt	.+2      	; 0x4112 <drawRectangle+0x2e>
    4110:	43 c0       	rjmp	.+134    	; 0x4198 <drawRectangle+0xb4>
    4112:	50 2e       	mov	r5, r16
    4114:	49 01       	movw	r8, r18
    4116:	ea 01       	movw	r28, r20
    4118:	7b 01       	movw	r14, r22
    411a:	8c 01       	movw	r16, r24
    411c:	3c 01       	movw	r6, r24

		for (int i = 0; i < width; i++) {
			if (x + i < SCREEN_TILES_H && y < SCREEN_TILES_V) {
				PrintChar(x + i, y, c);
			}
			if (y + height - 1 < SCREEN_TILES_V) {
    411e:	6b 01       	movw	r12, r22
    4120:	c2 0e       	add	r12, r18
    4122:	d3 1e       	adc	r13, r19
				PrintChar(x + i, y + height - 1, c);
    4124:	56 01       	movw	r10, r12
    4126:	81 e0       	ldi	r24, 0x01	; 1
    4128:	a8 1a       	sub	r10, r24
    412a:	b1 08       	sbc	r11, r1
}

void drawRectangle(int x, int y, int width, int height, char c) {
	if (x < SCREEN_TILES_H && y < SCREEN_TILES_V) {

		for (int i = 0; i < width; i++) {
    412c:	c3 01       	movw	r24, r6
    412e:	80 1b       	sub	r24, r16
    4130:	91 0b       	sbc	r25, r17
    4132:	8c 17       	cp	r24, r28
    4134:	9d 07       	cpc	r25, r29
    4136:	b4 f4       	brge	.+44     	; 0x4164 <drawRectangle+0x80>
			if (x + i < SCREEN_TILES_H && y < SCREEN_TILES_V) {
    4138:	88 e2       	ldi	r24, 0x28	; 40
    413a:	68 16       	cp	r6, r24
    413c:	71 04       	cpc	r7, r1
    413e:	2c f4       	brge	.+10     	; 0x414a <drawRectangle+0x66>
				PrintChar(x + i, y, c);
    4140:	45 2d       	mov	r20, r5
    4142:	b7 01       	movw	r22, r14
    4144:	c3 01       	movw	r24, r6
    4146:	0e 94 e0 1b 	call	0x37c0	; 0x37c0 <PrintChar>
			}
			if (y + height - 1 < SCREEN_TILES_V) {
    414a:	83 e1       	ldi	r24, 0x13	; 19
    414c:	c8 16       	cp	r12, r24
    414e:	d1 04       	cpc	r13, r1
    4150:	2c f4       	brge	.+10     	; 0x415c <drawRectangle+0x78>
				PrintChar(x + i, y + height - 1, c);
    4152:	45 2d       	mov	r20, r5
    4154:	b5 01       	movw	r22, r10
    4156:	c3 01       	movw	r24, r6
    4158:	0e 94 e0 1b 	call	0x37c0	; 0x37c0 <PrintChar>
    415c:	8f ef       	ldi	r24, 0xFF	; 255
    415e:	68 1a       	sub	r6, r24
    4160:	78 0a       	sbc	r7, r24
    4162:	e4 cf       	rjmp	.-56     	; 0x412c <drawRectangle+0x48>
}

void drawRectangle(int x, int y, int width, int height, char c) {
	if (x < SCREEN_TILES_H && y < SCREEN_TILES_V) {

		for (int i = 0; i < width; i++) {
    4164:	cc 24       	eor	r12, r12
    4166:	c3 94       	inc	r12
    4168:	d1 2c       	mov	r13, r1
				PrintChar(x + i, y + height - 1, c);
			}
		}
		for (int i = 1; i < height; i++) {
			PrintChar(x, y + i, c);
			PrintChar(x + width - 1, y + i, c);
    416a:	c0 0f       	add	r28, r16
    416c:	d1 1f       	adc	r29, r17
    416e:	21 97       	sbiw	r28, 0x01	; 1
			}
			if (y + height - 1 < SCREEN_TILES_V) {
				PrintChar(x + i, y + height - 1, c);
			}
		}
		for (int i = 1; i < height; i++) {
    4170:	c8 14       	cp	r12, r8
    4172:	d9 04       	cpc	r13, r9
    4174:	8c f4       	brge	.+34     	; 0x4198 <drawRectangle+0xb4>
    4176:	57 01       	movw	r10, r14
    4178:	ac 0c       	add	r10, r12
    417a:	bd 1c       	adc	r11, r13
			PrintChar(x, y + i, c);
    417c:	45 2d       	mov	r20, r5
    417e:	b5 01       	movw	r22, r10
    4180:	c8 01       	movw	r24, r16
    4182:	0e 94 e0 1b 	call	0x37c0	; 0x37c0 <PrintChar>
			PrintChar(x + width - 1, y + i, c);
    4186:	45 2d       	mov	r20, r5
    4188:	b5 01       	movw	r22, r10
    418a:	ce 01       	movw	r24, r28
    418c:	0e 94 e0 1b 	call	0x37c0	; 0x37c0 <PrintChar>
			}
			if (y + height - 1 < SCREEN_TILES_V) {
				PrintChar(x + i, y + height - 1, c);
			}
		}
		for (int i = 1; i < height; i++) {
    4190:	8f ef       	ldi	r24, 0xFF	; 255
    4192:	c8 1a       	sub	r12, r24
    4194:	d8 0a       	sbc	r13, r24
    4196:	ec cf       	rjmp	.-40     	; 0x4170 <drawRectangle+0x8c>
			PrintChar(x, y + i, c);
			PrintChar(x + width - 1, y + i, c);
		}
	}
}
    4198:	df 91       	pop	r29
    419a:	cf 91       	pop	r28
    419c:	1f 91       	pop	r17
    419e:	0f 91       	pop	r16
    41a0:	ff 90       	pop	r15
    41a2:	ef 90       	pop	r14
    41a4:	df 90       	pop	r13
    41a6:	cf 90       	pop	r12
    41a8:	bf 90       	pop	r11
    41aa:	af 90       	pop	r10
    41ac:	9f 90       	pop	r9
    41ae:	8f 90       	pop	r8
    41b0:	7f 90       	pop	r7
    41b2:	6f 90       	pop	r6
    41b4:	5f 90       	pop	r5
    41b6:	08 95       	ret

000041b8 <__udivmodhi4>:
    41b8:	aa 1b       	sub	r26, r26
    41ba:	bb 1b       	sub	r27, r27
    41bc:	51 e1       	ldi	r21, 0x11	; 17
    41be:	07 c0       	rjmp	.+14     	; 0x41ce <__udivmodhi4_ep>

000041c0 <__udivmodhi4_loop>:
    41c0:	aa 1f       	adc	r26, r26
    41c2:	bb 1f       	adc	r27, r27
    41c4:	a6 17       	cp	r26, r22
    41c6:	b7 07       	cpc	r27, r23
    41c8:	10 f0       	brcs	.+4      	; 0x41ce <__udivmodhi4_ep>
    41ca:	a6 1b       	sub	r26, r22
    41cc:	b7 0b       	sbc	r27, r23

000041ce <__udivmodhi4_ep>:
    41ce:	88 1f       	adc	r24, r24
    41d0:	99 1f       	adc	r25, r25
    41d2:	5a 95       	dec	r21
    41d4:	a9 f7       	brne	.-22     	; 0x41c0 <__udivmodhi4_loop>
    41d6:	80 95       	com	r24
    41d8:	90 95       	com	r25
    41da:	bc 01       	movw	r22, r24
    41dc:	cd 01       	movw	r24, r26
    41de:	08 95       	ret

000041e0 <__divmodhi4>:
    41e0:	97 fb       	bst	r25, 7
    41e2:	07 2e       	mov	r0, r23
    41e4:	16 f4       	brtc	.+4      	; 0x41ea <__divmodhi4+0xa>
    41e6:	00 94       	com	r0
    41e8:	07 d0       	rcall	.+14     	; 0x41f8 <__divmodhi4_neg1>
    41ea:	77 fd       	sbrc	r23, 7
    41ec:	09 d0       	rcall	.+18     	; 0x4200 <__divmodhi4_neg2>
    41ee:	0e 94 dc 20 	call	0x41b8	; 0x41b8 <__udivmodhi4>
    41f2:	07 fc       	sbrc	r0, 7
    41f4:	05 d0       	rcall	.+10     	; 0x4200 <__divmodhi4_neg2>
    41f6:	3e f4       	brtc	.+14     	; 0x4206 <__divmodhi4_exit>

000041f8 <__divmodhi4_neg1>:
    41f8:	90 95       	com	r25
    41fa:	81 95       	neg	r24
    41fc:	9f 4f       	sbci	r25, 0xFF	; 255
    41fe:	08 95       	ret

00004200 <__divmodhi4_neg2>:
    4200:	70 95       	com	r23
    4202:	61 95       	neg	r22
    4204:	7f 4f       	sbci	r23, 0xFF	; 255

00004206 <__divmodhi4_exit>:
    4206:	08 95       	ret

00004208 <__udivmodsi4>:
    4208:	a1 e2       	ldi	r26, 0x21	; 33
    420a:	1a 2e       	mov	r1, r26
    420c:	aa 1b       	sub	r26, r26
    420e:	bb 1b       	sub	r27, r27
    4210:	fd 01       	movw	r30, r26
    4212:	0d c0       	rjmp	.+26     	; 0x422e <__udivmodsi4_ep>

00004214 <__udivmodsi4_loop>:
    4214:	aa 1f       	adc	r26, r26
    4216:	bb 1f       	adc	r27, r27
    4218:	ee 1f       	adc	r30, r30
    421a:	ff 1f       	adc	r31, r31
    421c:	a2 17       	cp	r26, r18
    421e:	b3 07       	cpc	r27, r19
    4220:	e4 07       	cpc	r30, r20
    4222:	f5 07       	cpc	r31, r21
    4224:	20 f0       	brcs	.+8      	; 0x422e <__udivmodsi4_ep>
    4226:	a2 1b       	sub	r26, r18
    4228:	b3 0b       	sbc	r27, r19
    422a:	e4 0b       	sbc	r30, r20
    422c:	f5 0b       	sbc	r31, r21

0000422e <__udivmodsi4_ep>:
    422e:	66 1f       	adc	r22, r22
    4230:	77 1f       	adc	r23, r23
    4232:	88 1f       	adc	r24, r24
    4234:	99 1f       	adc	r25, r25
    4236:	1a 94       	dec	r1
    4238:	69 f7       	brne	.-38     	; 0x4214 <__udivmodsi4_loop>
    423a:	60 95       	com	r22
    423c:	70 95       	com	r23
    423e:	80 95       	com	r24
    4240:	90 95       	com	r25
    4242:	9b 01       	movw	r18, r22
    4244:	ac 01       	movw	r20, r24
    4246:	bd 01       	movw	r22, r26
    4248:	cf 01       	movw	r24, r30
    424a:	08 95       	ret

0000424c <do_rand>:
    424c:	8f 92       	push	r8
    424e:	9f 92       	push	r9
    4250:	af 92       	push	r10
    4252:	bf 92       	push	r11
    4254:	cf 92       	push	r12
    4256:	df 92       	push	r13
    4258:	ef 92       	push	r14
    425a:	ff 92       	push	r15
    425c:	cf 93       	push	r28
    425e:	df 93       	push	r29
    4260:	ec 01       	movw	r28, r24
    4262:	68 81       	ld	r22, Y
    4264:	79 81       	ldd	r23, Y+1	; 0x01
    4266:	8a 81       	ldd	r24, Y+2	; 0x02
    4268:	9b 81       	ldd	r25, Y+3	; 0x03
    426a:	61 15       	cp	r22, r1
    426c:	71 05       	cpc	r23, r1
    426e:	81 05       	cpc	r24, r1
    4270:	91 05       	cpc	r25, r1
    4272:	21 f4       	brne	.+8      	; 0x427c <do_rand+0x30>
    4274:	64 e2       	ldi	r22, 0x24	; 36
    4276:	79 ed       	ldi	r23, 0xD9	; 217
    4278:	8b e5       	ldi	r24, 0x5B	; 91
    427a:	97 e0       	ldi	r25, 0x07	; 7
    427c:	2d e1       	ldi	r18, 0x1D	; 29
    427e:	33 ef       	ldi	r19, 0xF3	; 243
    4280:	41 e0       	ldi	r20, 0x01	; 1
    4282:	50 e0       	ldi	r21, 0x00	; 0
    4284:	0e 94 82 21 	call	0x4304	; 0x4304 <__divmodsi4>
    4288:	49 01       	movw	r8, r18
    428a:	5a 01       	movw	r10, r20
    428c:	9b 01       	movw	r18, r22
    428e:	ac 01       	movw	r20, r24
    4290:	a7 ea       	ldi	r26, 0xA7	; 167
    4292:	b1 e4       	ldi	r27, 0x41	; 65
    4294:	0e 94 a1 21 	call	0x4342	; 0x4342 <__muluhisi3>
    4298:	6b 01       	movw	r12, r22
    429a:	7c 01       	movw	r14, r24
    429c:	ac ee       	ldi	r26, 0xEC	; 236
    429e:	b4 ef       	ldi	r27, 0xF4	; 244
    42a0:	a5 01       	movw	r20, r10
    42a2:	94 01       	movw	r18, r8
    42a4:	0e 94 af 21 	call	0x435e	; 0x435e <__mulohisi3>
    42a8:	dc 01       	movw	r26, r24
    42aa:	cb 01       	movw	r24, r22
    42ac:	8c 0d       	add	r24, r12
    42ae:	9d 1d       	adc	r25, r13
    42b0:	ae 1d       	adc	r26, r14
    42b2:	bf 1d       	adc	r27, r15
    42b4:	b7 ff       	sbrs	r27, 7
    42b6:	03 c0       	rjmp	.+6      	; 0x42be <do_rand+0x72>
    42b8:	01 97       	sbiw	r24, 0x01	; 1
    42ba:	a1 09       	sbc	r26, r1
    42bc:	b0 48       	sbci	r27, 0x80	; 128
    42be:	88 83       	st	Y, r24
    42c0:	99 83       	std	Y+1, r25	; 0x01
    42c2:	aa 83       	std	Y+2, r26	; 0x02
    42c4:	bb 83       	std	Y+3, r27	; 0x03
    42c6:	9f 77       	andi	r25, 0x7F	; 127
    42c8:	df 91       	pop	r29
    42ca:	cf 91       	pop	r28
    42cc:	ff 90       	pop	r15
    42ce:	ef 90       	pop	r14
    42d0:	df 90       	pop	r13
    42d2:	cf 90       	pop	r12
    42d4:	bf 90       	pop	r11
    42d6:	af 90       	pop	r10
    42d8:	9f 90       	pop	r9
    42da:	8f 90       	pop	r8
    42dc:	08 95       	ret

000042de <rand_r>:
    42de:	0e 94 26 21 	call	0x424c	; 0x424c <do_rand>
    42e2:	08 95       	ret

000042e4 <rand>:
    42e4:	83 e1       	ldi	r24, 0x13	; 19
    42e6:	91 e0       	ldi	r25, 0x01	; 1
    42e8:	0e 94 26 21 	call	0x424c	; 0x424c <do_rand>
    42ec:	08 95       	ret

000042ee <srand>:
    42ee:	a0 e0       	ldi	r26, 0x00	; 0
    42f0:	b0 e0       	ldi	r27, 0x00	; 0
    42f2:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <next>
    42f6:	90 93 14 01 	sts	0x0114, r25	; 0x800114 <next+0x1>
    42fa:	a0 93 15 01 	sts	0x0115, r26	; 0x800115 <next+0x2>
    42fe:	b0 93 16 01 	sts	0x0116, r27	; 0x800116 <next+0x3>
    4302:	08 95       	ret

00004304 <__divmodsi4>:
    4304:	05 2e       	mov	r0, r21
    4306:	97 fb       	bst	r25, 7
    4308:	1e f4       	brtc	.+6      	; 0x4310 <__divmodsi4+0xc>
    430a:	00 94       	com	r0
    430c:	0e 94 99 21 	call	0x4332	; 0x4332 <__negsi2>
    4310:	57 fd       	sbrc	r21, 7
    4312:	07 d0       	rcall	.+14     	; 0x4322 <__divmodsi4_neg2>
    4314:	0e 94 04 21 	call	0x4208	; 0x4208 <__udivmodsi4>
    4318:	07 fc       	sbrc	r0, 7
    431a:	03 d0       	rcall	.+6      	; 0x4322 <__divmodsi4_neg2>
    431c:	4e f4       	brtc	.+18     	; 0x4330 <__divmodsi4_exit>
    431e:	0c 94 99 21 	jmp	0x4332	; 0x4332 <__negsi2>

00004322 <__divmodsi4_neg2>:
    4322:	50 95       	com	r21
    4324:	40 95       	com	r20
    4326:	30 95       	com	r19
    4328:	21 95       	neg	r18
    432a:	3f 4f       	sbci	r19, 0xFF	; 255
    432c:	4f 4f       	sbci	r20, 0xFF	; 255
    432e:	5f 4f       	sbci	r21, 0xFF	; 255

00004330 <__divmodsi4_exit>:
    4330:	08 95       	ret

00004332 <__negsi2>:
    4332:	90 95       	com	r25
    4334:	80 95       	com	r24
    4336:	70 95       	com	r23
    4338:	61 95       	neg	r22
    433a:	7f 4f       	sbci	r23, 0xFF	; 255
    433c:	8f 4f       	sbci	r24, 0xFF	; 255
    433e:	9f 4f       	sbci	r25, 0xFF	; 255
    4340:	08 95       	ret

00004342 <__muluhisi3>:
    4342:	0e 94 b4 21 	call	0x4368	; 0x4368 <__umulhisi3>
    4346:	a5 9f       	mul	r26, r21
    4348:	90 0d       	add	r25, r0
    434a:	b4 9f       	mul	r27, r20
    434c:	90 0d       	add	r25, r0
    434e:	a4 9f       	mul	r26, r20
    4350:	80 0d       	add	r24, r0
    4352:	91 1d       	adc	r25, r1
    4354:	11 24       	eor	r1, r1
    4356:	08 95       	ret

00004358 <__mulshisi3>:
    4358:	b7 ff       	sbrs	r27, 7
    435a:	0c 94 a1 21 	jmp	0x4342	; 0x4342 <__muluhisi3>

0000435e <__mulohisi3>:
    435e:	0e 94 a1 21 	call	0x4342	; 0x4342 <__muluhisi3>
    4362:	82 1b       	sub	r24, r18
    4364:	93 0b       	sbc	r25, r19
    4366:	08 95       	ret

00004368 <__umulhisi3>:
    4368:	a2 9f       	mul	r26, r18
    436a:	b0 01       	movw	r22, r0
    436c:	b3 9f       	mul	r27, r19
    436e:	c0 01       	movw	r24, r0
    4370:	a3 9f       	mul	r26, r19
    4372:	70 0d       	add	r23, r0
    4374:	81 1d       	adc	r24, r1
    4376:	11 24       	eor	r1, r1
    4378:	91 1d       	adc	r25, r1
    437a:	b2 9f       	mul	r27, r18
    437c:	70 0d       	add	r23, r0
    437e:	81 1d       	adc	r24, r1
    4380:	11 24       	eor	r1, r1
    4382:	91 1d       	adc	r25, r1
    4384:	08 95       	ret

00004386 <_exit>:
    4386:	f8 94       	cli

00004388 <__stop_program>:
    4388:	ff cf       	rjmp	.-2      	; 0x4388 <__stop_program>
